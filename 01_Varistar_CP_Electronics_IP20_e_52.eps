%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: 01_Varistar_CP_Electronics_IP20_e.pdf
%%Creator: Adobe Acrobat 24.5.0
%%For: miche
%%CreationDate: 3/3/2025, 9:41:02 PM
%%BoundingBox: 0 0 596 843
%%HiResBoundingBox: 0 0 595.5600 842.0400
%%CropBox: 0 0 595.5600 842.0400
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1090 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 9.1-c001 79.675d0f7, 2023/06/11-19:21:16        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   pdf:Producer="Microsoft® Word für Microsoft 365"
   pdf:Keywords="Cabinet,Varistar"
   dc:format="application/pdf"
   xmp:CreatorTool="Microsoft® Word für Microsoft 365"
   xmp:CreateDate="2023-04-24T13:41:04+02:00"
   xmp:ModifyDate="2025-02-05T08:15:35+01:00"
   xmpMM:DocumentID="uuid:853ECB80-DBFA-4A60-BC72-3E1477AF252F"
   xmpMM:InstanceID="uuid:853ECB80-DBFA-4A60-BC72-3E1477AF252F">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>nVent/SCHROFF</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Varistar</rdf:li>
    </rdf:Alt>
   </dc:description>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 52 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -842.04 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 842.04 li
595.56 842.04 li
595.56 0 li
cp
clp
gsave
0 842.04 mo
596 842.04 li
596 -.959965 li
0 -.959965 li
0 842.04 li
clp
0 841.9 mo
595.3 841.9 li
595.3 675.65 li
0 675.65 li
0 841.9 li
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
ef
78.1 765.4 mo
77.95 763.55 li
77.6 761.9 li
77 760.45 li
76.1 759.15 li
75 758.1 li
73.6 757.4 li
72 756.95 li
70.15 756.8 li
69.05 756.85 li
67.95 757.05 li
66.9 757.45 li
65.9 757.95 li
64.95 758.55 li
64.2 759.2 li
63.55 759.95 li
63.05 760.85 li
63.05 757.3 li
60 757.3 li
60 778.25 li
63.05 778.25 li
63.05 767.5 li
63.05 766.5 li
63.15 765.55 li
63.35 764.7 li
63.55 763.9 li
63.85 763.15 li
64.2 762.45 li
64.55 761.85 li
65 761.35 li
65.45 760.85 li
65.95 760.45 li
66.5 760.1 li
67.05 759.85 li
67.6 759.6 li
68.2 759.45 li
68.8 759.35 li
69.4 759.35 li
70.15 759.35 li
70.9 759.45 li
71.55 759.65 li
72.15 759.85 li
72.65 760.15 li
73.1 760.5 li
73.5 760.9 li
73.85 761.35 li
74.15 761.9 li
74.45 762.45 li
74.65 763.05 li
74.8 763.65 li
74.9 764.35 li
75 765.1 li
75.05 765.85 li
75.05 766.65 li
75.05 778.25 li
78.1 778.25 li
78.1 765.4 li
cp
102.8 746.6 mo
99.35 746.6 li
89.1 774.1 li
89 774.1 li
82.7 757.3 li
79.3 757.3 li
87.3 778.25 li
90.7 778.25 li
102.8 746.6 li
cp
119.1 767.15 mo
119.05 766.2 li
119.05 766.1 li
118.95 765.1 li
118.75 764.1 li
118.45 763.15 li
118.1 762.25 li
117.65 761.4 li
117.15 760.6 li
116.55 759.85 li
116.05 759.35 li
116 759.3 li
116 766.2 li
101.75 766.2 li
101.85 765.5 li
101.95 764.85 li
102.15 764.25 li
102.4 763.6 li
102.75 763 li
103.1 762.45 li
103.5 761.9 li
104 761.4 li
104.5 760.95 li
105.05 760.55 li
105.65 760.2 li
106.25 759.9 li
106.95 759.65 li
107.6 759.5 li
108.35 759.35 li
109.1 759.35 li
110.6 759.45 li
111.95 759.8 li
113.15 760.45 li
114.1 761.3 li
114.9 762.3 li
115.45 763.5 li
115.85 764.75 li
116 766.2 li
116 759.3 li
115.9 759.2 li
115.15 758.6 li
114.3 758.05 li
113.4 757.6 li
112.45 757.25 li
111.4 757 li
110.3 756.85 li
109.1 756.8 li
108 756.85 li
106.9 757 li
105.9 757.25 li
104.9 757.6 li
104 758.05 li
103.1 758.6 li
102.3 759.2 li
101.55 759.9 li
100.9 760.7 li
100.3 761.55 li
99.75 762.45 li
99.35 763.4 li
99 764.45 li
98.75 765.5 li
98.6 766.65 li
98.55 767.8 li
98.6 768.95 li
98.75 770.05 li
99 771.15 li
99.35 772.15 li
99.8 773.15 li
100.35 774.05 li
100.95 774.9 li
101.6 775.65 li
102.35 776.35 li
103.2 776.95 li
104.05 777.5 li
105.05 777.95 li
106.05 778.3 li
107.1 778.6 li
108.2 778.75 li
109.35 778.8 li
110.65 778.75 li
111.85 778.55 li
113.05 778.2 li
114.2 777.75 li
115.35 777.15 li
116.45 776.35 li
116.6 776.2 li
117.5 775.35 li
118.55 774.1 li
114.75 774.1 li
114.35 774.45 li
113.9 774.8 li
113.45 775.1 li
112.55 775.6 li
111.55 775.9 li
110.5 776.15 li
109.35 776.2 li
108.55 776.15 li
107.8 776.05 li
107.05 775.85 li
106.35 775.6 li
105.7 775.25 li
105.05 774.9 li
104.5 774.45 li
103.95 773.95 li
103.45 773.4 li
103 772.85 li
102.65 772.2 li
102.35 771.55 li
102.05 770.85 li
101.9 770.1 li
101.75 769.35 li
101.7 768.6 li
119.05 768.6 li
119.1 768.35 li
119.1 768.05 li
119.1 767.15 li
cp
139.8 765.4 mo
139.65 763.55 li
139.3 761.9 li
138.65 760.45 li
137.8 759.15 li
136.65 758.1 li
135.3 757.4 li
133.7 756.95 li
131.8 756.8 li
130.7 756.85 li
129.65 757.05 li
128.6 757.45 li
127.55 757.95 li
126.65 758.55 li
125.85 759.2 li
125.25 759.95 li
124.7 760.85 li
124.7 757.3 li
121.65 757.3 li
121.65 778.25 li
124.7 778.25 li
124.7 767.5 li
124.75 766.5 li
124.85 765.55 li
125 764.7 li
125.25 763.9 li
125.55 763.15 li
125.85 762.45 li
126.25 761.85 li
126.65 761.35 li
127.15 760.85 li
127.65 760.45 li
128.15 760.1 li
128.7 759.85 li
129.3 759.6 li
129.85 759.45 li
130.45 759.35 li
131.05 759.35 li
131.85 759.35 li
132.55 759.45 li
133.2 759.65 li
133.8 759.85 li
134.35 760.15 li
134.8 760.5 li
135.2 760.9 li
135.55 761.35 li
135.85 761.9 li
136.1 762.45 li
136.3 763.05 li
136.45 763.65 li
136.6 764.35 li
136.65 765.1 li
136.7 765.85 li
136.75 766.65 li
136.75 778.25 li
139.8 778.25 li
139.8 765.4 li
cp
154.55 757.3 mo
148.65 757.3 li
148.65 751.4 li
145.6 751.4 li
145.6 757.3 li
141.25 757.3 li
141.25 759.85 li
145.6 759.85 li
145.6 772.95 li
145.65 773.75 li
145.75 774.5 li
145.9 775.15 li
146.1 775.75 li
146.4 776.25 li
146.7 776.7 li
147.05 777.1 li
147.45 777.45 li
148 777.85 li
148.55 778.15 li
149.8 778.45 li
150.4 778.5 li
151.65 778.5 li
152.3 778.45 li
153.45 778.25 li
154 778.1 li
154.55 777.9 li
154.4 775.25 li
154 775.45 li
153.55 775.65 li
152.65 775.85 li
152.2 775.95 li
151.35 775.95 li
150.9 775.9 li
150.15 775.65 li
149.8 775.45 li
149.25 774.9 li
149 774.5 li
148.75 773.5 li
148.65 772.85 li
148.65 759.85 li
154.55 759.85 li
154.55 757.3 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
95.9501 743.45 mo
83 743.45 li
83 738.25 li
95.9501 738.25 li
95.9501 743.45 li
/1 
[/DeviceCMYK] /CSA add_res
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 842.04 ]ct
[13.69 0 0 5.94263 82.63 98.2186 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 37 
/H 16 
/M[37 0 0 -16 0 16 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 37 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 37 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 37 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 37 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
kJ%A2ITSE2!!Q65^VAp5#,J#q]=tnPriP@]!j9SqrVluVWMcZak4e!Fi.jT2!<<*XjQ>Uf^C%>s=>U3^
"];tJ^ZMX&Unb$'^:U0>XllS`Y/f/nrriAYWMcZWjpL%%5nX1u!&ip#k3Thc[XMC;#l+H%+M>ARXTYi)
U9D6*^&kXCXnJ[eVZNp<fCo7EWpJjNieg&:!Vl]s"m"b7^BD#r=uZi[!<5seXTY`&U8kg%^A5MCV"(>a
Xhr][s8UsGjojY&65BUn!<5%P^BD#s=uQcU!<36"Xo#4&Unb'(m_8_5p87to`nBYWp>uM:O$j]`li?pt
"M'(g2[]6Ync8Qh"KnSpY.<`0qkjLraOTDPqrS%AP"$/ek5YLs"M_^)4UgBOrtta;!iW01jM(Z%rhfe9
q;MAQjoV"m!VQN^!!EB+^V<.p!!HtKXf\M[^'(+%Vl/tCrs&N'bfo53,iJb'=T<$m!!Ga*^S.@[^'(@9
Xj,,bs6K[fm\csa=5a,^-KaG-(utYu%6]CD^]1_)^AbhJ\Z)S-Xl99\q8`K4rr_<^!Wa=5roWAD":R:q
J[tZmqS)C3"M(P+VQTfujo5D4`N/m6k5YVc(e0bMqr[n^mJm7o2Zd37\G!];]C*B8]<.g'or[NZ!nG;m
p8@6W"9B6+O5]fps&/Fg":7"jJ@G'`s.o8#"M1\/VQB<is5*;G!nY;knYcCHo)Jdl'`p^]iUQ%3]Y#<]
!!EQb=FRXD^B1O>[/%E<]W\*-l`L2epAY3G`NJ[-rhfhYj9>>Z"9B3&MW!j`$GX?h:^$h'1K](4kJ."u
#,JlF]<7m*k,e``VlJVPrrh#mY,A2^V[DSKj>?o;!>7YPi9050^V@HY"TS`_=FIR>^](>>Uq=@QY+hf]
Xnf($Vl-QOrVlrP_li1#$KgL32#mUW&jV30kN79~>

%%EndBinary
grestore
np
103.35 734.4 mo
85.85 734.4 li
85.85 717.4 li
103.35 717.4 li
103.35 734.4 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 842.04 ]ct
[18.2447 0 0 17.7556 85.4777 107.262 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 49 
/H 47 
/M[49 0 0 -47 0 47 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 49 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 49 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 49 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 49 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
hS06-;ABN[@emdqXT>TSrr2u@q5r_UqkjIlX8`,!UA:_Djosj7!s&U1q<$PK"hdeK$6E[P^\FqoXT>TS
rr2u@q5rMO!N)psrrAehVr$P;j[91P!<ud(k23oS^*rmd!'^7ohQ6eVr;QcYqQ94an>?9Nr;Qc1qPW65
!Tagh!<=MDk23oR;u-h$If7%]^Yc-neGB1F_>C@lVZ<dorrAbiVrm.<jo@jH!<A;[k23oR)u9mA3W$SK
XnhtsmJF$^VrjoQrrC+:Vr-V:"o86"+oCEZ^B"uTq[*<:qnM$jq#C5nhl$8LqkruHn)aTPq>gQuqrZeN
!$V.F!4)O;hlZ\R!O/^)Xl$#VqYC0gVr-V:#l+K$iV_j%^\GPD62:ifH2PG7XT7AVrrBh3Xl$#V]D;I,
U\q%fk2bY)/GT;HL]$;l^Aqg?$34$&^Yc-nanbr:eGQH+VZ<IerrB+tVr-V:?hj^&7Ju<>^[8c9Mtm\[
1]5#FXT635rrDQdXkouOrrCIEVr-V:\+p%))>rXS^Au"D$31\9^ZqroXn_qoXkouNs88ePjoFN=!<<6"
k5N-S^AoMS$37"&^YZ*frrBG)Xl62WVZ?;`s88eOjo>ba!<CsSk2*iQ7JR8jFT&uIXm3"ghtd9P^\t:k
VZ=7&rrAhmVr$P90`1tN!<@TIk2*iQB__u8:]8&bXT6<8rrCXKXmDtWVZ<RhrrB+uVr$P9BDDQ.5Q0a$
^AsGm$32aX^AtCnXT635rrD`jXkorUW;6Gnf_q`.k5=?A_ta<5'`I1M^AnZ<$31S7^YQ$es8B(oVrsuQ
s8AkOjo>JZ!<<3"k2!cR-jg=Y$36[s^YQ!lrV?Hn\c/_eVZ>uWrrB(uVs`^:jo>ne!<C[Lk2!cP8bi\n
DZ7E,XT7/PrrU*?XT5KZVZ=$urrAkoVqpJ82u*ISG5gXc^\PVEC\\;;9E)]^XT6?9rrCjRXkflTUA=fh
YPtHqk2k_*D>=2449"Bu^AsVr$32RT^YQ!l^\Rm0q#7DOVZ<mqrrD*YVqpJ8chRSA&H:h]^[8c9%/L;2
%0"#sXn_qqXk]iLs8JqOjo>JZ!<<3#k1m]O.esDQQG:2qXnf(!q"apk_l^&rVZ>cQrrT0tVqgD7&GZ>.
c0"0d^AtqG^ZE31:&,+tCVRX^XT5E]XT7&MrrU0AXo5-uW3#!V!3c4u!huTjrT4.Bj5T2$4S]!cD<Buq
^Tg?1!"!&IjhCe5q$II!^V?nQUh*=r:j)N7m]?K,q>UWTXf\M![Jg++or7&N!2TGj#.:A,k2tA+rVusF
jlPV)G52.=2$E((Za1>C!!*Rek.^nfq$I9Q^V?YC;uB>j;ig(C!4_k)"T5C(Za9N.!9!@EpSS"jq>UTa
Vl/A,q>^M>k2lZqq#LU-k2oZDq#CFf^$!-1%f$J3^]/*I:&[ifB<:9uq#CArpAY,nkGS+Ts/5l5q#CF)
j6>\-k2la@!WV<U!!*CZke@*Nq$R._s%iDa!E+g=XT8%is8Th+rrCpTVsC5\f_PRIXn;YoB'A@W'_qe0
_=R^.7(DNs!)WP"rsJd>oM#?sX6QeefD5IH`q031Yj/+dWql\pU@\Ed$/kR?o]?-=q#UM+s"F$F!<mr<
^ArEP$NENo?1gnm:kn;<!5eR3s5<hTp\t6Pl_a`Vq>^K*rrVfm!*ALK!.XeFs"FD1o)JeS[.1p0^At2-
$ND=MORl0I@]/Uq!4;M#s4m2F!42$iq>^Kcs*OD=!rr<*h<j>)h>%'S#mnA]Hh.4<!d<tG!"nu5"0J\Y
:\7?^:kS/;rVucp!iMsVo)A^NmAK^Y!p8WBnc/Y_mH+BNp]:B/!MLb0!!>*[^VB<R!&OBWriH3m=n>>g
@&37n!:]d`rhfbBnc&U!n#$05q#C?U!5J()!<_!Cjo?:o!W9\4C@V?)E:CUBD#+M=3;flZGY[m*!Dn7>
Xno."`;9N6m/3a]nFHSZl0tSNUAFoiaSb0#0_,2D54I\7Du'M7+T&nSUFZ9CpAb4FVt%M%,5_cL%[*"P
XT>/"o1]6hT^f/\s8Tq4VZ=U(rrBk)VZ?;bs8T%pjoN^-o)Jdlcgg,t$2af*!lMqO^Ar6D!!$j+^B(r'
rX&`NLVLV"XT<fGp.YW`9hp!)XT>TorVlr6Xf_Ds!:04U!:]QW!N=BErr`+oVl0@Q!'B`O!&X9/!TY0u
!<`\/k2sGS^B(Ajo)Je<U%5r"X+ul:^\Fo3Ug3Lc!EbubXTGiD_>UM2VZ=6srrC7AVtHqhU8=geVtfBT
fE1XE!<L+/joXD?_u8`k^B&HXo)Jc%m(`:s!j-uKoM#?^G3l@)VZ>rOrrD`YVtT6Q7e-NZ/,&-"k4QIi
ZTIaY!?[j"^\+]0V-rmh!Ebl[XnARlZhsdsrrCX<VtK0Qg]d6K!42+Uo=k<Q"S2TnIdk)P^[nQ.Khq;7
!/9mDo;;TKo)A^Ln#,d>!)rLi!WW4#n)j2U!OkAd!!&5P^[eK-WabQo!1E>Yq5=(e!3l%o!7pY;o&]u2
#P.oqSabe2^B&llo`+t\r4hp>n>u_I;"[N_A+6ViVZ>WGs6urUjoAc\!!!>pk3p%c\juGo!$1RDn#ZVj
BD,%"<V*?lXm`.fY4Vb`VsiaKi=,AZnE0,Q!J_-\!!3-#..G"=XT=G[pe:`nn?))U!8mMMn>H'Dp>u?q
pAb0onE0)P!PM;)!!%02^[/''XD.K)!.XmJp9!\Z!3>np!9s!Nm,e?/&GZ;+7.B@-^\khINY;6i!'9S`
lE()K;uB>i?14o\VZ>HIs7*#eVs<CEJboEI"RkL;^BM>f'*&PVm_@tf!I.NE9iH<)Xm)_aW:9fd!:]ES
l/i$.1]@@S0CJ!!^[SuA^2+G_%qtCGkcFu4;b^28m]G`O!N>MerrDQcVt?nOjoOR"rVupOmcK$~>

%%EndBinary
grestore
np
124.2 737.75 mo
107.2 737.75 li
107.2 720.25 li
124.2 720.25 li
124.2 737.75 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 842.04 ]ct
[17.7556 0 0 18.2609 106.822 103.91 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 47 
/H 48 
/M[47 0 0 -48 0 48 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
n@o-T.0'E?Zg#6oXTYN-]tC6+Xmi4g_uBZ:mB62]o;D*?"bm?a!%Qpkk4$+hI45-t8@.Qqn>u_gZN@hQ
VWb/OVZ=X6rrMMil)4%5"bm?a!%Qpkk5<!f^Ar$H!!*V2lG)kk!29>)!Oo/qXmr:hbPV;>[.C3jVt&mL
>PnI%!Slu&o"P0cq>^LVlG)nl!3H%2!35=dntuK/q>]`Xo&]q]q>^L4lK7iUr4`4Lq#CE/lbE"m!4DX:
lE0WTq#:>mn#-,^o&]oSq#CEVlfRfR!)WFj!5%R3o;r"gpq?a0rN5Ojo;;TFq#:>ql_j@:!&aNO!9<D-
oY1Ef!;QTp&*gq%XT5Es^&YY-Xn8Lk`qTMuVZ>lPjoDd`!!!&bk4HCg(\dt1?g>DuXT5g)^&Xi#Xn8af
Vt^2keEWt(jo>MY!!#XVk4QIh:AOql!!"#'^\+]/VYIk*[HXgdVZ>cOs66HYk549@1\^qM"R5(B^As5e
!!&8J^\4c0X7s=.YOSajXnJXm`:s93_WduljoDX[!!'q$k4ZOi(AIk0<W9c!^\4c0\G3c<V!+rSVt^2k
g$#@-jo>MY!!#1Gk4cUj:A=eh*Tt33XT50l^&YM)Xo>HsVZ>rTs6$<Sjo@13!!!/bk4l[kMY@)NQh\>b
^\Fo2X8'C/^#lHlVZ=X/rrBmuVtfBSX8;nq!!(%%k4l[k(&.b/=6@9mXT5g)^&XqjXoG<rVZ<[irrCa7
VtoHUjT>2W!'fW.q7co'p](:8n\=b3q5jXnpq?a8jfS?V!9X%Ujeqq:!&+*I!X7`KkN;WU!/L:K!1W)b
qQ0b!pq?dBXQ?S\VZ=U.rrBjrVu#NUVtU/kb2qd^^AnrB!!$-e^\Y_AXT5m+^&XqhXo#!rW;$;lfArk,
joOQFp](:[q<%&+qnE,'p](::j1kJn!2fP*!41^fqkjG[r;Z]pj/;e:!%msG!!VEFr4`5dpAb2_jhLi1
r2fsupV$X/j/r6W!6P!8!5RWmr8n!RpAb3;oB,T*r4`4Fp](:tikPDn!4M[:!2AJTrMKXop\t9GVrO]R
joOQFp](:\io^3S!)*(e!$L78riH4'V"hY([,J.cVZ>rTs5BmSjo?t-!!!2hk4[s:^Arr]!!&PJ^](>8
WV=+,YMlV_VZ=d3rrBe0Vs(&XjoD"I!!(C)jo`B5^(U2@!*eBrriH11pq?a&m]H)_!iMrpp\t6Di26\>
k2c[>!!#IGjoW<48GE/b,5].:^B1O>VYIk*ZeqkdVl/qVs50^Wk2n,n!;ZZq#2eSCM>$uMS_q3^WqX4-
YNW+`XoHH9rrB^hVuNaj!!(F(k5RC8!!$<t^ZrT6Xn]U1U>E$GrrCR*VuIM-!!*'jhWFP4!$g=7pV$X5
iN<'\pA`sHpAb0th<+G3!1rYon%\Y3!PP\mXnVhq]A9CZ!!(LHk2GJ&4Sf$X?eiErWqsF0U>2jNs7uZp
e(gl$)u9O79AJY2S=B`[!!"k>^\#8BYHPS9^&Y7hXoH-3s4aIOd/*eC')(JMjo`B5Q6cG0!(bhY"0J],
[/Rc>VV8-RVl.Q6rrN/eg8>&8k/7N(!!"M&k5E$rWLUZ\^\PYCXT>N,fWG+M!k#bAfr+f2!o))_n)iru
d_F54p8?`EdcT<!"fR&];HT7a^Y>joTS[Z(Dj^O+gSY4hhtd<Pf`%f/k5"-Cd:=F8)km8ni4fDnK4$S<
qZ$[s^VA^/"JCTk?VgPn!c+p?nYblS!l!Rfq#CAli8t-hA0M-P!!3ntk2j>\W.SJ9!VHHmFoST,XTY;R
EF2N7:&f_)VZOTiq=FXdl/h%0d:=F'rW)Zms$Z.e"K6r\2?E:Irtt%'"JCTk?Vg/cs&SKa"K/03htcX=
lK/2rA0M-C!:RZ*W.SJ9!U0U\XnJk"TS[Yq:[(UBVZOTiq<.eHjoa"A+p796q>g-%".WaW!TjC^$1k8$
S8hn3k"YkPo;;W?q=jpUs7>@SZQ]M3!;+#+4lQJAA+cr)X^^9as)dn2iW&rNo]?,XiW0!+otLK"iW'$;
^VBHD!,1@d!aVq1or%6XoDeihp#Z5aiW'#^jlQ3N!4:bd!?u[c^\4c0Vu09Q9`\@GriPml!41\b!9sK\
p>uA2iW&sHroX3pq7comkPt`+:N_u;r4hs-!1)hC"''&bRes5\VZ>H8s8N$"l.W*6VtT6QQ0/,L&4EGX
r9!^f!1*!P"<C9ZQG3+.p8n=apJ(BV"''&cReElWVZ>Q=rrVH=W;!4`joDFJ!!<d"Vrd[8otLJBo)Jq7
:NMi9^[o55XT2>l9`nC0J=5r0or%<Z!pSF;nu)0Cq>g9j!t[hqjmqR,^As>i!!F9;F-aQ-^\+]0PY_*L
"'0,dRI%'RVu!:kg%PFIl.W*'VtK0PM>$uP&4<8TmH4&U#ammW!$"aTQG2n(pqQI'#F]$p9ibqXRHL^E
VZ>QNrrVH=W9C/OjoMLerW!*56_ri+k3D+$^Bg5l!!"!6F-aQ(^\"W5RUAia<bR#OkH4KVrhfbPr;Qi_
g8O55o]?1T#6"T)&4<8TkiRB~>

%%EndBinary
grestore
np
121.35 750.35 mo
109.85 750.35 li
109.85 741.6 li
121.35 741.6 li
121.35 750.35 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 842.04 ]ct
[12.2419 0 0 9.51076 109.479 91.3096 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 33 
/H 25 
/M[33 0 0 -25 0 25 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 33 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 33 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 33 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 33 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
#J\$d:_a?^A*CZ0Xf\bVrr2u@kcOi^"K_Y'pS6rM#Nk1063@8q?L?nQjp/Z9]MK=N,%KiO"0J].ec,RK
b35u,VZa+$s7`;PV[)AHj?`qM$"!2bpZ;Oi]I!I_!@!He^]1J5rrBn#XTGDum/6k`pZ\RWjQ$aI!<EM9
q<%81s%iFt!DC/n^]2m\rrLoXm&g;hq>UK!VX15\55>3\46>Vlk5Q(h$3;,tmD&>o!5Ip'p&>#gmAKsd
qZ6Zs!<o(^k4Au]6G;j&o`"sOY4&LbrrKa/n#--cpAk:IjmV@3.eO,L(O,A`s8)Bf!5S*+s6'%S!2T1`
s/5l-o`5'rL@F@*G4Q%A41Xpss1n7+!U6fYXoG3grrBq2Vu!=kK(B!D,NJ@W!l)KXo*PL3DY(UEXf]e;
rrBt.XTGDuV"4NeTr4g]VZQ#C=RuOo"**qprkAJg+S,p@1pckiriH1:o)Aa[Yk>-sVZ?\hs8N#ud.F78
joMUjo)Sk1iUu@2^Aq+%$3:]Mp:pO-!7gZ?!6Or:r20Orr;ZNk!29+ar8muGo)Sjo@.ra[^B'QFo*PLM
U\MV$XT66/rrMl%poXFk!N>AVrrCjKVu,TWa:.Y@!>=/^k4uam=Uap0!=`<0^\Ou3cgq)9c2"IAVtm7]
rrAnkVtoHU9`jqf!<Q-ok4l[lTe,dB!@O31^\Fo3\,#Xq"8p$<Xo5BsVZEROoD\jXW;ELfjoO-Io)Sk$
b5:>p^B%gSoEkU,;Z+<'XT6N:s8N#ueGQHBVZ<L_rrB+tVtT6R?39a"!<P[ek4QIiZ8;(Z!@!L%^\+]0
YjhSjp\t6/riPgj!7CE<!V`JjVtK0Qi>M4f!=?.4k4?=gC_QCI!b9![o;r#2o)Ad5Xf_2m!2B&a!huTj
oB$'l"7lNp>it2>^B(i*o*YM@poXFq!O(bZs8Tn)VZ=d/s8SncjoOKdo)\lCn@o!J(A/%7.fHLAXT661
s8VrbVZ<I`s8V9OjoL);o`>('n%Sn96M:`d$NLS'XT>Tao`+?W!4hb%n)aZ3/bT5F!q!`'J/nIor<iQ<
mB$B(p&FEW!2fGhmH+G>"o&,u"73c&^&Ue$$NEofXT7)Ns8U[9VZ=+"s8T.djoOR)q#UL[nA"k8!K86#
$3DNd]]uU!_#"*2Y3MncVYC#g!plh_lK/,S$2af*%-6LB^\#8G@Nl-o:qaWYkcFj+rr3)PY-"hiV[''m
s8T*rVl/b@#@.W:"$ku1k5)j]^B\3l$5HCN^VB!7!6G0>"4s]XXluYfV>(#iWhu\lkiN+U#lt,njlY]U
~>

%%EndBinary
grestore
np
0 675.7 mo
595.3 675.7 li
595.3 0 li
0 0 li
0 675.7 li
.0374762 1 1 .00460822 cmyk
ef
465.9 439.15 mo
0 439.15 li
0 0 li
465.9 0 li
465.9 439.15 li
214.65 246.35 mo
211.25 246.55 li
207.9 247.25 li
204.7 248.35 li
201.65 249.95 li
198.85 251.95 li
196.3 254.4 li
194.1 257.25 li
192.3 260.4 li
191.05 263.65 li
190.3 267.05 li
190 270.45 li
190.2 273.85 li
190.9 277.2 li
192 280.4 li
193.6 283.45 li
195.6 286.25 li
198.05 288.8 li
200.9 291 li
322.65 371.85 li
325.75 373.65 li
329.05 374.9 li
332.45 375.65 li
335.85 375.95 li
339.25 375.75 li
342.6 375.05 li
345.8 373.95 li
348.85 372.35 li
351.65 370.35 li
354.2 367.9 li
356.4 365.05 li
358.15 361.9 li
359.45 358.6 li
360.2 355.25 li
360.45 351.85 li
360.25 348.45 li
359.6 345.1 li
358.45 341.9 li
356.85 338.85 li
354.85 336.05 li
352.4 333.5 li
349.55 331.3 li
227.85 250.45 li
224.7 248.65 li
221.4 247.4 li
218.05 246.65 li
214.65 246.35 li
376.9 112.7 mo
373.35 113.15 li
230.1 142.05 li
226.65 143.05 li
223.4 144.45 li
220.5 146.3 li
217.9 148.55 li
215.6 151.1 li
213.75 153.9 li
212.25 157 li
211.25 160.25 li
210.65 163.65 li
210.6 167.2 li
211.05 170.75 li
212 174.25 li
213.45 177.45 li
215.3 180.4 li
217.5 183 li
220.05 185.25 li
222.9 187.15 li
225.95 188.6 li
229.25 189.65 li
232.65 190.2 li
236.15 190.3 li
239.75 189.85 li
383 160.95 li
386.45 159.95 li
389.65 158.55 li
392.6 156.7 li
395.2 154.45 li
397.45 151.9 li
399.35 149.1 li
400.8 146 li
401.85 142.75 li
402.4 139.35 li
402.5 135.8 li
402.05 132.25 li
401.05 128.75 li
399.65 125.55 li
397.8 122.6 li
395.55 120 li
393 117.75 li
390.2 115.85 li
387.1 114.4 li
383.85 113.35 li
380.45 112.8 li
376.9 112.7 li
197.5 0 mo
155.05 63.8499 li
153.3 67 li
152.05 70.3 li
151.25 73.65 li
151 77.0999 li
151.2 80.4501 li
151.9 83.8 li
153 86.9999 li
154.6 90.0499 li
156.6 92.8499 li
159.05 95.3999 li
161.9 97.6 li
165 99.4 li
168.3 100.65 li
171.7 101.4 li
175.1 101.7 li
178.5 101.45 li
181.8 100.8 li
185.05 99.65 li
188.1 98.1 li
190.9 96.1 li
193.45 93.6499 li
195.65 90.7999 li
255.95 0 li
197.5 0 li
34.3001 0 mo
46.6999 61.6 li
47.7 65.0999 li
49.1001 68.3 li
50.95 71.1999 li
53.2 73.8001 li
55.75 76.1001 li
58.55 77.95 li
61.65 79.45 li
64.9001 80.4501 li
68.3 81.05 li
71.85 81.0999 li
75.4 80.6499 li
78.9001 79.7 li
82.0999 78.25 li
85.0001 76.4 li
87.65 74.2 li
89.9 71.6499 li
91.75 68.8 li
93.25 65.75 li
94.3 62.4999 li
94.8499 59.05 li
94.8999 55.55 li
94.4501 51.95 li
84.0001 0 li
34.3001 0 li
.0690623 1 1 .0129397 cmyk
f
335.85 375.95 mo
332.45 375.65 li
329.05 374.9 li
325.75 373.65 li
322.65 371.85 li
200.9 291 li
198.05 288.8 li
195.6 286.25 li
193.6 283.45 li
192 280.4 li
190.9 277.2 li
190.2 273.85 li
190 270.45 li
190.3 267.05 li
191.05 263.65 li
192.3 260.4 li
194.1 257.25 li
196.3 254.4 li
198.85 251.95 li
201.65 249.95 li
204.7 248.35 li
207.9 247.25 li
211.25 246.55 li
214.65 246.35 li
218.05 246.65 li
221.4 247.4 li
224.7 248.65 li
227.85 250.45 li
349.55 331.3 li
352.4 333.5 li
354.85 336.05 li
356.85 338.85 li
358.45 341.9 li
359.6 345.1 li
360.25 348.45 li
360.45 351.85 li
360.2 355.25 li
359.45 358.6 li
358.15 361.9 li
356.4 365.05 li
354.2 367.9 li
351.65 370.35 li
348.85 372.35 li
345.8 373.95 li
342.6 375.05 li
339.25 375.75 li
335.85 375.95 li
236.15 190.3 mo
232.65 190.2 li
229.25 189.65 li
225.95 188.6 li
222.9 187.15 li
220.05 185.25 li
217.5 183 li
215.3 180.4 li
213.45 177.45 li
212 174.25 li
211.05 170.75 li
210.6 167.2 li
210.65 163.65 li
211.25 160.25 li
212.25 157 li
213.75 153.9 li
215.6 151.1 li
217.9 148.55 li
220.5 146.3 li
223.4 144.45 li
226.65 143.05 li
230.1 142.05 li
373.35 113.15 li
376.9 112.7 li
380.45 112.8 li
383.85 113.35 li
387.1 114.4 li
390.2 115.85 li
393 117.75 li
395.55 120 li
397.8 122.6 li
399.65 125.55 li
401.05 128.75 li
402.05 132.25 li
402.5 135.8 li
402.4 139.35 li
401.85 142.75 li
400.8 146 li
399.35 149.1 li
397.45 151.9 li
395.2 154.45 li
392.6 156.7 li
389.65 158.55 li
386.45 159.95 li
383 160.95 li
239.75 189.85 li
236.15 190.3 li
175.1 101.7 mo
171.7 101.4 li
168.3 100.65 li
165 99.4 li
161.9 97.6 li
159.05 95.3999 li
156.6 92.8499 li
154.6 90.0499 li
153 86.9999 li
151.9 83.8 li
151.2 80.4501 li
151 77.0999 li
151.25 73.65 li
152.05 70.3 li
153.3 67 li
155.05 63.8499 li
197.5 0 li
255.95 0 li
195.65 90.7999 li
193.45 93.6499 li
190.9 96.1 li
188.1 98.1 li
185.05 99.65 li
181.8 100.8 li
178.5 101.45 li
175.1 101.7 li
71.85 81.0999 mo
68.3 81.05 li
64.9001 80.4501 li
61.65 79.45 li
58.55 77.95 li
55.75 76.1001 li
53.2 73.8001 li
50.95 71.1999 li
49.1001 68.3 li
47.7 65.0999 li
46.6999 61.6 li
34.3001 0 li
84.0001 0 li
94.4501 51.95 li
94.8999 55.55 li
94.8499 59.05 li
94.3 62.4999 li
93.25 65.75 li
91.75 68.8 li
89.9 71.6499 li
87.65 74.2 li
85.0001 76.4 li
82.0999 78.25 li
78.9001 79.7 li
75.4 80.6499 li
71.85 81.0999 li
.0446174 .94873 .802518 .00180056 cmyk
f
0 .300328 1 0 cmyk
%ADOBeginSubsetFont: DBAAAA+RobotoCondensed-Bold Initial
ct_T42Dict begin
-0.773 -0.27 1.746 1.055
 256 array 0 1 255 {1 index exch /.notdef put} for  /DBAAAA+RobotoCondensed-Bold
Type42DictBegin
[<0001000000090009000900094f532f32a3fbb1a20000009c00000060676c
796630f669f500004f6400003286686561640134d02d000000fc00000036
686865610f3813850000013400000024686d7478e3d73b2f000001580000
307a6c6f6361fa690622000031d400001a786d6178700d46007a00004c4c
000000206e616d6541fe6f6900004c6c000002f867646972000000000000
0000000000000004042102bc00050000059a05330000011f059a05330000
03d100660200000002000000000000000000e0000aff5000217f00000021
00000000474f4f4700200000ffff0862fdd500000862022b2000019f0000
0000043a05b000000020000300010000000223547ba729ae5f0f3cf50019
080000000000c4eff50e00000000d54c6c85f9cbfdd50dfe087300010009
000200000000000000010000076cfe0c00000e5ff9cbfc170dfe00010000
0000000000000000000000000b0203230068000000000000000000000000
0000000001d80000021600770291003e00000000000000000000000004a2
0047014b003f0296007902970038000000000000000001f7002402e8007b
0255007e02a6ffff040c005f040c009e040c0047040c0043040c003f040c
005f040c0064040c0044040c0063040c005a0232007f0000000000000000
0000000000000000000000000000000004c80016047e00750490005b0485
007503ed007503cf007504af005f04e90075022a008203ed002e046d0075
03d400750611007504e6007504d4005d048d007504d4005b046e00760452
004a045900340492006a04a0001505fe002d047b002104580010043e0048
00000000000000000000000000000000033300150000000003c5004903f6
006803ae004603f7004203d5004e02a000260407004503f0006002050067
01f7ffca03d400670205007405ef006903f0006103fb004703f600680000
000002a7006703a2003b0275001803f000610398001a0510002200000000
03920011039f005000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000002af
003e02af0037000000000000000000000000000000000000000002af0087
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000219007d0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000227
ffd900000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000003280027000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000004a80026
045f001e0467002606930026069300260000000005f0003a000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000002af003e02af008702af004c
03af004f03af005403af003a03af004e03af004903af003c03af003403af
003b03af008f03af005103b1003903ce000d03e4000f0526002b0409000d
03fc005803d2002d03cc004103e8005c042c004303f7005c042c00410436
005c053e005c0351005c03da005c036a002901ee006a0439005c04090047
034b005c0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000002af0037
02af003f02af004502af004902af003d02af004e02af004b000000000000
00000362005c03b7000000000000048b00780483007703d6006904880077
03d6006903e4005c03f5004003ec005c042c000e00000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000002af004c02af003f
02af004502af004902af003d02af004e02af004b0000000004bc005604d5
005604bd0077051b0056051c005603f8008903f1005703cb0021040f0036
03de006d03ab00440000000000000000000000000417006404e9007504e9
007504c3005804e70051076d00750000000000000000040c0041040c0063
040c0045040c0055040c0051040c003d040c005f040c0058040c0064040c
00bc0223ffd9000000000000000000000000000000000000000000000000
0219007d0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000042f004b000000000000000000000000000000000000000000000000
03cb00440406006803c60048040d0048040b004804100042040b00680000
00000000000003d7004e0407004300000000000000000000000000000000
00000000000000000000000000000000036e006400000000000000000000
000000000000000000000000000004980054000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
040c0047040c0043040c003f040c005f04200078043400770420005a0434
007300000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000028002800280028002800280047005f005f005f005f
00b200c100e6010b010b010b0120012d014301530183019601c001fb021a
024b0283029702da0311031d031d031d031d031d031d031d0339036b039b
03bf03d603eb041e043704450460047f048f04b104ca04fb051f05560580
05ba05cd05ed060306230643065c06730673067306730673067f067f06b8
06e7070f073c076c078d07c907ea0808082f084d085b088f08b008d80906
090609220956097a099909af09cd09cd09f30a0a0a0a0a0a0a0a0a0a0a0a
0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a
0a2f0a620a620a620a620a620a620a740a740a740a740a740a740a740a74
0a740a740a740a740a740a740a740a740a740a740a740a820a820a820a82
0a820a820a820a820a820a820a820a820a820a820a820a820a820a820a82
0a820a820a820a820a820a820a820a820a820a820a820a820a820a820a82
0a820a820a820a820a820a820a820a820a820a820a820a820a820a820a82
0a820a820a820a820a820a820a820a820a820a820a820a820a820a820a82
0a820a820a820a820a820a820a820a820a820a820a820a820a820a820a82
0a820a820a820a820a820a820a820a820a820a820a820a820a820a820a82
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a0a9a
0a9a0a9a0a9a0a9a0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa0aaa
0aaa0aaa0aaa0aaa0aaa0aaa0aaa0ab60ae10b070b470b810b810be50be5
0be50be50be50be50be50be50be50be50be50be50be50be50be50be50be5
0be50be50be50be50be50c0a0c1c0c470c790cb10cc50cf80d270d450d7f
0da60db90de50dfc0e150e350e540e6d0e890e9c0ed40efa0f300f540f85
0f9e0fbe0fce0fec10061014102d105f1073107310731073107310731073
107310731073107310731073107310731073107310731073107310731073
107310731073107310731073107310731073107310731073107310731073
107310731073107310731073107310731073107310731073107310731073
107310731073107310731073107310a610c210ec111a112d1160118e118e
118e11a412061206123c12591276129212ad12d012fb132c134713471347
134713471347134713471347134713471347134713471347134713471347
134713471347134713471347135013591362136b1374137d1386138613b7
13eb141114471482149514bd14e91508153a154e154e154e154e158915ad
15ce160b1641167a167a167a1682168a1692169a16a216aa16b216ba16c2
16ca16d216d216d216d216d216d216d216da16da16da16da16da16da16da
16da16da16da16da16da16da16da16da16da16da16da16da16da16da16da
16da16da16da16da16da16da16da16da16da16da16da16da16da16da16da
16da16da16da16da16da16da16da16da16da16da16da16da16da16da16da
16da16da16da16da16da16da16da16da16da16da16da16da16da16da16da
16da16da16da16da16da16da16da16da16da16da16da16da16da16da16da
16da16da16da16da16da16da16da16da16da16da16da16da16da16da16da
16da16da16da16da16da16da16da16da16da16da16da16da16da16da16da
16da16da16da16da16da16da16da16da16da16da16da16da16da16da16da
16da16da16da16da16da16da16da16da16da16da16da16da16da16da16da
16da16da16da16da16da16da16da16da16da16da16da16da16da16da16da
16da16da16da16da16da16da16da16da16da16da16da16da16da16da16da
16da170b170b170b170b170b170b170b171f174e177a17a817e31810183e
183e183e186f18aa18aa18aa18aa18aa18aa18aa18aa18aa18b218b218b2
18b218b218b218b219031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
190319031903190319031903190319031903190319031903190319031903
19031903190319031903190319031903190b1913191b1923192b1933193b
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
194319431943194319431943194319431943194319431943194319431943
1943000100000d3b004b0005002d00030001000000000000000000000000
000200010000000e00ae0003000104090000005e00000003000104090001
0020005e0003000104090002000800e20003000104090003004200b20003
000104090004002a00f40003000104090005001a011e0003000104090006
0028013800030001040900070054005e0003000104090008000c001e0003
00010409000900260160000300010409000b00140186000300010409000c
00140186000300010409000d005c019a000300010409000e005401f60043
006f00700079007200690067006800740020003200300031003100200047
006f006f0067006c006500200049006e0063002e00200041006c006c0020
005200690067006800740073002000520065007300650072007600650064
002e0052006f0062006f0074006f00200043006f006e00640065006e0073
0065006400200069007300200061002000740072006100640065006d0061
0072006b0020006f006600200047006f006f0067006c0065002e0047006f
006f0067006c0065003a0052006f0062006f0074006f00200043006f006e
00640065006e00730065006400200042006f006c0064003a003200300031
00370052006f0062006f0074006f00200043006f006e00640065006e0073
0065006400200042006f006c006400560065007200730069006f006e0020
0032002e0031003300380052006f0062006f0074006f0043006f006e0064
0065006e007300650064002d0042006f006c006400430068007200690073
007400690061006e00200052006f00620065007200740073006f006e0047
006f006f0067006c0065002e0063006f006d004c006900630065006e0073
0065006400200075006e0064006500720020007400680065002000410070
00610063006800650020004c006900630065006e00730065002c00200056
0065007200730069006f006e00200032002e00300068007400740070003a
002f002f007700770077002e006100700061006300680065002e006f0072
0067002f006c006900630065006e007300650073002f004c004900430045
004e00530045002d0032002e003000>
[12935 ] AllocGlyphStorage
]def 
92 28 
PrepFor2015
Type42DictEnd

1 0 5 <> DBAAAA+RobotoCondensed-Bold AddT42Char 
1 1594 38 <00020016000004b405b00007000a000033012101210321031321031601c7
010d01cafec74efe6f4e8e01118905b0fa50012afed6021f0208>DBAAAA+RobotoCondensed-Bold AddT42Char 
1 2402 51 <000100750000047005b000090000011121011121112101110470fedafe52
fed9012701ae05b0fa5003bbfc4505b0fc4403bc>DBAAAA+RobotoCondensed-Bold AddT42Char 
1 3326 70 <00020049ffec0386044e001d002700002126270606232226353436333335
342322152134363332161511141617152532363735232206151402690f09
20644a83b7d4da4c626afee5d7b6a1d51314fe3d2e421043504c22322b3d
b093a5c157857c8ecba8befe205c722911cb261ae1624778>DBAAAA+RobotoCondensed-Bold AddT42Char 
1 3534 72 <00010046ffec0375044e0019000025323521060623220235353412333216
1721342322061515141601ef7c010a01dda3dad4d4d9aed301fef67e5d2f
2ed7a0b9d20112f84ef80112d8d0bd948b4e8f90>DBAAAA+RobotoCondensed-Bold AddT42Char 
1 3704 74 <0002004effec039b044e0013001b00002506062322023535101233201115
2116163332370122060721352626038b2bb98bddf1e5cc019cfdcf05655b
8f5dfee34a4306011b023c8e3a680108eb590107010ffdf281816762022a
697519626300>DBAAAA+RobotoCondensed-Bold AddT42Char 
1 3986 77 <000100600000038c06000011000001220711211121113633321615112111
342601f45029fee5011b5c8786a8fee53f036249fce70600fddb73bee6fd
5602ac684e00>DBAAAA+RobotoCondensed-Bold AddT42Char 
1 4052 78 <000200670000019c05e9000b000f00001334363332161514062322260511
21116754474654544647540129fee4055242555542415555d7fbc6043a00
>DBAAAA+RobotoCondensed-Bold AddT42Char 
1 4278 82 <0001006900000585044e0020000001220711211121173633321617363332
161511211134262322071615112111342601f74a29fee50109085e9c4b77
245dab83a0fee53c36502501fee63c03624dfceb043a6478454c91bae3fd
4f02b16c45621618fd2e02af6b48>DBAAAA+RobotoCondensed-Bold AddT42Char 
1 4448 84 <00020047ffec03b3044e000d001700001335341233321215151402232202
0115103332113510232247edc8caededc8c9ee011b9c9a9c9a01f947ff01
0ffef1ff47fffef2010e014647fede0122470123>DBAAAA+RobotoCondensed-Bold AddT42Char 
1 4620 87 <0001006700000280044e000d000001220711211121173633321703260220
7628fee5010b0844752e1f0332033165fd34043a75890cfee708>DBAAAA+RobotoCondensed-Bold AddT42Char 
1 4780 89 <00010018ffec024805450016000025060623222635112335331121113315
231114163332370247214a327e967e7e011a9191272e271c070d0e94ad02
38d5010bfef5d5fde7442c08>DBAAAA+RobotoCondensed-Bold AddT42Char 
1 0 0 <00050068000002bb05b0000300060009000c000f00003311211101131303
1311051113032103680253fdfdd8d7bfe5fe08e2bf01afd705b0fa50057a
fda3025dfd5efd7e050408fb0c027afd5e025d00>DBAAAA+RobotoCondensed-Bold AddT42Char 
DBAAAA+RobotoCondensed-Bold /CharStrings get begin
/g5 5 def
/g38 38 def
/g51 51 def
/g70 70 def
/g72 72 def
/g74 74 def
/g77 77 def
/g78 78 def
/g82 82 def
/g84 84 def
/g87 87 def
/g89 89 def
end
DBAAAA+RobotoCondensed-Bold /Encoding get
dup 32 /g5 put
dup 65 /g38 put
dup 78 /g51 put
dup 97 /g70 put
dup 99 /g72 put
dup 101 /g74 put
dup 104 /g77 put
dup 105 /g78 put
dup 109 /g82 put
dup 111 /g84 put
dup 114 /g87 put
dup 116 /g89 put
pop
end
%ADOEndSubsetFont
/GNBUGJ+RobotoCondensed-Bold /DBAAAA+RobotoCondensed-Bold findfont ct_VMDictPut
/GNBUGJ+RobotoCondensed-Bold*1 
[32{/.notdef}rp /g5 32{/.notdef}rp /g38 12{/.notdef}rp /g51 18{/.notdef}rp /g70 
/.notdef /g72 /.notdef /g74 2{/.notdef}rp /g77 /g78 3{/.notdef}rp 
/g82 /.notdef /g84 2{/.notdef}rp /g87 /.notdef /g89 139{/.notdef}rp]
GNBUGJ+RobotoCondensed-Bold nf
GNBUGJ+RobotoCondensed-Bold*1 [10.56 0 0 -10.56 0 0 ]msf
60.624 126.86 mo
(North America )
[6.46272 5.29057 3.50593 3.24199 5.13221 7.66651 6.34664 7.80388 5.05829 3.46368 2.52383 4.91047 
4.92089 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: KADAAA+Roboto-Medium Initial
ct_T42Dict begin
-0.906 -0.27 2.051 1.055
 256 array 0 1 255 {1 index exch /.notdef put} for  /KADAAA+Roboto-Medium
Type42DictBegin
[<0001000000090009000900094f532f32a333b23c0000009c00000060676c
79660294783700004aa400001f26686561640292cb07000000fc00000036
686865611097138e0000013400000024686d7478e60227d0000001580000
2bee6c6f63610b2412f900002d4800001a786d6178700d45007c000047c0
000000206e616d653ac26eba000047e0000002c267646972000000000000
0000000000000004049b01f400050000059a05330000011f059a05330000
03d100660200000002000000000000000000e0000aff5000217f00000021
00000000474f4f4700400000ffff0862fdd500000862022b2000019f0000
0000043a05b0000000200003000100000002235450ce13925f0f3cf50019
080000000000c4eff50e00000000d54c675ff8befdd5106a087300000009
000200000000000000010000076cfe0c00001102f8befbc3106a00010000
00000000000000000000000008bc038c0064000000000000000000000000
0000000001fe000002250090029800650000000000000000000000000000
0000000000000000000000000000000000000000000001c3001d02a10047
023c0088032b000200000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000005530012050d009505390066053a
009504860095046600950573006a05b00095024200a40471002d050b0095
045500950701009505af009505860066051e00950000000004ff009504d5
004a04dc002d0538007e052e0012070b00310000000004e0000800000000
0000000000000000000000000000000000000000000000000455005b0481
007d0431005004850050044b005402d6002d048900520471007a020c007d
00000000042d007d020c008c06f7007d0473007a048e00500481007d0000
000002d0007d0422004c02aa0008047200770000000005f2002200000000
03e5000c0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000021b00900000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000039c002d000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000051b002d
04a8001904bd002d0724002d0724002d0000000006b7004c000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000043d00050000000006080029047c0009
04840067043c00250435003f045d007600000000046d007604c0005004dd
00760606007603ba0076045c007603d6002501fd008504de007604a70055
03c600760000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000003e10076043b000a000000000544009b0528009b04310081053a009b
042e0081047b00760480005004610076049e000900000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000057b006c05a3
006c0586009b05e1006c0000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000005b0009505b0
0095057500660598006508ac009500000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
021b00900000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000489007d043d0051049900500493005004a1004c0494007d0000
000000000000044b00540489005100000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000002a002a002a002a002a002a00490061
00610061006100610061006100610061006100760083009900a900a900a9
00a900a900a900a900a900a900a900a900a900a900a900a900a900a900a9
00c500fc012e0153016a017f01b601ce01dc01f902170227024802600294
02ba02ba02e503200332035103670388038803a103a103a103a103a103a1
03a103a103dc040d04380468049b04bc04fc051b0538053805560564059a
05b905e7061806180634066b069006b006b006cf06cf06f506f506f506f5
06f506f506f506f506f506f506f506f506f506f506f506f506f506f506f5
06f506f506f506f506f506f506f506f506f506f506f506f506f506f506f5
06f506f506f506f506f506f506f506f506f506f506f506f506f506f50703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307030703070307030703070307030703
070307030703070307030703070307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
071307130713071307130713071307130713071307130713071307130713
0713071307130713071307130713071307130713071f0749076e07ad07e6
07e6084f084f084f084f084f084f084f084f084f084f084f084f084f084f
084f084f084f084f084f084f084f084f084f084f084f084f084f084f084f
084f084f084f084f084f084f084f08680868088708a008bf08d109090932
093209550985099d09be09ce09ec0a060a140a2c0a5e0a730a730a730a73
0a730a730a730a730a730a730a730a730a730a730a730a730a730a730a73
0a730a730a730a730a730a730a730a730a730a730a730a730a730a730a73
0a730a730a730a730a730a730a730a730a730a730a730a730a730a730a73
0a730a730a730a730a730a730a730a730a730a730a730a730a730a730a73
0a730a730a730a730a8a0aed0aed0b260b430b600b7c0b970bb90be60c19
0c330c330c330c330c330c330c330c330c330c330c330c330c330c330c33
0c330c330c330c330c330c330c330c330c330c330c330c330c330c330c33
0c330c330c650c9d0cc30cf90cf90cf90cf90cf90cf90cf90cf90cf90cf9
0cf90cf90d1c0d3e0d7c0db40ded0ded0ded0ded0ded0ded0ded0ded0ded
0ded0ded0ded0ded0ded0ded0ded0ded0ded0ded0ded0df50df50df50df5
0df50df50df50df50df50df50df50df50df50df50df50df50df50df50df5
0df50df50df50df50df50df50df50df50df50df50df50df50df50df50df5
0df50df50df50df50df50df50df50df50df50df50df50df50df50df50df5
0df50df50df50df50df50df50df50df50df50df50df50df50df50df50df5
0df50df50df50df50df50df50df50df50df50df50df50df50df50df50df5
0df50df50df50df50df50df50df50df50df50df50df50df50df50df50df5
0df50df50df50df50df50df50df50df50df50df50df50df50df50df50df5
0df50df50df50df50df50df50df50df50df50df50df50df50df50df50df5
0df50df50df50df50df50df50df50df50df50df50df50df50df50df50df5
0df50df50df50df50df50df50df50df50df50df50df50df50df50df50df5
0df50df50df50df50df50df50df50df50df50df50df50df50df50df50df5
0df50df50df50df50df50df50df50df50df50df50df50df50e260e520e82
0ec20ef00f210f210f210f530f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f930f930f930f930f930f930f930f930f930f930f930f93
0f930f930f930f93000100000d3b00500005002a00020001000000000000
000000000000000200010000001000c60003000104090000005e00000003
000104090001001a006c0003000104090002000e00900003000104090003
0032005e0003000104090004001a006c0003000104090005001a009e0003
000104090006001a00b80003000104090007004000d20003000104090008
000c001e000300010409000900260112000300010409000b001401380003
00010409000c00140138000300010409000d005c014c000300010409000e
005401a80003000104090010000c00d20003000104090011000c007a0043
006f00700079007200690067006800740020003200300031003100200047
006f006f0067006c006500200049006e0063002e00200041006c006c0020
005200690067006800740073002000520065007300650072007600650064
002e0047006f006f0067006c0065003a0052006f0062006f0074006f0020
004d0065006400690075006d003a00320030003100370052006500670075
006c0061007200560065007200730069006f006e00200032002e00310033
00380052006f0062006f0074006f002d004d0065006400690075006d0052
006f0062006f0074006f0020006900730020006100200074007200610064
0065006d00610072006b0020006f006600200047006f006f0067006c0065
002e00430068007200690073007400690061006e00200052006f00620065
007200740073006f006e0047006f006f0067006c0065002e0063006f006d
004c006900630065006e00730065006400200075006e0064006500720020
00740068006500200041007000610063006800650020004c006900630065
006e00730065002c002000560065007200730069006f006e00200032002e
00300068007400740070003a002f002f007700770077002e006100700061
006300680065002e006f00720067002f006c006900630065006e00730065
0073002f004c004900430045004e00530045002d0032002e0030000000>
[7975 ] AllocGlyphStorage
]def 
92 28 
PrepFor2015
Type42DictEnd
1 194 17 <0001001dfeb8015d00eb0009000025151406072736363535015d6756832a
3cebac66da474d43905eb500>KADAAA+Roboto-Medium AddT42Char 
1 1742 60 <00010031000006e505b0000c00000101230101230133130133011306e5fe
b1f3feebfee5f2feb0fbe20116d40113df05b0fa500426fbda05b0fbbd04
43fbb9044700>KADAAA+Roboto-Medium AddT42Char 
1 1858 70 <0002005bffec03fc044e001e002800002126270606232226353424333335
342623220615233436333216151114171525323637352320151416030412
0a2f8e60a2ce0102ea995f5f5767f2f1cdb6ed29fdfd547a1983fef05825
413248ba8aadb8475565563e80ccbabafe20925711af5131ccb54158>KADAAA+Roboto-Medium AddT42Char 
1 2074 72 <00010050ffec03f5044e001b000025323637330606232202353534123332
161723262623220615151416023a587a05e405ffb5faf2f3f9c4f005e405
7063946362af67509ddd0140df24de0141e4b3577ddb812483d9>KADAAA+Roboto-Medium AddT42Char 
1 2614 78 <0002007d0000019105d5000b000f00001334363332161514062322260511
23117d49414149494141490102f3055438494938384949e2fbc6043a>KADAAA+Roboto-Medium AddT42Char 
1 2672 80 <0001007d000004370600000c000021010711231133113701210101031efe
bf6df3f34d012b0124fe6d01be01d270fe9e0600fc8a600150fe3efd8800
>KADAAA+Roboto-Medium AddT42Char 
1 3120 87 <0001007d000002b5044e000e000001220711231133173636333217072602
51a939f2e806287a5231250232036480fd1c043a7a424c0de508>KADAAA+Roboto-Medium AddT42Char 
1 3424 92 <00010022000005cd043a000c00000101230303230133131333131305cdfe
d8c8e8e4c7fed8edafddb8e1ac043afbc602e6fd1a043afd1e02e2fd1402
ec00>KADAAA+Roboto-Medium AddT42Char 
1 0 0 <000500640000032805b0000300060009000c000f00003311211109020301
110511010321016402c4fd9a01020101e50112fda8010ce40203feff05b0
fa50057afda2025efd5efd7c05080cfb100278fd5e025e00>KADAAA+Roboto-Medium AddT42Char 
KADAAA+Roboto-Medium /CharStrings get begin
/g17 17 def
/g60 60 def
/g70 70 def
/g72 72 def
/g78 78 def
/g80 80 def
/g87 87 def
/g92 92 def
end
KADAAA+Roboto-Medium /Encoding get
dup 44 /g17 put
dup 87 /g60 put
dup 97 /g70 put
dup 99 /g72 put
dup 105 /g78 put
dup 107 /g80 put
dup 114 /g87 put
dup 119 /g92 put
pop
end
%ADOEndSubsetFont
/GNBUGK+Roboto-Medium /KADAAA+Roboto-Medium findfont ct_VMDictPut
/GNBUGK+Roboto-Medium*1 
[44{/.notdef}rp /g17 42{/.notdef}rp /g60 9{/.notdef}rp /g70 /.notdef /g72 
5{/.notdef}rp /g78 /.notdef /g80 6{/.notdef}rp /g87 4{/.notdef}rp /g92 
136{/.notdef}rp]
GNBUGK+Roboto-Medium nf
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
60.624 142.46 mo
(Warwick,)
[7.54876 4.55827 2.99908 6.35589 2.18109 4.4219 4.44746 0 ]xsh
%ADOBeginSubsetFont: KADAAA+Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGK+Roboto-Medium gcheck setglobal} if
1 924 46 <000100a4000001a005b0000300000111231101a0fc05b0fa5005b000>GNBUGK+Roboto-Medium AddT42Char 
1 1396 55 <00020095000004de05b0000e001700002101211123112132041514060701
1501112132363534262303d0fedcfee5fc0200fb01128e7d0147fcb30104
8889828f0231fdcf05b0e0d792c634fda00d04e5fe1789687187>GNBUGK+Roboto-Medium AddT42Char 
GNBUGK+Roboto-Medium /CharStrings get begin
/g46 46 def
/g55 55 def
end
GNBUGK+Roboto-Medium /Encoding get
dup 73 /g46 put
dup 82 /g55 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGK+Roboto-Medium*1 
[44{/.notdef}rp /g17 28{/.notdef}rp /g46 8{/.notdef}rp /g55 4{/.notdef}rp /g60 
9{/.notdef}rp /g70 /.notdef /g72 5{/.notdef}rp /g78 /.notdef /g80 
6{/.notdef}rp /g87 4{/.notdef}rp /g92 136{/.notdef}rp]
GNBUGK+Roboto-Medium nf
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
98.064 142.46 mo
(RI,)
[5.2824 2.40262 0 ]xsh
%ADOBeginSubsetFont: KADAAA+Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGK+Roboto-Medium gcheck setglobal} if

1 0 5 <> GNBUGK+Roboto-Medium AddT42Char 
1 338 38 <000200120000054305b00007000a00003301330121032103132103120226
e30228fef877fdcc76bd01a7d405b0fa500154feac021f025e00>GNBUGK+Roboto-Medium AddT42Char 
1 1482 56 <0001004affec048a05c40026000001342627262435342433320015233426
2322061514161716161514042322242635331416333236038d79bed0fef2
011de7f70116fc868e857f999cf5ebfee7ed8cfefba9fdb7868485017858
6b3a3fcab3b0e3fef9b66b897356526c2d48d8adb8d666cc9a8a7a6c>GNBUGK+Roboto-Medium AddT42Char 
1 1636 58 <0001007effec04be05b00011000001331114042322243511331114163332
363503c1fdfec2e3e9fecafb9f85879d05b0fc33fafdfdfa03cdfc339c91
919c>GNBUGK+Roboto-Medium AddT42Char 
GNBUGK+Roboto-Medium /CharStrings get begin
/g5 5 def
/g38 38 def
/g56 56 def
/g58 58 def
end
GNBUGK+Roboto-Medium /Encoding get
dup 32 /g5 put
dup 65 /g38 put
dup 83 /g56 put
dup 85 /g58 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGK+Roboto-Medium*1 
[32{/.notdef}rp /g5 11{/.notdef}rp /g17 20{/.notdef}rp /g38 7{/.notdef}rp /g46 
8{/.notdef}rp /g55 /g56 /.notdef /g58 /.notdef /g60 9{/.notdef}rp 
/g70 /.notdef /g72 5{/.notdef}rp /g78 /.notdef /g80 6{/.notdef}rp 
/g87 4{/.notdef}rp /g92 136{/.notdef}rp]
GNBUGK+Roboto-Medium nf
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
110.66 142.46 mo
(USA )
[5.5209 5.14612 5.67432 0 ]xsh
%ADOBeginSubsetFont: MADAAA+GillSansMT Initial
ct_T42Dict begin
-0.16 -0.281 1.039 0.918
 256 array 0 1 255 {1 index exch /.notdef put} for  /MADAAA+GillSansMT
Type42DictBegin
[<00010000000c000c000c000c4f532f326d5b9380000000cc000000566376
74202d1c41f200000124000001e46670676d0fb0cef70000030800000569
676c796603d5aaca0000222800000bd868656164c4be1f52000008740000
0036686865610e7a058a000008ac00000024686d747857c809b6000008d0
000003066c6f636119b416ac00000bd80000025a6d617870048205c80000
0e34000000206e616d658482d56800000e54000010cf70726570c5e657fb
00001f240000030367646972000000000000000000000000000103420190
00050008059a05330000008d059a0533000001a8006602120802020b0502
020104020203000000030000000000000000000000004d4f4e4f00400020
00720587fe290131076f01d8200000030000000000000575001400000575
001400000000000000000000000000000000000000000398001400000000
ffec00000000ffec0000000000000000fe29000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000008000000080000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000cf000000c8000000b8000000b8000000ba00000000000000000000
00000000000000000000000000be000000b9009600a4009800a400730000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000f400f40000000000000000009a009a005c
005c007d007d004c004c026a02ab008302fa0344008f00b600aa005c009c
00c1007300e90073027000ba0156012e00d300d3008c007d004c010200a0
0068007402ac009e00680074007a02d7007000c500ab00a20262024e020e
009601e301b202700096036e028902b40258020d020a00a000b0403a3938
37363534333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a
191817161514131211100f0e0d0c0b0a090807060504030201002c01b018
4358b119072b1b212121592d2c01b0184358b11a072b1b212121592d2c01
b0184358b0032510f221b000121b212121592d2c01b0184358b11b072b1b
212121592d2c01b0184358b11c072b1b212121592d2c01b0184358b11d07
2b1b212121592d2c01b0184358b11e072b1b212121592d2c4eb00014b046
234344b0032510b10046e6b00013b00114b00010f221b001134db000122d
2c01b018435845646a234569b01943646060b0462344231020b046f02fb0
00121b21212121592d2c01b10b0a432343650a2d2c00b10a0b4323430b2d
2c00b0462370b101463e01b0462370b10246453ab10200080d2d2cb0122b
b0022545b00225456ab0408b60b0022523442121212d2cb0132bb0022545
b00225456ab8ffc08c60b0022523442121212d2cb000b0122b2121212d2c
b000b0132b2121212d2c01b00643b00743650a2d2c2069b04061b0008b20
b12cc08a8cb8100062602b0c642364615c58b00361592d2cb10003254568
5458b0032545b0032545606820b004252344b0042523441bb00325204568
208a2344b00325456860b003252344592d2cb00325204568208a2344b003
25456860b0032523442d2cb00943588721c01bb01243588745b0112bb047
2344b0477ae41b038a45186920b04723448a8a8720b0a05158b0112bb047
2344b0477ae41b21b0477ae4595959182d2c208a4523456860442d2c456a
422d2c01182f2d2c01b00425b004254964234564696120b080626ab00225
b00225618cb0462344218a10b046f6212d2c01b0022545b002254564606a
b00325456a6120b00425456a208a8b65b0042523448cb00325234421212d
2c01456823456961b00325456a6120b00425456a208a8b65b0042523448c
b00325234421212d2c018a8a45642345646164422d2c01b0022543b04054
b0022543b000545a58b003252045b040614459b0022543b00054b0022543
b040545a58b004252045b040604459212121212d2c014b525843b0022545
2361441b2121592d2c014b525843b00225452360441b2121592d2c4b5258
45441b2121592d2c0120b003252349b04060b0206320b000525823b00225
3823b002256538008a63381b212121212159012d2c4b505845441b212159
2d2c01b005251023208af500b0016023edec2d2c01b005251023208af500
b0016123edec2d2c01b0062510f500edec2d2c462346608a8a462320468a
608a61b8ff8062232010238ab14b4b8a70456020b0005058b00161b8ffba
8b1bb0468c59b0106068013a2d2c2045b003254652583f1b2111592d2c20
45b003254650583f1b2111592d2c00b00743b006430b2d2c4b5258b00425
b0042549b00425b00425496120b0005458212043b0005558591bb0405458
2043b0005458591b2043b00054581bb00325b8ffc0385959595921212121
2d2c4b52584365381b2121592d2c4b525843381b2121592d2c21210c6423
648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b0
02602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c
0c6423648bb84000626023212d2cb4000100000015b00826b00826b00826
b008260f10161345683ab001162d2cb4000100000015b00826b00826b008
26b008260f1016134568653ab001162d2cb0134358031b02592d2cb01343
58021b03592d2cb00a2b2310203cb0172b2d2cb0282b8a102320d023b010
2bb00558c01b3c59201011b00012012d2c4b53234b515a5820458a60441b
2121592d2c4b53234b515a58381b2121592d2c01b0022510d023c901b001
13b0001410b0013cb001162d2c01b00013b001b0032549b0031738b00113
2d000000000100000001a6663639f8bd5f0f3cf5001b080000000000ab78
97a600000000b30e9732feb4fdbe08540758000000090001000000000000
00010000076ffe2800000856feb4feb40854000100000000000000000000
00000000005708000100000000000239000002390000022b009802d5005e
000000000000000000000000000000000000000000000000000000000000
000004ac0072000000000000000001c10066000000000400003f0400019e
040000460400008304000017040000660400005c04000064040000420400
004a00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000063f00960000000000000000
0000000000000000000000000000000004d5002300000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000414005a03d500540000
0000000000000000000000000000000000000000000001c1008500000000
00000000000000000000000000000000032b008d00000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000015001500150015005000770077007700770077007700770077
007700a700a700a700c400c401170130019c0221026a02cf034703800409
047504750475047504750475047504750475047504750475047504750475
0475047504750475047504d304d304d304d304d304d304d304f404f404f4
04f404f404f404f404f404f404f404f404f404f404f404f404f405370598
05980598059805980598059805b605b605b605b605b605b605ec05ec05ec
05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec
05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec
05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec
05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec
05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec
05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec
05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec
05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec
05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec
05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec
05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec
05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec
05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec
05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec05ec
05ec05ec000000010000012c002e00030000000000020010002f00960000
02ac05690000000000000032025e000100000000000000b9000000010000
00000001000c00c40001000000000002000700d10001000000000003001f
00b90001000000000004000c00c40001000000000005000c00d800010000
00000006000a00e400010000000000070067005200010000000000080013
00ee000100000000000900090101000100000000000a02de010a00010000
0000000b003303e8000100000000000c0034041b0003000104030002000c
044f00030001040500020010045f0003000104060002000c046f00030001
040700020010047b00030001040800020010048b00030001040900000172
049b0003000104090001001806230003000104090002000e063d00030001
04090003003e060d00030001040900040018062300030001040900050018
064b000300010409000600140663000300010409000700ce067700030001
040900080026074500030001040900090012076b000300010409000a05bc
077d000300010409000b00660d39000300010409000c00680d9f00030001
040a0002000c044f00030001040b000200100e0700030001040c0002000c
044f00030001040e0002000c0e170003000104100002000e0e2700030001
0413000200120e350003000104140002000c044f00030001041500020010
044f0003000104160002000c044f0003000104190002000e0e4700030001
041b000200100e1700030001041d0002000c044f00030001041f0002000c
044f0003000104240002000e0e5500030001042d0002000e0e6300030001
080a0002000c044f0003000108160002000c044f000300010c0a0002000c
044f000300010c0c0002000c044f4469676974697a656420646174612063
6f7079726967687420546865204d6f6e6f7479706520436f72706f726174
696f6e20313939312d313939352e20416c6c207269676874732072657365
727665642e2047696c6c2053616e73a820697320612074726164656d6172
6b206f6620546865204d6f6e6f7479706520436f72706f726174696f6e20
7768696368206d6179206265207265676973746572656420696e20636572
7461696e206a7572697364696374696f6e732e4d6f6e6f74797065202d20
47696c6c2053616e73204d5420526567756c617256657273696f6e20312e
363547696c6c53616e734d544d6f6e6f74797065205479706f6772617068
79457269632047696c6c4d6f6e6f7479706520547970652044726177696e
67204f666669636520313932382e2047696c6c207374756469656420756e
646572207468652072656e6f776e65642063616c6c69677261706865722c
20456477617264204a6f686e73746f6e2c207468652064657369676e6572
206f6620746865204c6f6e646f6e20556e64657267726f756e642073616e
732073657269662074797065666163652e205468697320696e666c75656e
6365642047696c6c2077686f206c61746572206578706572696d656e7465
6420776974682073616e732073657269662064657369676e732c20616e64
20696e2064756520636f757273652070726f647563656420612073657420
6f66206361706974616c206c6574746572732e2054686573652062656361
6d65204d6f6e6f7479706520736572696573203233312c2070726f647563
656420696e20313932332c20616e642074686520666f726572756e6e6572
206f662074686520657874656e736976652047696c6c2053616e73207261
6e6765206e6f7720617661696c61626c652e2041207477656e7469657468
2063656e747572792073616e732073657269662074686174206861732061
2073696d706c6963697479206f6620666f726d20776869636820646f6573
206e6f742072656a65637420747261646974696f6e616c20666f726d7320
616e642070726f706f7274696f6e732c20616e6420676976657320746865
206661636520612068756d616e697374206665656c2e20546865206c6967
6874657220776569676874732061726520686967686c7920726561646162
6c6520696e207465787420616e64207375697461626c6520666f72206d61
67617a696e6520616e6420626f6f6b20776f726b2c207768657265617320
746865206865617669657220776569676874732061726520626573742075
73656420666f7220646973706c617920696e206164766572746973696e67
2c207061636b6167696e672c20616e64206c6162656c732e687474703a2f
2f7777772e6d6f6e6f747970652e636f6d2f68746d6c2f6d746e616d652f
6d735f77656c636f6d652e68746d6c687474703a2f2f7777772e6d6f6e6f
747970652e636f6d2f68746d6c2f64657369676e65722f6465735f696e64
65782e68746d6c004e006f0072006d0061006c006e0079006f0062007901
0d0065006a006e00e9006e006f0072006d0061006c005300740061006e00
64006100720064039a03b103bd03bf03bd03b903ba03ac00440069006700
6900740069007a006500640020006400610074006100200063006f007000
790072006900670068007400200054006800650020004d006f006e006f00
7400790070006500200043006f00720070006f0072006100740069006f00
6e00200031003900390031002d0031003900390035002e00200041006c00
6c0020007200690067006800740073002000720065007300650072007600
650064002e002000470069006c006c002000530061006e007300ae002000
69007300200061002000740072006100640065006d00610072006b002000
6f006600200054006800650020004d006f006e006f007400790070006500
200043006f00720070006f0072006100740069006f006e00200077006800
69006300680020006d006100790020006200650020007200650067006900
730074006500720065006400200069006e00200063006500720074006100
69006e0020006a007500720069007300640069006300740069006f006e00
73002e004d006f006e006f00740079007000650020002d00200047006900
6c006c002000530061006e00730020004d00540020005200650067007500
6c0061007200560065007200730069006f006e00200031002e0036003500
470069006c006c00530061006e0073004d005400470069006c006c002000
530061006e007300ae002000690073002000610020007400720061006400
65006d00610072006b0020006f006600200054006800650020004d006f00
6e006f007400790070006500200043006f00720070006f00720061007400
69006f006e0020007700680069006300680020006d006100790020006200
650020007200650067006900730074006500720065006400200069006e00
20006300650072007400610069006e0020006a0075007200690073006400
69006300740069006f006e0073002e004d006f006e006f00740079007000
650020005400790070006f00670072006100700068007900450072006900
63002000470069006c006c004d006f006e006f0074007900700065002000
54007900700065002000440072006100770069006e00670020004f006600
6600690063006500200031003900320038002e002000470069006c006c00
20007300740075006400690065006400200075006e006400650072002000
7400680065002000720065006e006f0077006e0065006400200063006100
6c006c00690067007200610070006800650072002c002000450064007700
61007200640020004a006f0068006e00730074006f006e002c0020007400
680065002000640065007300690067006e006500720020006f0066002000
74006800650020004c006f006e0064006f006e00200055006e0064006500
7200670072006f0075006e0064002000730061006e007300200073006500
7200690066002000740079007000650066006100630065002e0020005400
680069007300200069006e0066006c00750065006e006300650064002000
470069006c006c002000770068006f0020006c0061007400650072002000
6500780070006500720069006d0065006e00740065006400200077006900
740068002000730061006e00730020007300650072006900660020006400
65007300690067006e0073002c00200061006e006400200069006e002000
640075006500200063006f0075007200730065002000700072006f006400
750063006500640020006100200073006500740020006f00660020006300
610070006900740061006c0020006c006500740074006500720073002e00
200054006800650073006500200062006500630061006d00650020004d00
6f006e006f00740079007000650020007300650072006900650073002000
3200330031002c002000700072006f006400750063006500640020006900
6e00200031003900320033002c00200061006e0064002000740068006500
200066006f0072006500720075006e006e006500720020006f0066002000
740068006500200065007800740065006e00730069007600650020004700
69006c006c002000530061006e0073002000720061006e00670065002000
6e006f007700200061007600610069006c00610062006c0065002e002000
410020007400770065006e00740069006500740068002000630065006e00
74007500720079002000730061006e007300200073006500720069006600
200074006800610074002000680061007300200061002000730069006d00
70006c006900630069007400790020006f006600200066006f0072006d00
200077006800690063006800200064006f006500730020006e006f007400
2000720065006a0065006300740020007400720061006400690074006900
6f006e0061006c00200066006f0072006d007300200061006e0064002000
700072006f0070006f007200740069006f006e0073002c00200061006e00
640020006700690076006500730020007400680065002000660061006300
6500200061002000680075006d0061006e00690073007400200066006500
65006c002e00200054006800650020006c00690067006800740065007200
200077006500690067006800740073002000610072006500200068006900
670068006c00790020007200650061006400610062006c00650020006900
6e0020007400650078007400200061006e00640020007300750069007400
610062006c006500200066006f00720020006d006100670061007a006900
6e006500200061006e006400200062006f006f006b00200077006f007200
6b002c002000770068006500720065006100730020007400680065002000
680065006100760069006500720020007700650069006700680074007300
200061007200650020006200650073007400200075007300650064002000
66006f007200200064006900730070006c0061007900200069006e002000
6100640076006500720074006900730069006e0067002c00200070006100
63006b006100670069006e0067002c00200061006e00640020006c006100
620065006c0073002e0068007400740070003a002f002f00770077007700
2e006d006f006e006f0074007900700065002e0063006f006d002f006800
74006d006c002f006d0074006e0061006d0065002f006d0073005f007700
65006c0063006f006d0065002e00680074006d006c006800740074007000
3a002f002f007700770077002e006d006f006e006f007400790070006500
2e0063006f006d002f00680074006d006c002f0064006500730069006700
6e00650072002f006400650073005f0069006e006400650078002e006800
74006d006c004e006f0072006d00610061006c0069004e006f0072006d00
e1006c006e0065004e006f0072006d0061006c0065005300740061006e00
640061006100720064041e0431044b0447043d044b0439004e0061007600
610064006e006f0041007200720075006e007400610040b860cf70cf0260
cd70cd0210ef019fee0130eeafee0200ed0130e70110e40160cb018fc101
30c150c170c10310c00160c070c0022fbb3fbb4fbb0300b910b9020fb71f
b702f183231ff083141fe583301fe183301fc383641f9391321f95963c1f
9f96af96bf96038783321f8583321f94911b1fe981311faf7d1e1fc97f64
1fc77f641fbebd0d1fdf81321f817f641f7d7f321f837f1c1f707f01107f
b07fc07f03507f011e78161d77161c76161b75161a74161973167016b808
0040181d6c6f16171c6c6f171b6c6f196b6e161b6b6e7f721a6a14b80800
40ff1d666914151c6669151b6669196568141b656885711a9943fa219743
fa219343fa219143fa218d43fa218b43fa218943fa218743fa218543fa21
8343fa218143fa217f43fa217d43fa2132995c081f975d081f955d081f93
5c081f915c081f8d57081f8b57081f8957081f8758081f8558081f835808
1f8157081f7f57081f7d57081f6361081f6261081f325d5b081f5c5b081f
5856081f5756081f6155081f6055081f325b55081f5655081f1b37151836
151535151234150f33150c3215093115063015032f15002e152c2d0f2a2b
0e28290f26270e24250f22230e20210f1e1f0e1b1c1d0d18191a0d151617
0d1213140d0f10110c0c0d0e0c090a0b0c401e0607080c0304050c000102
0c1b3b081f0f3a081f0339081f0038081f503301b0124b004b5442b01301
4b004b5342b0332b4bb8080052b0322b4bb006505b58b101018e59b0332b
b00288b8010054b00488b8020054b012435a5b58b80119b101018e851bb0
124358b900010180858d1bb900010180858d59592b1db0644b5358b0701d
59b0324b5358b0901d59002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b012b002b2b2b2b012b2b002b2b2b2b2b01
2b2b2b2b2b2b2b2b2b002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b01
2b2b2b2b2b2b2b2b2b2b2b2bb018b0324b53422b2b2b2b2b2bb109322b4b
b06452427574732b2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b2b2b2b737373
737473747373737373757373730000>
[3033 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 2470 55 <00010023000004b205770007001d400e051203079300030202047f050507
2f332ffd322f003ffd3c3f3130132115211123112123048ffe19c9fe2105
77b2fb3b04c5>MADAAA+GillSansMT AddT42Char 
1 2670 72 <00020054fff2039103aa0014001b0064400b101e0f0f37064015153706b8
ffc040310f113706060a01980f150115150a199576118611021110049579
0a010a1655036a0e021683141406bc1d154201830ebb1c10f6fde410fe32
2fed5d003f5ded3f5ded12392f5ded11337d2f182b2b3130012b01211e01
333237150e0123222e013534123332121525212e012322060391fd7907a3
81b49854a56f98bc71eebeb7dafd7d01cf077462627d01bc849c70b23830
7ed58cd20107ff00d7566d767600>MADAAA+GillSansMT AddT42Char 
1 2864 79 <000100850000013b0575000300224017031200000283000310032003e003
f003050003400302032f715ded003f3f31301333112385b6b60575fa8b00
>MADAAA+GillSansMT AddT42Char 
1 0 0 <00020100000007000600000300070000211121112521112101000600fa80
0500fb000600fa0080050000>MADAAA+GillSansMT AddT42Char 
MADAAA+GillSansMT /CharStrings get begin
/T 55 def
/e 72 def
/l 79 def
end
MADAAA+GillSansMT /Encoding get
dup 84 /T put
dup 101 /e put
dup 108 /l put
pop
end
%ADOEndSubsetFont
/GNBUGL+GillSansMT /MADAAA+GillSansMT findfont ct_VMDictPut
/GNBUGL+GillSansMT*1 
[84{/.notdef}rp /T 16{/.notdef}rp /e 6{/.notdef}rp /l 147{/.notdef}rp]
GNBUGL+GillSansMT nf
GNBUGL+GillSansMT*1 [7.93238 0 0 -8.52 0 0 ]msf
60.624 156.02 mo
(Tel)
[4.68013 3.60133 0 ]xsh
%ADOBeginSubsetFont: MADAAA+GillSansMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGL+GillSansMT gcheck setglobal} if
1 238 14 <0001007200ed043a04b6000b002f401805050704970a0101000909070a97
04010202010c0d0197182b2f332f103cfd3c322f002f332f3cfd3c322f31
302511213521113311211521110201fe71018faa018ffe71ed0192a8018f
fe71a8fe6e00>GNBUGL+GillSansMT AddT42Char 
1 334 17 <00010066fff0015a00df000b000fb600b0061303af092fed003ffd313037
3216151406232226353436df33484734334646df4633324444323346>GNBUGL+GillSansMT AddT42Char 
1 392 19 <0002003ffff203c30587000b0018004c4037380135103a1645054a07052b
0125102a1603139106130d910004167d600370039003b003d003f00306d0
03010003010303107d6f0901092f5ded332f71725ded003fed3fed015d5d
3130013212111002232202111012172322021514123332123534020208c0
fbfbc8cbf6fecd0a738784747486810587fe6dfecafec2fe720186014201
3e018fbefee5f2f8fee6011af2f30120>GNBUGL+GillSansMT AddT42Char 
1 558 20 <0001019e00000266057500030018400d03120003027f900301300301032f
715ded003f3f313001331123019ec8c80575fa8b>GNBUGL+GillSansMT AddT42Char 
1 608 21 <00010046000003ba05870019008540364a1066147a07750d791805001919
c606041406060404030f0f0c061900930312500f56127612030f0f0c9167
12011204001906030401b8ffc0401d0d10370101097d061548155f150315
150f0404200f300f400f500f040f2f5d332f11332f5ded332f2b11173300
3f5ded322f5d3fed323211332f1139870e2e2b057d10c43130015d252115
21353736123635342623220607353633321615140e010701a60214fc8c54
c5e947866f54a341a3adb7ed3b96b4c1c10e63f40154ae55768f635afe85
f4bc54bff9d7>GNBUGL+GillSansMT AddT42Char 
1 824 22 <00010083fff00364058900270097400b7b1b9b1b02640a6b1b020ab8ffd8
40560d18371b280d0e371b281111375a246b248b12a50e04121227910f01
010101190c201c301c8f1c031c1c1e91191340095009600903090907910c
01761601760f0109091c1200001c04830f0f21831616101cf01c021c2f5d
332fed332fed11392f3311332f5d5d003fed322f5d3fed332f5d1112392f
5ded39192f3130015d002b2b2b5d5d013332363534262322073536333216
151406071e0215140623222735163332363534272e012f0101710c838985
6c6d857a90c1df565e524c2af4ba9f949e95657b331e497912032d6c675d
7444bf3dcaaf6a9134205d844ab7ef4dda637863533e23210f02>GNBUGL+GillSansMT AddT42Char 
1 1090 23 <00020017000003c50587000a000d00594032150d93009c0d034a0c5a0c7a
0c030c0d0dc60a00140a0a000a050993020d0d0007120c00040d0a0c0801
087f05040405050a2f332f332f10ed3c103c1133003f333f12392f3cfd3c
3987052e2b047d10c43130005d015d013311331523112311213525110102
d7529c9cc3fdb1024ffebd0587fcf0aafe3301cd56540195fe6b>GNBUGL+GillSansMT AddT42Char 
1 1678 26 <00010064fff003ec05750005004c402f2901390139040304010202c70304
140303040302130493000302040103590163010201010320053005400550
0504052f5d33332f5d2f123939003fed3f33870e2e2b87057dc4015d3130
132101270121640388fd87b20200fda30575fa7b4b047b00>GNBUGL+GillSansMT AddT42Char 
1 1792 27 <00030042fff003be058700140020002d008c4062451d451f551d551f631c
6320731c7320080812125925692579250325910f1e011e1e03562b662b76
2b032b910d13791801189107038703970303030408121b157d0606227d60
0a700a900ab00ad00a05000a010a1b7d800001000a00287d6f1001102f5d
ed33332f71ed2f715ded332fed113332003f5ded5d3fed5d12392f5ded5d
39192f3c3130005d133436333216151407161514062322243534372e0125
34262322061514163332361335342623220615141633323662f6b2aff1ae
c2fcc0befefec6594d02817d60617c835c5b8011896d6b878a6e698703fe
a4e5e3a6bb7a70daade2e7aad573488f585b76745b577c7bfdd51460797a
61617a70>GNBUGL+GillSansMT AddT42Char 
GNBUGL+GillSansMT /CharStrings get begin
/plus 14 def
/period 17 def
/zero 19 def
/one 20 def
/two 21 def
/three 22 def
/four 23 def
/seven 26 def
/eight 27 def
end
GNBUGL+GillSansMT /Encoding get
dup 43 /plus put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 55 /seven put
dup 56 /eight put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGL+GillSansMT*1 
[43{/.notdef}rp /plus 2{/.notdef}rp /period /.notdef /zero /one /two 
/three /four 2{/.notdef}rp /seven /eight 27{/.notdef}rp /T 16{/.notdef}rp 
/e 6{/.notdef}rp /l 147{/.notdef}rp]
GNBUGL+GillSansMT nf
GNBUGL+GillSansMT*1 [7.63861 0 0 -8.52 0 0 ]msf
72.384 156.02 mo
(+1.401.738.1722)
[4.46095 3.69708 1.55824 3.72 3.72 3.72 1.55823 3.72 3.72 3.72 1.55823 3.72 
3.72 3.72 0 ]xsh
%ADOBeginSubsetFont: KADAAA+Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGK+Roboto-Medium gcheck setglobal} if
1 2868 83 <0001007a000003f9044e0011000001220711231133173633321615112311
342602479149f3e50877c29dbcf361038884fcfc043a7c90b6dcfd4402be
705a>GNBUGK+Roboto-Medium AddT42Char 
GNBUGK+Roboto-Medium /CharStrings get begin
/g83 83 def
end
GNBUGK+Roboto-Medium /Encoding get
dup 110 /g83 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGK+Roboto-Medium*1 
[32{/.notdef}rp /g5 11{/.notdef}rp /g17 20{/.notdef}rp /g38 7{/.notdef}rp /g46 
8{/.notdef}rp /g55 /g56 /.notdef /g58 /.notdef /g60 9{/.notdef}rp 
/g70 /.notdef /g72 5{/.notdef}rp /g78 /.notdef /g80 2{/.notdef}rp 
/g83 3{/.notdef}rp /g87 4{/.notdef}rp /g92 136{/.notdef}rp]
GNBUGK+Roboto-Medium nf
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
60.864 169.46 mo
(San)
[5.14611 4.57531 0 ]xsh
%ADOBeginSubsetFont: KADAAA+Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGK+Roboto-Medium gcheck setglobal} if
1 604 41 <00020095000004d205b00009001300003311212000111510002113231133
3212353534269501ad0124016cfe93fed20bb1a6ced0cf05b0fe87fec549
fec5fe8804e5fbe50105e44becfb>GNBUGK+Roboto-Medium AddT42Char 
1 2256 74 <00020054ffec040c044e0015001d00002506062322003535100033321215
1521161633323637012206072135262603fa34cba2f1feec011bceece3fd
3d0a9580588631fec6647a1201ce0560b84c80012cdf290100012efed4ea
677da5473f02568c7c125f97>GNBUGK+Roboto-Medium AddT42Char 
1 2424 76 <00020052fe56040d044e001b002900002514042322262737161633323635
35062322023535341233321737330114163332363711262623220615040d
feefda59f448733c8d4b798d6aaec7e9e9c9ba690adcfd38788352691f1f
6a4f84791edbed516291463f857f49760139ec15f701317f6bfdd791cd46
3a01d93943d09200>GNBUGK+Roboto-Medium AddT42Char 
1 2930 84 <00020050ffec043e044e000d001b00001335340033320015151400232200
131514163332363535342623220650010aecee010afef7edeefef6f27d89
867d7d88877d021215eb013cfec4eb15ecfec6013a01011592d1d192158f
d5d5>GNBUGK+Roboto-Medium AddT42Char 
GNBUGK+Roboto-Medium /CharStrings get begin
/g41 41 def
/g74 74 def
/g76 76 def
/g84 84 def
end
GNBUGK+Roboto-Medium /Encoding get
dup 68 /g41 put
dup 101 /g74 put
dup 103 /g76 put
dup 111 /g84 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGK+Roboto-Medium*1 
[32{/.notdef}rp /g5 11{/.notdef}rp /g17 20{/.notdef}rp /g38 2{/.notdef}rp /g41 
4{/.notdef}rp /g46 8{/.notdef}rp /g55 /g56 /.notdef /g58 /.notdef 
/g60 9{/.notdef}rp /g70 /.notdef /g72 /.notdef /g74 /.notdef 
/g76 /.notdef /g78 /.notdef /g80 2{/.notdef}rp /g83 /g84 
2{/.notdef}rp /g87 4{/.notdef}rp /g92 136{/.notdef}rp]
GNBUGK+Roboto-Medium nf
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
77.784 169.46 mo
(Diego,)
[5.52096 2.18109 4.54118 4.79678 4.79676 0 ]xsh
%ADOBeginSubsetFont: KADAAA+Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGK+Roboto-Medium gcheck setglobal} if
1 504 40 <00010066ffec04ec05c4001b000001330600212000113510002120001723
26262322061515141233323603effc13fee5fef4fef3fec2014401130105
011416fc10879cadab9bb1a38901dad4fee60176013b76013a0177fee5da
8b9efee578dafef59600>GNBUGK+Roboto-Medium AddT42Char 
GNBUGK+Roboto-Medium /CharStrings get begin
/g40 40 def
end
GNBUGK+Roboto-Medium /Encoding get
dup 67 /g40 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGK+Roboto-Medium*1 
[32{/.notdef}rp /g5 11{/.notdef}rp /g17 20{/.notdef}rp /g38 /.notdef /g40 
/g41 4{/.notdef}rp /g46 8{/.notdef}rp /g55 /g56 /.notdef /g58 
/.notdef /g60 9{/.notdef}rp /g70 /.notdef /g72 /.notdef /g74 
/.notdef /g76 /.notdef /g78 /.notdef /g80 2{/.notdef}rp /g83 
/g84 2{/.notdef}rp /g87 4{/.notdef}rp /g92 136{/.notdef}rp]
GNBUGK+Roboto-Medium nf
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
103.94 169.46 mo
(CA,)
[5.51996 5.63072 0 ]xsh
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
119.54 169.46 mo
(USA)
[5.16306 4.91608 0 ]xsh
GNBUGL+GillSansMT*1 [8.52 0 0 -8.52 0 0 ]msf
60.864 182.9 mo
(Tel)
[4.79679 3.604 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: MADAAA+GillSansMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGL+GillSansMT gcheck setglobal} if
1 1236 24 <00010066fff203810575001900784051151e0d0d370e3c0d1037550b0117
9106060c000f400d14370f0f11910c130393000329143914400b03550901
147d0902023009490965090309037f100020003000400050007000060009
000f0f100f020f2f5d33332f5ded2f5d332f10ed5d5d003fed3fed327d2f
182b1112392fed3130015d002b2b13211521113633320415140423222735
16333236353426232207cf026cfe4a1516cb0106fefdceaaa097907eabba
8b772b0575b2fe9f02f7bfc5f752ce62936b6f951400>GNBUGL+GillSansMT AddT42Char 
GNBUGL+GillSansMT /CharStrings get begin
/five 24 def
end
GNBUGL+GillSansMT /Encoding get
dup 53 /five put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGL+GillSansMT*1 
[43{/.notdef}rp /plus 2{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /.notdef /seven /eight 27{/.notdef}rp /T 
16{/.notdef}rp /e 6{/.notdef}rp /l 147{/.notdef}rp]
GNBUGL+GillSansMT nf
GNBUGL+GillSansMT*1 [8.52 0 0 -8.52 0 0 ]msf
72.864 182.9 mo
(+1.858.740.2400)
[4.79675 4.20036 1.67839 4.20036 4.20036 4.08108 1.79767 4.08109 4.20036 4.20036 1.67839 4.20036 
4.08108 4.20036 0 ]xsh
0 .300328 1 0 cmyk
%ADOBeginSubsetFont: DBAAAA+RobotoCondensed-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGJ+RobotoCondensed-Bold gcheck setglobal} if
1 190 11 <00030048ffeb047f05c5001e002b00350000212706232226353436372626
353436333216151406070713363533140607130114161737363635342623
220603141633323703070606033f3684a6bcdb7a643740bf9e94b4584d4a
ba23ef323cbcfd2c251f2e3519332d303047503a4d48e6071f134c61e8b5
7ea852579b53add3cb89669f3d3cfefa677782e55cfef8044929552f2329
4b2c2d4e56fd15556e34014605305900>GNBUGJ+RobotoCondensed-Bold AddT42Char 
1 534 17 <00010024fe90018200f700090000250714060727363635350182016f5698
2544f7c672e54a4f44926dd5>GNBUGJ+RobotoCondensed-Bold AddT42Char 
1 1918 42 <00010075000003b905b0000b0000331121152111211521112115750342fd
e501c9fe37021d05b0f5fea8edfe7ef4>GNBUGJ+RobotoCondensed-Bold AddT42Char 
1 2158 46 <00010082000001a805b0000300000111211101a8feda05b0fa5005b0>GNBUGJ+RobotoCondensed-Bold AddT42Char 
1 2334 50 <000100750000059a05b0000e000001012111211113012301131121112103
0801120180fed91bfedec9fede1bfed901800194041cfa50018a025bfc1b
03e5fda5fe7605b0>GNBUGJ+RobotoCondensed-Bold AddT42Char 
1 3614 73 <00020042ffec038e0600000e001a00000527062322023535102132171121
11011416333237112623220615028e0d568baab4015f7f52011cfdcf3f56
57292a555442017083010dfe4702106c021efa0001f795894c01ec518a9a
>GNBUGJ+RobotoCondensed-Bold AddT42Char 
1 4250 81 <0001007400000190060000030000011121110190fee40600fa000600>GNBUGJ+RobotoCondensed-Bold AddT42Char 
1 4382 83 <000100610000038c044e0011000001220711211121173633321615112111
342601f44d2bfee5010908619b7f9ffee53f036250fcee043a6a7eb8e6fd
5002b2674900>GNBUGJ+RobotoCondensed-Bold AddT42Char 
1 4528 85 <00020068fe6003b3044e000e001a00000522271121112117363320111514
0201220711163332363535342602578352fee601050a538b015eaffefd58
27275a544144146cfe0805da6377fdf447fefeef03764bfe08488e96479a
8600>GNBUGJ+RobotoCondensed-Bold AddT42Char 
1 4676 88 <0001003bffec0359044e0022000001342627262635343633321615213423
2215141617161615140623222635211616333202465665949fc6b0b6d2fe
e56e664f68a299d6b5c4cf010c024e3d7201222a402c3a948287bfbb9885
6a2a3a2b3d968690b2df84583c00>GNBUGJ+RobotoCondensed-Bold AddT42Char 
1 4852 90 <00010061ffec038d043a0011000021270623222635112111141633323711
2111028307589586a8011b3a2e622b011c6478bcd602bcfd42584b54030d
fbc6>GNBUGJ+RobotoCondensed-Bold AddT42Char 
GNBUGJ+RobotoCondensed-Bold /CharStrings get begin
/g11 11 def
/g17 17 def
/g42 42 def
/g46 46 def
/g50 50 def
/g73 73 def
/g81 81 def
/g83 83 def
/g85 85 def
/g88 88 def
/g90 90 def
end
GNBUGJ+RobotoCondensed-Bold /Encoding get
dup 38 /g11 put
dup 44 /g17 put
dup 69 /g42 put
dup 73 /g46 put
dup 77 /g50 put
dup 100 /g73 put
dup 108 /g81 put
dup 110 /g83 put
dup 112 /g85 put
dup 115 /g88 put
dup 117 /g90 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGJ+RobotoCondensed-Bold*1 
[32{/.notdef}rp /g5 5{/.notdef}rp /g11 5{/.notdef}rp /g17 20{/.notdef}rp /g38 
3{/.notdef}rp /g42 3{/.notdef}rp /g46 3{/.notdef}rp /g50 /g51 18{/.notdef}rp 
/g70 /.notdef /g72 /g73 /g74 2{/.notdef}rp /g77 /g78 
2{/.notdef}rp /g81 /g82 /g83 /g84 /g85 /.notdef /g87 
/g88 /g89 /g90 138{/.notdef}rp]
GNBUGJ+RobotoCondensed-Bold nf
GNBUGJ+RobotoCondensed-Bold*1 [10.56 0 0 -10.56 0 0 ]msf
60.624 210.86 mo
(Europe,)
[5.18493 5.13221 3.50593 5.25889 5.26939 4.92101 0 ]xsh
95.904 210.86 mo
(Middle)
[8.02555 2.52383 5.26946 5.26946 2.6611 0 ]xsh
128.06 210.86 mo
(East)
[5.03709 5.02649 4.67802 0 ]xsh
149.42 210.86 mo
(&)sh
158.9 210.86 mo
(India)
[2.63995 4.92101 5.03716 2.39711 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: KADAAA+Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGK+Roboto-Medium gcheck setglobal} if
1 1976 71 <0002007dffec04320600000f001d00000114022322270723113311363332
121501220607111616333236353534260432d7cebd6c0bdcf26ab2d1d6fe
1b556b1e1e6c56876a680212effec98a760600fdd27cfecdf401614d3ffe
443e4fcb94158fd2>GNBUGK+Roboto-Medium AddT42Char 
1 2160 73 <00020050ffec04040600000f001d00002127062322023535341233321711
3311011416333236371126262322061503270b6cb7c3e6e5c6ac6af3fd3e
728352691f1f6a4f847370840139ec15f70131770229fa00021191cd4a3c
01cd3b47d092>GNBUGK+Roboto-Medium AddT42Char 
1 2552 77 <0001007a000003f906000011000001220711231133113633321615112311
342602479348f2f276b7a0c0f362038883fcfb0600fdc38bb8ddfd4702bb
715c>GNBUGK+Roboto-Medium AddT42Char 
1 3286 89 <00010008ffec027305410017000025060623222635112335331133113315
231114163332363702731d4e35799fb3b3f2bfbf3f3218300d040a0e89a7
026bb30107fef9b3fda3492b0703>GNBUGK+Roboto-Medium AddT42Char 
1 3360 90 <00010077ffec03f7043a0012000021270623222635113311141633323637
1133110312066ac69fc6f367455d741df36a7ebcd702bbfd437555443903
0afbc600>GNBUGK+Roboto-Medium AddT42Char 
GNBUGK+Roboto-Medium /CharStrings get begin
/g71 71 def
/g73 73 def
/g77 77 def
/g89 89 def
/g90 90 def
end
GNBUGK+Roboto-Medium /Encoding get
dup 98 /g71 put
dup 100 /g73 put
dup 104 /g77 put
dup 116 /g89 put
dup 117 /g90 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGK+Roboto-Medium*1 
[32{/.notdef}rp /g5 11{/.notdef}rp /g17 20{/.notdef}rp /g38 /.notdef /g40 
/g41 4{/.notdef}rp /g46 8{/.notdef}rp /g55 /g56 /.notdef /g58 
/.notdef /g60 9{/.notdef}rp /g70 /g71 /g72 /g73 /g74 
/.notdef /g76 /g77 /g78 /.notdef /g80 2{/.notdef}rp /g83 
/g84 2{/.notdef}rp /g87 /.notdef /g89 /g90 /.notdef /g92 
136{/.notdef}rp]
GNBUGK+Roboto-Medium nf
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
60.624 226.46 mo
(Straubenhardt,)
[5.14611 2.88822 2.99908 4.55826 4.67748 4.79679 4.57526 4.77972 4.67742 4.55826 2.99908 4.81382 
2.86266 0 ]xsh
%ADOBeginSubsetFont: KADAAA+Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGK+Roboto-Medium gcheck setglobal} if
1 766 44 <0001006affec04f005c4001f000001110606232000113510002120001723
2626232202151514123332363711213504f02ef6f4feedfea5013e011a01
0b01091af8138b94b2abc8af83771afed502ebfdd33e94016e014e5f014e
016ffefacb7195fefcec61f0fefe3c1c011ebf00>GNBUGK+Roboto-Medium AddT42Char 
1 2760 82 <0001007d0000067a044e0023000001220607112311331736333216173636
3332161511231134262322060714151123113426023f4e661cf2e40773c6
639b2a36a671a6bef3695a536914f36803884137fcf0043a71854f564b5a
bad7fd4302be78525a480a0bfd2f02bc725a>GNBUGK+Roboto-Medium AddT42Char 
1 3486 94 <0001000cfe4b03d7043a00140000050e0223222627351616333236373701
211313210228144b866a1f3e18091d085a5e1b23fe840107e5dc0103a436
805b0b06bc010241515e0435fd2102df>GNBUGK+Roboto-Medium AddT42Char 
GNBUGK+Roboto-Medium /CharStrings get begin
/g44 44 def
/g82 82 def
/g94 94 def
end
GNBUGK+Roboto-Medium /Encoding get
dup 71 /g44 put
dup 109 /g82 put
dup 121 /g94 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGK+Roboto-Medium*1 
[32{/.notdef}rp /g5 11{/.notdef}rp /g17 20{/.notdef}rp /g38 /.notdef /g40 
/g41 2{/.notdef}rp /g44 /.notdef /g46 8{/.notdef}rp /g55 /g56 
/.notdef /g58 /.notdef /g60 9{/.notdef}rp /g70 /g71 /g72 
/g73 /g74 /.notdef /g76 /g77 /g78 /.notdef /g80 
/.notdef /g82 /g83 /g84 2{/.notdef}rp /g87 /.notdef /g89 
/g90 /.notdef /g92 /.notdef /g94 134{/.notdef}rp]
GNBUGK+Roboto-Medium nf
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
119.78 226.46 mo
(Germany)
[5.64024 4.43894 2.87981 7.3187 4.43898 4.67747 0 ]xsh
%ADOBeginSubsetFont: ZAAAAA+TrebuchetMS Initial
ct_T42Dict begin
-0.531 -0.262 1.309 0.984
 256 array 0 1 255 {1 index exch /.notdef put} for  /ZAAAAA+TrebuchetMS
Type42DictBegin
[<00010000000c000c000c000c4f532f324dd7920a000000cc000000606376
74209177670b0000012c000003f06670676d19201a8a0000051c00000f58
676c7966957b72f9000044ec0000507468656164e8d9ff30000014740000
0036686865610dc00ba6000014ac00000024686d7478d9af2bb7000014d0
000011886c6f63612fdf443700002658000009386d617870099a0ff70000
2f90000000206e616d65d137708c00002fb000000f3270726570e756a122
00003ee40000060667646972000000000000000000000000000303a10190
00050008059a053300000125059a0533000003a0007f02120802020b0603
020202020204000006870000000000000000000000004d53202000400020
fb0605e6fe5c0000078301c72000009f00000000042f05b9000000200003
05e6000005b9001905b90014042f00140000ffe70000ffec0000ffecfe5c
000005c30000fe5400000338000005d300000253000005c8000a00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000c800cd00cd009600b400b40000
0000000000be00c800c8008c00a0009b00960000000000be00c800c80000
00aa00aa000000000064007d0082008c009600a00064007d0082008c009b
00d20064007d0082008c009600a002300136011801a401d600460218012c
01c2000001d600eb00eb01d1017f0154011301450168012c008d02350159
033f0505012c00b4006e0136015e01cc01cc04d8006e006e01d600d2005f
01f4012c007802d00190037f00800280006e00b4000000a5fea2003200b9
008c00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000080005e6000005b9001905b90014042f00140000ffe7
0000ffec0000ffecfe5c0000000000000000000003380000000000000253
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000c800cd
00cd009600b400b400000000000000be00c800c8008c00a0009b00960000
000000be00c800c8000000aa00aa000000000064007d0082008c009600a0
0064007d0082008c009b00d20064007d0082008c009600a0000000000000
0000000000000000000005e50015000005b8001b006305b8001500000000
00000000000000000000042f001500c10000ffe700000000ffec00000000
ffec0000fe5cfe58000005b80015fc9afff4fee5fe5cfea2fea605e505e5
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000080000000000
000004640027047700140000ffeefeb800790000009c008c00b400aa00a0
009100b400aa00a2009a0091000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000fe96000000000000000000000000
000000000000000002c300000000018b02ae405e8574737271706f6e6d6c
6b6a6968676665625f5e5d5c5b5a59585554535251504f4e59585554534c
4b214a494847464544434241403f3e3d3c3b3a3938373635332f2e2d2c28
26252423221f181411100f0d0b0a090807060504030201002c4523466020
b02660b004262348482d2c452346236120b02661b004262348482d2c4523
4660b0206120b04660b004262348482d2c4523462361b0206020b02661b0
2061b004262348482d2c45234660b0406120b06660b004262348482d2c45
23462361b0406020b02661b04061b004262348482d2c0110203c003c2d2c
20452320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d
44235920b0042651582320b00d44235921212d2c20204518684420b00160
2045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b432343
0b2d2c00b0282370b101283e01b0282370b10228453ab10200080d2d2c20
45b00325456164b050515845441b2121592d2c2045b0004360442d2c01b0
0643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c
642364615c58b00361592d2c8a03458a8a87b0112bb0292344b0297ae418
2d2c4565b02c234445b02b23442d2c4b525845441b2121592d2c01b00525
1023208af500b0016023edec2d2c01b005251023208af500b0016123edec
2d2c01b0062510f500edec2d2cb00243b001525821212121211b46234660
8a8a462320468a608a61b8ff8062232010238ab10c0c8a70456020b00050
58b00161b8ffba8b1bb0468c59b0106068013a592d2c2045b0032546524b
b013515b58b0022546206861b00325b003253f2321381b2111592d2c00b0
0743b006430b2d2c21210c6423648bb84000622d2c21b08051580c642364
8bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb81555
621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb01343
58021b03592d2c4523456023456023456023766818b08062202d2cb00426
b00426b00425b0042545234520b003266062636820b0032661658a234444
2d2c2045b0005458b040442045b04061441b2121592d2c45b1302f452345
6160b0016069442d2c4b5158b02f2370b01423421b2121592d2c4b515820
b0032545695358441b2121591b2121592d2c45b01443b0006063b0016069
442d2cb02f45442d2c452320458a60442d2c45234560442d2c4b235158b9
0033ffe0b134201bb3330034005944442d2cb0164358b00326458a586466
b01f601b64b020606620581b21b04059b001615923586559b02923442310
b029e01b2121212121592d2cb0164358b004254564b020606620581b21b0
4059b0016123586559b0292344b00425b00725082058021b0359b0052510
b004252046b0042523423cb0072510b006252046b00425b0016023423c20
58011b0059b0052510b00425b029e0b0072510b00625b029e0b00425b007
25082058021b0359b00425b003254348b00625b00325b0016043481b2159
212121212121212d2cb0164358b004254564b020606620581b21b04059b0
016123581b6559b0292344b00525b00825082058021b0359b0042510b005
252046b0042523423cb00425b0072508b0072510b006252046b00425b001
6023423c2058011b0059b0042510b00525b029e0b02920456544b0072510
b00625b029e0b00525b00825082058021b0359b00525b003254348b00425
b0072508b00625b00325b0016043481b2159212121212121212d2c02b004
25202046b004252342b0052508b003254548212121212d2c02b0032520b0
042508b0022543482121212d2c452320451820b000502058236523592368
20b040505821b04059235865598a60442d2c4b53234b515a5820458a6044
1b2121592d2c00208a49b0005158b04023208a3812341b2121592d2c4b53
234b515a58381b2121592d2c462346608a8a462320468a608a61b8ff8062
232010238ab14b4b8a70456020b0005058b00161b8ffba8b1bb0468c59b0
106068013a2d2c208a2349648a2353583c1b21592d2c4b505845441b2121
592d2cb0024354584b53234b515a58381b2121591b21212121592d2cb002
4350584b53234b515a58381b2121591b21212121592d2cb012004b014b54
422d2cb1020042b123018851b1400188535a58b910000020885458b20201
0243604259b12401885158b920000040885458b2020202436042b1240188
5458b2022002436042004b014b5258b2020802436042591bb94000008088
5458b202040243604259b94000008063b80100885458b202080243604259
b94000010063b80200885458b202100243604259b12601885158b9400002
0063b80400885458b202400243604259b94000040063b80800885458b202
8002436042595959595959b10002435458400a0540084009400c020d021b
b10102435458b2054008ba010000090100b30c010d011bb18002435258b2
054008b80180b109401bb2054008ba01800009014059b9400000808855b9
4000020063b8040088555a58b30c000d011bb30c000d0159595942424242
422d2c451868234b51582320452064b04050587c59688a6059442d2cb000
16b00225b0022501b001233e00b002233eb10102060cb00a236542b00b23
4201b001233f00b002233fb10102060cb006236542b0072342b00116012d
2cb082b0024354b001b00243545b58212311331b8a10ed592d2c2320b000
508a8a64b10003255458b0401bb10103255458b005438b59b04f2b5923b0
622b2321235865592d2cb108000c215460432d2c01462346602346612320
1020468a61b8ff80628ab140408a704560683a2d2c208a2349648a235358
3c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b1
23018851b1400188535a58b910000020885458b202010243604259b12401
885158b920000040885458b2020202436042b12401885458b20220024360
42004b014b5258b2020802436042591bb940000080885458b20204024360
4259b94000008063b80100885458b202080243604259b94000010063b802
00885458b202100243604259b12601885158b94000020063b80400885458
b202400243604259b94000040063b80800885458b202800243604259b128
01885158b94000080063b81000885458ba00020100000243604259595959
595959b10002435458400a0540084009400c020d021bb10102435458b205
4008ba010000090100b30c010d011bb18002435258b2054008b80180b109
401bb901000002435258b2054008ba0180000901401bb901800002435258
b2054008b80200b109401bb2054008ba010000090100595959b940000080
8855b94000020063b8040088555a58b30c000d011bb30c000d0159595942
424242422d2c451868234b51582320452064b04050587c59688a6059442d
2cb00016b00225b0022501b001233e00b002233eb10102060cb00a236542
b00b234201b001233f00b002233fb10102060cb006236542b0072342b001
16012d2c20b82000628a6023622d2cb0072558001b0159b0042510b00325
b0022520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920b0
05254ab0042547b004254760b0062547b0806361b00225b0005558b00325
b00725496359b0082558001b0159b00425b0062549b009255cb009255a58
b0092b59b0072546b0806361b0032520b0005558631b2159612320b00055
58b080631b21b08059b0592bb006255c586959b00425202010b00048233a
b0062658001b0159b0052658b003252f598a12233221212d2cb00625b00a
2587b00625b009254ab0005358b00625b00a251bb00925b0072559b00225
b00225070cb005256323b00625636020b94000040063535821b00426b004
26b00a1bb94000040063655158b0042665b0042665b00a1bb00426b00426
b000b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b0
052507595920b0005558b00525b0052587b00725b007250bb0092510b00b
25b0092620b8ffff545821cd1bed59b00525b0052507b00825b00b254923
b00625b0062587b00a2510b00b25c15920b00051b800522378b00161b002
25b00725b0072507b00a25b00d254961b08062b00525b005250bb00a2523
38b00625b0062587b00825b008250bb00a2510b00b25c4b00625b0062507
b00925b00c2549b0032554b8ffa723792121212121212121212121212d2c
23b0005458b9400000001bb900004000598ab0005458b9400000001bb900
00400059b05b2b2d2c08b0005458b9400000001bb900004000590db05b2b
2d2c8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb004
26b00426080db00426b00426080db05b2b2d2cb0022563b0206066b00225
b82000626023622d2c234ab1024e2b2d2c234ab1014e2b2d2c238a4a2345
64b0022564b002256164b00343525821206459b1024e2b23b00050586559
2d2c238a4a234564b0022564b002256164b00343525821206459b1014e2b
23b000505865592d2c20b003254ab1024e2b8a103b2d2c20b003254ab101
4e2b8a103b2d2cb00325b003258ab0672b8a103b2d2cb00325b003258ab0
682b8a103b2d2cb0032546b003254660b004252eb00425b00425b0042620
b000505821b06a1bb06c592bb0032546b00325466061b08062208a201023
3a232010233a2d2cb0032547b003254760b0052547b0806361b00225b006
25496323b005254ab080632058621b2159b0042646608a468a4660b02063
612d2cb00426b00425b00425b00426b06e2b208a2010233a232010233a2d
2c2320b001545821b00225b1024e2bb0805020605920606020b001515821
211b20b005515821206661b0402361b100032550b00325b00325505a5820
b00325618a535821b000591b21591bb00754582066616523211b2121b000
595959b1024e2b2d2cb00225b004254ab0005358b0001b8a8a238ab00159
b004254620666120b00526b0062649b00526b00526b0702b236165b02060
206661b02061652d2cb0022546208a20b000505821b1024e2b1b45232159
6165b00225103b2d2cb0042620b802006220b80200638a236120b05d602b
b00525118a128a20398a58ba005d10000004266356602b23212010204620
b1024e2b23611b2321208a201049b1024e2b593b2d2cba005d1000000925
6356602bb00525b00525b00526b06d2bb15d0725602bb00525b00525b005
25b00525b06f2bba005d10000008266356602b20b0005258b0502bb00525
b00525b00725b00725b00525b0712bb0021738b00052b00225b001525a58
b00425b0062549b00325b00525496020b0405258211bb000525820b00254
58b00425b00425b00725b0072549b00217381bb00425b00425b00425b006
2549b0021738595959595921212121212d2cb12501885058b94000020063
b8040088545cb0164b525b1bb001592d0001000000052666e11c77955f0f
3cf5001b080000000000ad61b71900000000d60bd6eafbbefde70a7c07e1
0000000a0001000000000000000100000783fe3900000b03fbbefe400a7c
000100000000000000000000000000000429040000800000000002f00000
0269000002f000ea02990048000000000000000000000000000000000000
00000000000000000000000000000432007a000000000000000000000000
0000000004320040043200c80432003b0432006d04320019043200820432
005404320054043200590432004a02f000cc000000000000000000000000
000000000000000000000000000000000000000000000000000000000449
009600000000000000000000000000000000000000000000000000000000
05ad001400000000000000000000000000000000000000000000000004a5
00120000000004b3000d0000000000000000000000000000000000000000
0000000000000000000000000000000000000000043400500475008703f6
00410475004b045d004102f5004100000000000000000248005000000000
00000000025c009600000000045f0087044b00410475008700000000031c
0096033d0041032c004f045f007d0000000005f4000f0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000004a3003504ce004100000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000039c00fb039c00a203a100b900000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000001f2008300000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000708005a0650003d
055c001f0737001f075c001f03f8fff60404008f03d90052046d00a003c7
00a0038300a0000000000000000001fa00a00000000000000000038100a0
058d001d04cf00a00496005203e700a000000000040c00a00344004a03df
00100489008f03e5fff605fa000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000004310048043100c90431004c0432006d04320019043200820432
005404320054043200590432004a044600520335006d0419003f04320081
04320019043200820432005404250033043200590432004a043200400335
006d041900440432006d0432001904320082043200540425004c04320059
0432004a0000000000000000045400a00000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000045400a000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
030a004e030a0089030a0058030a003b030a0010030a0054030a0056030a
004c030a0056030a004e030a004e039c00fb039c00a203a100b9030a0010
030a0054030a0056030a004c030a0056030a004e00000000000000000000
00000000000000000000049a005a00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000002800280028002800a300f300f300f300f300f300f3
00f300f300f301480148014801480148021e027f031103fb04b205650631
067e07c008a008ed08ed08ed08ed08ed08ed08ed08ed08ed08ed08ed096f
096f096f096f096f096f096f096f0a9e0a9e0a9e0a9e0a9e0a9e0a9e0afd
0afd0bb70bb70bb70bb70bb70bb70bb70bb70bb70bb70bb70cda0da50e6d
0f43108211091109110911a611a611a61228122812da139e148714871509
15c51660170f170f180c180c180c180c180c180c180c180c180c180c180c
180c180c180c180c180c180c180c180c180c180c180c180c180c180c180c
180c180c180c180c180c180c180c180c180c180c180c180c180c180c180c
180c180c180c180c180c180c180c180c180c180c180c180c180c180c180c
180c180c180c180c180c180c180c180c180c180c180c180c180c180c180c
180c180c180c180c180c180c180c180c180c180c180c180c180c180c180c
180c180c180c180c180c180c180c180c180c180c180c180c180c180c180c
180c18a0192d192d192d192d192d192d192d192d192d192d192d192d192d
192d192d192d192d192d192d192d192d192d192d192d192d192d192d192d
192d192d192d192d192d192d192d192d192d192d192d192d192d192d192d
192d192d192d195e19ba1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d1a3d
1a3d1a3d1a701a701a701a701a701a701a701a701a701a701a701a701a70
1a701a701a701a701a701af81b8d1bf21c7d1d011d471da91dea1e271e70
1eb51eb51eb51ed11ed11ed11ef91f3a1f6c1faf1ff71ff7205420a520df
21132149218b218b218b218b218b218b218b218b218b218b218b218b218b
218b218b218b218b218b218b218b218b218b218b218b218b218b218b218b
218b218b218b218b218b218b218b218b218b218b218b218b218b218b218b
218b218b218b218b218b218b218b218b218b218b218b218b218b218b218b
218b218b218b218b218b218b218b218b218b218b218b218b218b218b218b
218b218b218b218b218b218b218b218b218b218b218b218b218b218b218b
218b218b218b218b218b218b218b218b218b218b218b218b218b218b218b
218b218b218b218b218b218b218b218b218b218b218b218b218b218b218b
218b218b218b218b218b218b218b218b218b218b218b218b218b218b218b
218b218b218b218b218b218b218b218b218b218b218b218b218b218b218b
218b218b218b218b218b218b218b218b218b218b218b218b218b218b218b
218b218b218b218b218b218b218b218b218b218b218b218b218b218b218b
218b218b218b218b218b218b218b218b21ca21ef223a2243224c2255225d
2266226e227722b622e3232e2337234023492351238123892392239a23c6
240d2415241d2425242d245e2466246e246e246e24af24af24af24af24af
24af24af24af24af24af24af24af24af24ef24ef24ef24ef24ef24ef24ef
24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef
24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef
24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef
24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef
24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef
24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef
24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef
24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef
24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef
24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef
24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef24ef
24ef24ef24ef24ef24ef24ef24ef252d25422564259125cf261e266d269d
2700274d275d276c277b278a279a27a927b927c827d927e927e927e927e9
27e927e9283a283a283a283a283a283a283a283a283a283a283a283a283a
283a283a283a283a283a283a283a283a283a283a283a283a283a283a283a
283a283a283a283a283a283a283a283a283a283a283a283a283a283a283a
283a283a283a283a283a283a283a283a283a283a283a283a283a283a283a
283a283a283a283a283a283a283a283a283a283a283a283a283a283a283a
283a283a283a283a283a283a283a283a283a283a283a283a283a283a283a
283a283a283a283a283a283a283a283a283a283a283a283a283a283a283a
283a283a283a283a283a283a283a283a283a283a283a283a283a00010000
049b00430003002a000300020010002f0086000004610f58000100010000
0033026a0001000000000000003200000001000000000001000c00320001
0000000000020007003e0001000000000003001300450001000000000004
000c00320001000000000005000c00580001000000000006000b00640001
000000000008001500070001000000000009000f006f000100000000000b
0018007e000100000000000c0024007e000100000000000d01c400a80001
00000000000e002a007e0003000104030002000c026c0003000104050002
0010027c0003000104060002000c028c0003000104070002001002980003
000104080002001002a80003000104090000006402b80003000104090001
0018031c0003000104090002000e03340003000104090003002603420003
0001040900040018031c0003000104090005001803680003000104090006
001603800003000104090008002a02c60003000104090009001e03c40003
00010409000a04ec0396000300010409000b00540882000300010409000c
00480882000300010409000d038808d6000300010409000e005408820003
0001040a0002000c026c00030001040b000200100c5e00030001040c0002
000c026c00030001040e0002000c0c6e0003000104100002000e0c7e0003
00010413000200120c8c0003000104140002000c026c0003000104150002
0010026c0003000104160002000c026c0003000104190002000e0c9e0003
0001041b000200100c6e00030001041d0002000c026c00030001041f0002
000c026c0003000104240002000e0cac00030001042d0002000e0cba0003
0001080a0002000c026c0003000108160002000c026c000300010c0a0002
000c026c000300010c0c0002000c026ca92032303136204d6963726f736f
667420436f72706f726174696f6e2e20416c6c2072696768747320726573
65727665642e547265627563686574204d53526567756c61724d6963726f
736f66742054726562756368657456657273696f6e20352e313554726562
75636865744d5356696e63656e7420436f6e6e617265687474703a2f2f77
77772e6d6963726f736f66742e636f6d2f7479706f6772617068792f666f
6e74732f4d6963726f736f667420737570706c69656420666f6e742e2059
6f75206d617920757365207468697320666f6e7420746f20637265617465
2c20646973706c61792c20616e64207072696e7420636f6e74656e742061
73207065726d697474656420627920746865206c6963656e736520746572
6d73206f72207465726d73206f66207573652c206f6620746865204d6963
726f736f66742070726f647563742c20736572766963652c206f7220636f
6e74656e7420696e207768696368207468697320666f6e74207761732069
6e636c756465642e20596f75206d6179206f6e6c792028692920656d6265
64207468697320666f6e7420696e20636f6e74656e74206173207065726d
69747465642062792074686520656d62656464696e672072657374726963
74696f6e7320696e636c7564656420696e207468697320666f6e743b2061
6e6420286969292074656d706f726172696c7920646f776e6c6f61642074
68697320666f6e7420746f2061207072696e746572206f72206f74686572
206f75747075742064657669636520746f2068656c70207072696e742063
6f6e74656e742e20416e79206f74686572207573652069732070726f6869
62697465642e004e006f0072006d0061006c006e0079006f00620079010d
0065006a006e00e9006e006f0072006d0061006c005300740061006e0064
006100720064039a03b103bd03bf03bd03b903ba03ac00a9002000320030
003100360020004d006900630072006f0073006f0066007400200043006f
00720070006f0072006100740069006f006e002e00200041006c006c0020
007200690067006800740073002000720065007300650072007600650064
002e0054007200650062007500630068006500740020004d005300520065
00670075006c00610072004d006900630072006f0073006f006600740020
00540072006500620075006300680065007400560065007200730069006f
006e00200035002e00310035005400720065006200750063006800650074
004d0053005400720065006200750063006800650074002c002000640065
007300690067006e00650064002000620079002000560069006e00630065
006e007400200043006f006e006e00610072006500200069006e00200031
003900390036002c00200069007300200061002000680075006d0061006e
006900730074002000730061006e00730020007300650072006900660020
00640065007300690067006e0065006400200066006f0072002000650061
00730079002000730063007200650065006e002000720065006100640061
00620069006c006900740079002e00200054007200650062007500630068
00650074002000740061006b00650073002000690074007300200069006e
0073007000690072006100740069006f006e002000660072006f006d0020
007400680065002000730061006e00730020007300650072006900660073
0020006f0066002000740068006500200031003900330030007300200077
006800690063006800200068006100640020006c00610072006700650020
00780020006800650069006700680074007300200061006e006400200072
006f0075006e006400200066006500610074007500720065007300200069
006e00740065006e00640065006400200074006f002000700072006f006d
006f0074006500200072006500610064006100620069006c006900740079
0020006f006e0020007300690067006e0073002e00200054006800650020
007400790070006500660061006300650020006e0061006d006500200069
007300200063007200650064006900740065006400200074006f00200061
002000700075007a007a006c006500200068006500610072006400200061
00740020004d006900630072006f0073006f00660074002c002000770068
00650072006500200074006800650020007100750065007300740069006f
006e0020007700610073002000610073006b00650064002c002000220063
006f0075006c006400200079006f00750020006200750069006c00640020
006100200054007200650062007500630068006500740020002800610020
0066006f0072006d0020006f00660020006d006500640069006500760061
006c0020006300610074006100700075006c0074002900200074006f0020
006c00610075006e006300680020006100200070006500720073006f006e
002000660072006f006d00200074006800650020006d00610069006e0020
00630061006d00700075007300200074006f002000740068006500200063
006f006e00730075006d00650072002000630061006d007000750073002c
00200061006e006400200068006f0077003f002200200054006800650020
00540072006500620075006300680065007400200066006f006e00740073
002000610072006500200069006e00740065006e00640065006400200074
006f0020006200650020007400680065002000760065006800690063006c
00650020007400680061007400200066006900720065007300200079006f
007500720020006d00650073007300610067006500730020006100630072
006f00730073002000740068006500200049006e007400650072006e0065
0074002e00200022004c00610075006e0063006800200079006f00750072
0020006d0065007300730061006700650020007700690074006800200061
002000540072006500620075006300680065007400200070006100670065
0022002e0068007400740070003a002f002f007700770077002e006d0069
00630072006f0073006f00660074002e0063006f006d002f007400790070
006f006700720061007000680079002f0066006f006e00740073002f004d
006900630072006f0073006f0066007400200073007500700070006c0069
0065006400200066006f006e0074002e00200059006f00750020006d0061
007900200075007300650020007400680069007300200066006f006e0074
00200074006f0020006300720065006100740065002c0020006400690073
0070006c00610079002c00200061006e00640020007000720069006e0074
00200063006f006e00740065006e00740020006100730020007000650072
006d0069007400740065006400200062007900200074006800650020006c
006900630065006e007300650020007400650072006d00730020006f0072
0020007400650072006d00730020006f00660020007500730065002c0020
006f006600200074006800650020004d006900630072006f0073006f0066
0074002000700072006f0064007500630074002c00200073006500720076
006900630065002c0020006f007200200063006f006e00740065006e0074
00200069006e002000770068006900630068002000740068006900730020
0066006f006e0074002000770061007300200069006e0063006c00750064
00650064002e00200059006f00750020006d006100790020006f006e006c
0079002000280069002900200065006d0062006500640020007400680069
007300200066006f006e007400200069006e00200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
002000620079002000740068006500200065006d00620065006400640069
006e00670020007200650073007400720069006300740069006f006e0073
00200069006e0063006c007500640065006400200069006e002000740068
0069007300200066006f006e0074003b00200061006e0064002000280069
00690029002000740065006d0070006f0072006100720069006c00790020
0064006f0077006e006c006f006100640020007400680069007300200066
006f006e007400200074006f002000610020007000720069006e00740065
00720020006f00720020006f00740068006500720020006f007500740070
00750074002000640065007600690063006500200074006f002000680065
006c00700020007000720069006e007400200063006f006e00740065006e
0074002e00200041006e00790020006f0074006800650072002000750073
0065002000690073002000700072006f0068006900620069007400650064
002e004e006f0072006d00610061006c0069004e006f0072006d00e1006c
006e0065004e006f0072006d0061006c0065005300740061006e00640061
006100720064041e0431044b0447043d044b0439004e0061007600610064
006e006f0041007200720075006e007400610000b90054019db250261fb8
019ab2502e1fb80199b2522e1fb80198b2512e1fb80197b25bff1fb80196
b25b2b1fb80195b250161fb80194b2482d1fb80193b2482b1fb80192b248
2b1fb80191b250ff1fb80190b252ff1f41090167014000ff001f01660140
00ff001f0161b218ff1fb80160b218ff1fb8015fb205ff1fb8015e400c04
ff1fbfa50140a5111546a4b8010cb2321fa1b8011540b21f1f6fc731216e
c731216dc731216cc731216bc731216ac7312169c7312168c7312167c731
2166c7312165c7312164c7312163c7312162c7312161c7312160c731215f
c731215ec731215dc731215cc731215bc731215ac7312159c7312158c731
2157c7312156c7312155c7312154c7312153c7312152c7312151c7312150
c731214fc731214ec731214dc731214cc731214bc731214ac7312149c731
2148c7312147c7312146c7312145c7312144c73121b80137b26f0821b801
36b26e0821b80135b26d0821b80134b26c0821b80133b26b0821b80132b2
6a0821b80131b2690821b80130b2680821b8012fb2670821b8012eb26608
21b8012db2650821b8012cb2640821b8012bb2630821b8012ab2620821b8
0129b2610821b80128b2600821b80127b25f0821b80126b25e0821b80125
b25d0821b80124b25c0821b80123b25b0821b80122b25a0821b80121b259
0821b80120b2580821b8011fb2570821b8011eb2560821b8011db2550821
b8011cb2540821b8011bb2530821b8011ab2520821b80119b2510821b801
18b2500821b80117b24f0821b80116b24e0821b80115b24d0821b80114b2
4c0821b80113b24b0821b80112b24a0821b80111b2490821b80110b24808
21b8010fb2470821b8010eb2460821b8010db2450821b8010c40c1440821
6957311f5857311f5657311f5152311f4644311f4544311f4f4e311f4d4e
311f2097309740975097043088010f8c018f849f84af84bf84cf84058f68
9f68af680360697069028f5b018f5a017057018f509f50af50bf50cf5005
8f519f51af51038f529f52af52033f7c4f7c02507b607b707b03704e0170
8f01308f608f708f03008e01008e01408e708e02008e308e408e508e608e
708e06107040700260740160730170440100282800000012110840370f3f
03cece16010fa21fa202b80144408bc7312118c7312114c731210ec73121
0dc731210cc731210bc731210ac7312109c7312108c7312107c7312106c7
312105c7312104c7312103c7312102c7312101c7312100c73121e0180821
dc140821d60e0821d50d0821d40c0821d30b0821d20a0821d1090821d008
0821cf070821ce060821cd050821cc040821cb030821ca020821c9010821
c80008214115018c0033018b0055018e000101890055018a003301890055
01880033018700550159003301580055015cb20ef41f4111014700330143
00550146014300ff001f015300320152005501450001014300550144b203
ff1fb80143b202ff1f4109015600330155005501510001014f00550150b2
07ff1fb8014fb206ff1f4109014200010140005501410033014000550140
403700ff1f230e45220c45210a452008451f06451e04451d02451c00451a
08180816081408120810080e080c080a08080806080408020800084bb807
ff524bb008505b58b101018e59b0124b004b5442b013014b004b5342b900
0101ff858d2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7342011d424bb01b53
58b20396961d42594bb0325358b20300001d42b1160042594b20b0325323
b096515a58b20330301d42592b0145695342014b5058b108004259435c58
b1080042591610703eb13737456920b0005458b040605944b1300070b332
003000197018707373737373737474737373737373737373737373737373
73732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b74002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b000000>
[16089 4509 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 5436 55 <000100120000049305b900070099b0852b58401e27070128040107930104
2c1313024b049301442702010002081010064b02b8ffe440111313024b02
180f0f024b02100b0b024b02b8fff6b40d0d024b02b8ffe640200e0e064b
02120f0f064b02010c0c064b02220d0d064b02074804480502080502003f
3f10eded012f2b2b2b2b2b2b2b2b2b5f5dede62b10e65d5d31301b400902
08000504486c050200183f2b323f303159011123112135211502acc8fe2e
04810505fafb0505b4b4>ZAAAAA+TrebuchetMS AddT42Char 
1 7814 72 <00020041ffec041c044300190022020cb0852b58408a24400b0b024b6615
0158170103b807018a079a07aa07ba07ca07da0706025705016808780888
089808a8080528083808480858086808780888089808a808b808c808d808
0c00571877180208221010024b08180f0f024b08180c0c024b082c0d0d02
4b08100c0c064b08100d0d064b081f4e471e010217183718471867188718
9718a718b718c7180918b8ffe0b40e0e064b18b8ffdeb41010024b18b8ff
dcb40f0f024b18b8ffe2b40c0c024b18b8ffd4b40d0d024b18b8ffe4b40c
0c064b18b8ffe440610d0d064b18011e4e014e8710013810481058106810
0410100e0e064b10101010024b10100f0f024b101c0b0c024b10160d0d02
4b100c0c0c064b100c0d0d064b102387079707a707030007522a083a084a
08030357086708770803070817080208b8ffc0b40b0c004c08b8ffd44009
0d0d004c080c1e5001b8ffc0b313144801b8ffc0b40f0f014b01b8ffc0b4
0f0f004b01b8ffc0401b0e0e4800010105581a011a52140214180d0e014b
14180d0e004b05b8fff0b40b0e014b05b8fff0400a0b0e004b05520c0b14
07003f3fed2b2b2b2b5f10ed5d11392f5f2b2b2b2bed10d52b2b5d715f5d
ed5f710110d62b2b2b2b2b2b2b5d5deded10dd2b2b2b2b2b2b2b5d5f5ded
c42b2b2b2b2b2b5d5f5d715d5f5d5d5f5d3130005d012b1b40141e01506c
1e1e14080c05526c0c0b141a526c140700183f2b3f2b3312392f2b303159
012114171633323717060706232227263510373633321716151401220706
0721342726040dfcfc675b8fa36d502c5b728cca8d9da190c5e5827efe24
7f56520b0251484f0205bc65585f892c202a8997ff0109a08f817ccd3f01
69524e74734d5400>ZAAAAA+TrebuchetMS AddT42Char 
1 9036 79 <00010096ffec020705e6000800ddb0852b58b9000affc0b41313024b0ab8
ffc0b41010024b0ab8ffc0402a0c0c024b070a170a270a370a470a570a67
0a770a080706170627060306024d070117012701d701040001b8ffecb413
13024b01b8ffeeb41010024b01b8fff240110f0f024b01040b0b024b0104
0c0c024b01b8ffcc40170e0e064b01180f0f064b01130c0c064b01160d0d
064b01b8ffec401b0b0b064b0109b705c70502010a081a082a083a080406
52070b0100003f3fed5d5f5d0110d62b2b2b2b2b2b2b2b2b2b5f5dfdc65d
5d3130012b2b2b1bb70706526c070b010000183f3f2b3031591311331114
1633152096be6350fe8f012f04b7fb695663aa00>ZAAAAA+TrebuchetMS AddT42Char 
1 0 0 <00020080015e0380045e0003000700264016059c039d049c070017003700
030000079c019d049c00002ffdfded012f5f5dfdfded3130131121112521
1121800300fd800200fe00015e0300fd00800200>ZAAAAA+TrebuchetMS AddT42Char 
ZAAAAA+TrebuchetMS /CharStrings get begin
/T 55 def
/e 72 def
/l 79 def
end
ZAAAAA+TrebuchetMS /Encoding get
dup 84 /T put
dup 101 /e put
dup 108 /l put
pop
end
%ADOEndSubsetFont
/GNBUGM+TrebuchetMS /ZAAAAA+TrebuchetMS findfont ct_VMDictPut
/GNBUGM+TrebuchetMS*1 
[84{/.notdef}rp /T 16{/.notdef}rp /e 6{/.notdef}rp /l 147{/.notdef}rp]
GNBUGM+TrebuchetMS nf
GNBUGM+TrebuchetMS*1 [7.455 0 0 -8.52 0 0 ]msf
60.624 239.9 mo
(Tel)
[4.43568 4.1897 0 ]xsh
%ADOBeginSubsetFont: ZAAAAA+TrebuchetMS AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGM+TrebuchetMS gcheck setglobal} if
1 486 14 <0001007a00dc03c00419000b007ab0852b58400c02860307860600030900
0206b8fff040241415064b061c1112064b270637067706b706c706050006
03060a86090586008409840685003fededed10ed103c012f5f5d2b2b4354
58b10384ed1bb003cd593c103c10ed10ed31301b400b050a050a03000807
846c0800182f2b333232332f2f3031590121152111231121352111330263
015dfea38dfea4015c8d02c28dfea701598d0157>GNBUGM+TrebuchetMS AddT42Char 
1 2038 23 <000200190000040605bf000a000d0131b0852b58400d05181313024b050c
0d0d024b06b8fff0b40d0d024b0cb8ffe0b41010024b0cb8ffeab40f0f02
4b0cb8ffeab40d0d024b0cb8fff4402f0c0c024b470c570c670c770c0417
0a270a020c04200c0c064b04200f10024b04200c0d024b040e06750b5608
035600b8fff0b41313024b00b8ffe6b41010024b00b8fff4b40f0f024b00
b8ffeab40d0d024b00b8fff8400b0c0c024b00100b0b024b00b8ffde4037
0d0d064b00080c0c064b00470a570a670a770a040a0f0b40181a004b0b40
0d10004b0b400a10004b000b07030d5a085a000007010c0704003f3f1239
2feded3c10cd5f2b2b2b0110d65ddd2b2b2b2b2b2b2b2bed3ceded10d62b
2b2bcd5d5d3130012b2b2b2b2b002b2b1b40100b060005080c045a6c0c0c
06020c060400183f3f12392f2b3332321239303159011123112135013311
33150101210372befd6503134694feaefe5201ae018ffe71018f7203befc
6a9a02a1fdf9>GNBUGM+TrebuchetMS AddT42Char 
1 3968 28 <0002004affe703d305d30010001a0161b0852b5840360801010108090102
04180d0d064b04100c0c064b080438044804780404013500450055006500
7500050218010101041100010911570eb8fff8b70d0d064b570e010eb8ff
e6b41010024b0eb8ffeab40d0d024b0eb8ffeab40b0b024b0eb8fff04040
0c0c064b0e165787099709a709b709044809010009100c0c064b090c1010
024b090c0f0f024b09100d0d024b09160c0c024b09160b0b024b091b0602
00020301b8ffc0b40e10004b01b8ffc0400d0a0b004b00195b0602060613
01b8ffe8b40d0d024b01b8ffd4400d0c0c024b0100135b0c000d0c05003f
3f10ed10cd2b2b11392f435458b20006015d59ed5f2b2b5f435458400a6a
067a0602650c750c025d5d59435458b6000130014401035d590110d62b2b
2b2b2b2b5f5d5dfdd42b2b2b2b5d2bed10d4cd12395f5d5f5d5f5d2b2b5f
5d5f5d31301b40110406195b6c06060c01000d0c135b6c0c0500183f2b3f
3312392f2b32303159052736003706232226353412332011100013102122
06151416333201876157014f115295c2eaf1b601e2fe87a7feff6c7d8468
fe196b2301926d4ff8d9d70106fd81fef6fdd303d30139a3868ba600>GNBUGM+TrebuchetMS AddT42Char 
GNBUGM+TrebuchetMS /CharStrings get begin
/plus 14 def
/four 23 def
/nine 28 def
end
GNBUGM+TrebuchetMS /Encoding get
dup 43 /plus put
dup 52 /four put
dup 57 /nine put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGM+TrebuchetMS*1 
[43{/.notdef}rp /plus 8{/.notdef}rp /four 4{/.notdef}rp /nine 26{/.notdef}rp /T 
16{/.notdef}rp /e 6{/.notdef}rp /l 147{/.notdef}rp]
GNBUGM+TrebuchetMS nf
GNBUGM+TrebuchetMS*1 [7.455 0 0 -8.52 0 0 ]msf
73.704 239.9 mo
(+49)
[3.95998 3.95998 0 ]xsh
%ADOBeginSubsetFont: ZAAAAA+TrebuchetMS AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGM+TrebuchetMS gcheck setglobal} if
1 656 19 <00020040ffec03f505d3000b00160155b0852b5840221157070617062706
370647065706670677060800870d0102880f0178068806020306b8fff4b4
0f10064b06b8ffea400b0d0e064b06180c0c064b06b8ffe4b41313024b06
b8ffe6b41010024b06b8fff8b40f0f024b06b8ffeab40d0d024b06b8ffe2
40570b0b024b060a0c0c024b06180c577700870002027700010000160f10
064b00160d0e064b00200c0c064b000c1313024b00101010024b00100f0f
024b001e0d0d024b001c0c0c024b001c0b0b024b0017270e0128150115b8
fff0401c0b0b024b155b030e100b0b024b0e5b09101010004b09100d0e00
4b09b8ffe8b60c0c004b090d03b8fff0b41010004b03b8fff0400c0d0e00
4b03180c0c004b0305003f2b2b2b3f2b2b2bed2b10ed2b5d5d0110d62b2b
2b2b2b2b2b2b2b5f5d5f5ded10d62b2b2b2b2b2b2b2b2b5f5d5d5f5d5f5d
ed31301b400c090e5b6c090d03155b6c030500183f2b3f2b303159131000
3332121110022322021310213212113426262320400100e8e6e7f2e9e9f1
c80104958c36785cfee50309013c018efeb4fe62fe9cfe67014a01c1fd9f
010e0152e9da7000>GNBUGM+TrebuchetMS AddT42Char 
1 1278 21 <0001003b000003c905d3001500dbb0852b58401905100f10024b04100f10
024b03100f10024b02100f10024b13b8ffecb40c0c064b13b8ffecb40f10
024b13b8ffecb70c0d024b180b0113b8fff0401f1010064b045707100138
104810581068107810881098100710180f10024b10b8ffec402c0d0d024b
10140b0b024b101417090a0a771301371357136713771304001381001614
5a1509065b0d150c0d05003f3f10fdc610ed0110d6ed5f5d5d3c10c510d6
d62b2b2b5d5ded2b31305d012b2b2b2b2b2b2b1b40110a0909060100135a
6c000c0d065b6c0d0500183f2b3f2b3311392f3330315933350136353423
2206072736363332161514070121154501cb90e5518e208122c78dd3ee9e
feb7023e2802bfdd9acb55416a6274c3b2a5fbfdf6b4>GNBUGM+TrebuchetMS AddT42Char 
1 3170 26 <000100540000040a05bf000d0060b0852b58403204180f0f024b04180f0f
064b05015800380448045804680478040504802708470857086708770805
00080f055a06000c0604003f3f10ed0110d65f5ded5dd6fdc631302b2b1b
4009010c0806055a6c060400183f2b333f30315921233600132135211507
060a0201acde4a015e91fd4d03b681418e8866eb03050111be4efe81fecc
fec0feee>GNBUGM+TrebuchetMS AddT42Char 
1 3324 27 <00030059ffec03de05d30015001e00290204b0852b58400d1f0c0d0d024b
1f0c0c0c024b1eb8fff0b40d0d024b16b8fff0b40c0d024b1eb8ffe0b40d
0d064b17b8fff0b40d0d064b07b8fff8b40c0c064b16b8ffec405f0c0d06
4b781801671d771d0202570c870c02011516351645165516b51605001613
181f0c211857ae09be090203090c0d0d064b090c0c0c064b09100f0f024b
09100d0d024b09100c0c024b09060b0b024b092757870e970ea70eb70e04
000eb8fff0b40d0d064b0eb8ffe0b40c0c064b0eb8ffeab41010024b0eb8
ffea400d0b0b024b0e211d57b103010303b8fff4b40d0d064b03b8fff4b4
0c0c064b03b8fff4b41010024b03b8fff4b40f0f024b03b8fff4b40c0c02
4b03b8fffa402e0b0b024b032157371357130200130c0d0d064b130c0c0c
064b13061010024b13100b0b024b13120c0c024b132a16b8ffe840490c0d
064ba8190102970f016516751695160303871f971f02681f781f02012a20
012a2901552465247524030307061706c706030811181102021f000c1604
1b245b111b5b06110d0605003f3f10ed10ed1117395f5d5d5f5d5d5d5f5d
5d5f5d5d5f5d2b0110d62b2b2b2b2b5f5dedd42b2b2b2b2b2b5f5ded10d4
2b2b2b2b5f5dedd42b2b2b2b2b2b5f5ded123939111239395d5f5d5f5d5d
2b3130012b002b2b2b2b2b2b1b40150c001f161f111b160611245b6c110d
061b5b6c060500183f2b3f2b113911123911123939303159012626353436
333216151406070415140623201134362536353426232215141306151416
33323635342601615d76ddafbdd07e530108f4d5fe44980165886d57c4a7
dc886c709164032f32b25fa3bebea460c72f94f1cbdf01aa7bee6e808952
61b586feea77cb6d939070518f00>GNBUGM+TrebuchetMS AddT42Char 
GNBUGM+TrebuchetMS /CharStrings get begin
/zero 19 def
/two 21 def
/seven 26 def
/eight 27 def
end
GNBUGM+TrebuchetMS /Encoding get
dup 48 /zero put
dup 50 /two put
dup 55 /seven put
dup 56 /eight put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGM+TrebuchetMS*1 
[43{/.notdef}rp /plus 4{/.notdef}rp /zero /.notdef /two /.notdef /four 
2{/.notdef}rp /seven /eight /nine 26{/.notdef}rp /T 16{/.notdef}rp /e 
6{/.notdef}rp /l 147{/.notdef}rp]
GNBUGM+TrebuchetMS nf
GNBUGM+TrebuchetMS*1 [7.455 0 0 -8.52 0 0 ]msf
87.864 239.9 mo
(7082)
[4.07045 3.95116 4.07044 0 ]xsh
GNBUGM+TrebuchetMS*1 [7.455 0 0 -8.52 0 0 ]msf
106.22 239.9 mo
(794)
[3.95116 4.07045 0 ]xsh
GNBUGM+TrebuchetMS*1 [7.455 0 0 -8.52 0 0 ]msf
120.5 239.9 mo
(0)sh
%ADOBeginSubsetFont: KADAAA+Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGK+Roboto-Medium gcheck setglobal} if
1 394 39 <00030095000004a305b0000e0016001f0000011404232111213204151406
071616011133323635342301342623211121323604a3fef3ebfdea01f2ee
010c6c687d79fceef87784fd01207181fedc011a7c8001a9d1d805b0becc
63a12b21bb02cafe676b61cdfcc56b7cfe397c00>GNBUGK+Roboto-Medium AddT42Char 
1 2358 75 <0001002d000002d706150014000001231123112335333534363332170726
232215153302a1dbf4a5a5ccb04346062a34addb0387fc790387b367b5bf
12be08ac6700>GNBUGK+Roboto-Medium AddT42Char 
1 3176 88 <0001004cffec03ca044e0025000001342627262635343633321615233426
2322061514161716161514062322263533161633323602dc5692add7e0c1
cbe7f3605f5c585b83bcd3eec7dfeaec048b5060650126344e1e25938885
c3c6923f63523635401c29919190b8e48664504a>GNBUGK+Roboto-Medium AddT42Char 
GNBUGK+Roboto-Medium /CharStrings get begin
/g39 39 def
/g75 75 def
/g88 88 def
end
GNBUGK+Roboto-Medium /Encoding get
dup 66 /g39 put
dup 102 /g75 put
dup 115 /g88 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGK+Roboto-Medium*1 
[32{/.notdef}rp /g5 11{/.notdef}rp /g17 20{/.notdef}rp /g38 /g39 /g40 
/g41 2{/.notdef}rp /g44 /.notdef /g46 8{/.notdef}rp /g55 /g56 
/.notdef /g58 /.notdef /g60 9{/.notdef}rp /g70 /g71 /g72 
/g73 /g74 /g75 /g76 /g77 /g78 /.notdef /g80 
/.notdef /g82 /g83 /g84 2{/.notdef}rp /g87 /g88 /g89 
/g90 /.notdef /g92 /.notdef /g94 134{/.notdef}rp]
GNBUGK+Roboto-Medium nf
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
60.624 253.46 mo
(Betschdorf,)
[5.37609 4.57526 2.87969 4.43039 4.46449 4.65186 4.81382 4.78824 2.99908 3.02457 0 ]xsh
%ADOBeginSubsetFont: KADAAA+Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGK+Roboto-Medium gcheck setglobal} if
1 724 43 <000100950000043105b0000900003311211521112115211195039cfd6002
4afdb605b0cbfe4ecafd9700>GNBUGK+Roboto-Medium AddT42Char 
GNBUGK+Roboto-Medium /CharStrings get begin
/g43 43 def
end
GNBUGK+Roboto-Medium /Encoding get
dup 70 /g43 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGK+Roboto-Medium*1 
[32{/.notdef}rp /g5 11{/.notdef}rp /g17 20{/.notdef}rp /g38 /g39 /g40 
/g41 /.notdef /g43 /g44 /.notdef /g46 8{/.notdef}rp /g55 
/g56 /.notdef /g58 /.notdef /g60 9{/.notdef}rp /g70 /g71 
/g72 /g73 /g74 /g75 /g76 /g77 /g78 /.notdef 
/g80 /.notdef /g82 /g83 /g84 2{/.notdef}rp /g87 /g88 
/g89 /g90 /.notdef /g92 /.notdef /g94 134{/.notdef}rp]
GNBUGK+Roboto-Medium nf
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
107.3 253.46 mo
(France)
[4.55823 2.8798 4.43899 4.67747 4.31966 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
60.624 267.05 mo
(Tel)
[4.55814 4.31963 0 ]xsh
%ADOBeginSubsetFont: ZAAAAA+TrebuchetMS AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGM+TrebuchetMS gcheck setglobal} if
1 1570 22 <0001006dffec03ad05d30022016fb0852b58402d181f0107161716026709
7709a7090300871697160288019801028811981102021112012700370002
00231a1709b8ffe8b40f0f024b09b8fff440470d0d024b090d5717100d0d
064b17121010024b17120f0f024b17100d0d024b17100b0b024b17100c0c
024b1705571d060d0d064b1d0c1010024b1d200f0f024b1d100d0d024b1d
b8fff0406f0c0c024b1d2488019801a8010387119711a711b711c711d711
0600671c016703770302680f780f02025806012800380048005800680078
000627123712471257126712771206011a1a0a5b8709a709b7090309090f
0301070017000200035b2011081218120200120f5b14200d1405003f3f10
eddd5f5dcd10eddd5dcd1112392f5ded39192f5f5d5d5d5f5d5d5d5f5d5d
011810d62b2b2b2b2bedd42b2b2b2b2b2bfdc42b2b10cd10d65dcdd6cd5f
5d5d5d5f5d31305d005d1b40161a0a095b6c0a0a140020035b6c200d1214
0f5b6c140500183f2b333f2b3312392f2b39303159373716332011342623
23353332353423220727363332161514060716161514042322266d606296
0116a2861009feef824d595ddac0f2875b7e95fefee962bc689a6c01107c
9ba2e0ea578879cda07abc2029c58cccde49>GNBUGM+TrebuchetMS AddT42Char 
GNBUGM+TrebuchetMS /CharStrings get begin
/three 22 def
end
GNBUGM+TrebuchetMS /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGM+TrebuchetMS*1 
[43{/.notdef}rp /plus 4{/.notdef}rp /zero /.notdef /two /three /four 
2{/.notdef}rp /seven /eight /nine 26{/.notdef}rp /T 16{/.notdef}rp /e 
6{/.notdef}rp /l 147{/.notdef}rp]
GNBUGM+TrebuchetMS nf
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
73.704 267.05 mo
(+33)
[4.0811 4.20038 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
88.104 267.05 mo
(3)sh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
94.224 267.05 mo
(88)
[4.0805 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
104.42 267.05 mo
(90)
[4.0805 0 ]xsh
%ADOBeginSubsetFont: ZAAAAA+TrebuchetMS AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGM+TrebuchetMS gcheck setglobal} if
1 2762 25 <00020054ffe703dd05d30010001a0139b0852b58b603100d0e064b02b8ff
f0b40d0e064b02b8fff040110a0a064b65090103280038004800030104b8
fff040250c0d064b15043504450455046504750406030116570809012809
a809d80903270957090209b8ffeab41010024b09b8ffeeb40d0d024b09b8
ffe640370b0b024b0904011157370e870e970ea70eb70e05000e160c0c06
4b0e0c0f0f024b0e100d0d024b0e100c0c024b0e160b0b024b0e1b0304b8
ffd8400b1010004b01181010004b06b8fff040291010004b19100f0f004b
0c181010004b0c080f0f004b195b06061301200c10014c0100135b0c0d00
05003f3fed10cd2b11392fed2b2b2b2b2b2b5f0110d62b2b2b2b2b5f5dfd
1139d42b2b2b5d5d71edc45f5d2b5f5d5f5d3130012b2b002b1b40110406
195b6c0606000c135b6c0c0d01000500183f333f2b12392f2b3230315901
170600073633321615140223201110000310213236353426232202a06158
feb3125394c2eaf1b6fe1e0179a701016c7d8468fe05d36b23fe6d6d50f8
d9d7fefa027f010a022dfc2dfec7a3868ba6>GNBUGM+TrebuchetMS AddT42Char 
GNBUGM+TrebuchetMS /CharStrings get begin
/six 25 def
end
GNBUGM+TrebuchetMS /Encoding get
dup 54 /six put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGM+TrebuchetMS*1 
[43{/.notdef}rp /plus 4{/.notdef}rp /zero /.notdef /two /three /four 
/.notdef /six /seven /eight /nine 26{/.notdef}rp /T 16{/.notdef}rp 
/e 6{/.notdef}rp /l 147{/.notdef}rp]
GNBUGM+TrebuchetMS nf
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
114.62 267.05 mo
(64)
[4.2005 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
124.94 267.05 mo
(90)
[4.08051 0 ]xsh
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
60.624 280.61 mo
(Warsaw,)
[7.54876 4.55827 2.99908 4.43038 4.55827 6.34737 0 ]xsh
%ADOBeginSubsetFont: KADAAA+Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGK+Roboto-Medium gcheck setglobal} if
1 1320 53 <00020095000004d405b0000a001300000121112311213200151404011121
32363534262302c2fecffc022dfd0115feebfdd2013193818193021dfde3
05b0fefac9d3f102c8fe038a6d66a000>GNBUGK+Roboto-Medium AddT42Char 
1 2732 81 <0001008c0000017f06000003000001112311017ff30600fa00060000>GNBUGK+Roboto-Medium AddT42Char 
GNBUGK+Roboto-Medium /CharStrings get begin
/g53 53 def
/g81 81 def
end
GNBUGK+Roboto-Medium /Encoding get
dup 80 /g53 put
dup 108 /g81 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGK+Roboto-Medium*1 
[32{/.notdef}rp /g5 11{/.notdef}rp /g17 20{/.notdef}rp /g38 /g39 /g40 
/g41 /.notdef /g43 /g44 /.notdef /g46 6{/.notdef}rp /g53 
/.notdef /g55 /g56 /.notdef /g58 /.notdef /g60 9{/.notdef}rp 
/g70 /g71 /g72 /g73 /g74 /g75 /g76 /g77 
/g78 /.notdef /g80 /g81 /g82 /g83 /g84 2{/.notdef}rp 
/g87 /g88 /g89 /g90 /.notdef /g92 /.notdef /g94 
134{/.notdef}rp]
GNBUGK+Roboto-Medium nf
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
95.064 280.61 mo
(Poland)
[5.28239 4.67748 2.03625 4.43898 4.67747 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
60.624 294.17 mo
(Tel)
[4.55814 4.31963 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
73.704 294.17 mo
(+48)
[4.20038 4.0811 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
88.104 294.17 mo
(22)
[4.2005 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
98.424 294.17 mo
(209)
[4.2005 4.20049 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
112.94 294.17 mo
(98)
[4.0805 0 ]xsh
%ADOBeginSubsetFont: ZAAAAA+TrebuchetMS AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGM+TrebuchetMS gcheck setglobal} if
1 2404 24 <00010082ffec03c105bf00170116b0852b584016080c010709170902100f
01040b065601161313024b01b8ffeeb40f10024b01b8fff8b40d0d024b01
b8fff8b40c0c024b01b8fff440400d0d064b011814570b120f0f024b0b16
0c0c024b0b198810981002006708770887080302551265127512035a1601
0310380f0102070f170f270f03000f0d0016b8fff4b40f10024b16b8ffe8
400d0e0e024b165b080e0f10024b08b8ffc0401c0f10024b080812045a03
12160f10024b12180e0e024b125b0d0d0304003f3fed2b2b10ed11392f2b
2bfd2b2bc610dd5f5d5f5dcd5f5d5d5f5d5f5d0110d62b2bed10d62b2b2b
2b2bed10c410d6cd3130005d5d1b40150108165b6c0808020f0d125b6c0d
0d02055a6c020400183f2b3f2b3312392f2b323031591327112115211136
33321615102122273716332011102122e84402d9fde54a72ccd7fe15cd87
4d887e011afeea8602cb2f02c5aafe9c37f4e1fdd972a76f01600148>GNBUGM+TrebuchetMS AddT42Char 
GNBUGM+TrebuchetMS /CharStrings get begin
/five 24 def
end
GNBUGM+TrebuchetMS /Encoding get
dup 53 /five put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGM+TrebuchetMS*1 
[43{/.notdef}rp /plus 4{/.notdef}rp /zero /.notdef /two /three /four 
/five /six /seven /eight /nine 26{/.notdef}rp /T 16{/.notdef}rp 
/e 6{/.notdef}rp /l 147{/.notdef}rp]
GNBUGM+TrebuchetMS nf
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
123.26 294.17 mo
(35)
[4.0805 0 ]xsh
%ADOBeginSubsetFont: KADAAA+Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGK+Roboto-Medium gcheck setglobal} if
1 876 45 <000100950000051905b0000b0000211121112311331121113311041cfd75
fcfc028bfd0288fd7805b0fda2025efa5000>GNBUGK+Roboto-Medium AddT42Char 
1 3022 85 <0002007dfe600431044e000f001d00000522271123113317363332121515
14020122060711161633323635353426028cb16cf2df0a6db7ced9dafeef
50691e1e68538274751475fdff05da6d81fed0f715ecfec6039c433afe23
3946d3901592cf00>GNBUGK+Roboto-Medium AddT42Char 
GNBUGK+Roboto-Medium /CharStrings get begin
/g45 45 def
/g85 85 def
end
GNBUGK+Roboto-Medium /Encoding get
dup 72 /g45 put
dup 112 /g85 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGK+Roboto-Medium*1 
[32{/.notdef}rp /g5 11{/.notdef}rp /g17 20{/.notdef}rp /g38 /g39 /g40 
/g41 /.notdef /g43 /g44 /g45 /g46 6{/.notdef}rp /g53 
/.notdef /g55 /g56 /.notdef /g58 /.notdef /g60 9{/.notdef}rp 
/g70 /g71 /g72 /g73 /g74 /g75 /g76 /g77 
/g78 /.notdef /g80 /g81 /g82 /g83 /g84 /g85 
/.notdef /g87 /g88 /g89 /g90 /.notdef /g92 /.notdef 
/g94 134{/.notdef}rp]
GNBUGK+Roboto-Medium nf
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
60.624 307.85 mo
(Hemel Hempstead, )
[6.10883 4.57526 7.42094 4.57526 2.14702 2.03622 6.10883 4.57526 7.42094 4.68603 4.43039 2.87118 
4.57526 4.54122 4.81382 1.89998 0 ]xsh
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
60.624 321.41 mo
(Great Britain)
[5.75952 2.99908 4.57526 4.54974 2.87118 2.1555 5.37609 2.99908 2.18109 2.87119 4.55826 2.18109 
0 ]xsh
GNBUGM+TrebuchetMS*1 [7.455 0 0 -8.52 0 0 ]msf
60.624 334.73 mo
(Tel)
[4.43568 4.1897 0 ]xsh
GNBUGM+TrebuchetMS*1 [7.455 0 0 -8.52 0 0 ]msf
73.464 334.73 mo
(+44)
[3.95116 4.07045 0 ]xsh
%ADOBeginSubsetFont: ZAAAAA+TrebuchetMS AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGM+TrebuchetMS gcheck setglobal} if
1 1084 20 <000100c8000002ba05bf00080099b0852b5840172a060103067507020056
081c1313024b080a0f0f024b08b8fff2400b0d0d024b080c0b0b024b08b8
fffc400b0c0c024b080c0f0f064b08b8ffe8401a0d0d064b08090c0c064b
085801680102000107030207000c0704003f3f10ddcd12395f5d012f2b2b
2b2b2b2b2b2bfdc610ed5f5d31301bb40106034002b8fff0b6020206000c
060400183f3f12392f381acd123930315921110535363637331101f2fed6
71ff463c0463babb39c85afa4100>GNBUGM+TrebuchetMS AddT42Char 
GNBUGM+TrebuchetMS /CharStrings get begin
/one 20 def
end
GNBUGM+TrebuchetMS /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGM+TrebuchetMS*1 
[43{/.notdef}rp /plus 4{/.notdef}rp /zero /one /two /three /four 
/five /six /seven /eight /nine 26{/.notdef}rp /T 16{/.notdef}rp 
/e 6{/.notdef}rp /l 147{/.notdef}rp]
GNBUGM+TrebuchetMS nf
GNBUGM+TrebuchetMS*1 [7.455 0 0 -8.52 0 0 ]msf
87.504 334.73 mo
(1442)
[3.95116 3.95116 4.07045 0 ]xsh
GNBUGM+TrebuchetMS*1 [7.455 0 0 -8.52 0 0 ]msf
105.5 334.73 mo
(24)
[3.95998 0 ]xsh
GNBUGM+TrebuchetMS*1 [7.455 0 0 -8.52 0 0 ]msf
115.58 334.73 mo
(04)
[3.95998 0 ]xsh
GNBUGM+TrebuchetMS*1 [7.455 0 0 -8.52 0 0 ]msf
125.54 334.73 mo
(71)
[3.72005 0 ]xsh
%ADOBeginSubsetFont: KADAAA+Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGK+Roboto-Medium gcheck setglobal} if
1 1070 49 <000100950000042705b0000500002515211133110427fc6efccaca05b0fb
1a00>GNBUGK+Roboto-Medium AddT42Char 
GNBUGK+Roboto-Medium /CharStrings get begin
/g49 49 def
end
GNBUGK+Roboto-Medium /Encoding get
dup 76 /g49 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGK+Roboto-Medium*1 
[32{/.notdef}rp /g5 11{/.notdef}rp /g17 20{/.notdef}rp /g38 /g39 /g40 
/g41 /.notdef /g43 /g44 /g45 /g46 2{/.notdef}rp /g49 
3{/.notdef}rp /g53 /.notdef /g55 /g56 /.notdef /g58 /.notdef 
/g60 9{/.notdef}rp /g70 /g71 /g72 /g73 /g74 /g75 
/g76 /g77 /g78 /.notdef /g80 /g81 /g82 /g83 
/g84 /g85 /.notdef /g87 /g88 /g89 /g90 /.notdef 
/g92 /.notdef /g94 134{/.notdef}rp]
GNBUGK+Roboto-Medium nf
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
60.624 348.29 mo
(Lainate,)
[4.55827 4.55826 2.18109 4.7712 4.55827 2.87118 4.57526 0 ]xsh
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
93.384 348.29 mo
(Italy)
[2.28334 2.76041 4.43899 2.03625 0 ]xsh
GNBUGM+TrebuchetMS*1 [7.455 0 0 -8.52 0 0 ]msf
60.624 361.73 mo
(Tel)
[4.33131 4.06297 0 ]xsh
GNBUGM+TrebuchetMS*1 [7.455 0 0 -8.52 0 0 ]msf
73.224 361.73 mo
(+39)
[3.83934 3.95116 0 ]xsh
GNBUGM+TrebuchetMS*1 [7.455 0 0 -8.52 0 0 ]msf
87.024 361.73 mo
(02)
[3.84003 0 ]xsh
GNBUGM+TrebuchetMS*1 [7.455 0 0 -8.52 0 0 ]msf
96.864 361.73 mo
(932)
[3.83934 3.95116 0 ]xsh
GNBUGM+TrebuchetMS*1 [7.455 0 0 -8.52 0 0 ]msf
110.66 361.73 mo
(714)
[3.83934 3.95116 0 ]xsh
GNBUGM+TrebuchetMS*1 [7.455 0 0 -8.52 0 0 ]msf
124.34 361.73 mo
(1)sh
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
60.624 375.41 mo
(Dubai,)
[5.52096 4.67747 4.79679 4.56679 2.18109 0 ]xsh
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
86.664 375.41 mo
(United)
[5.5209 4.78824 2.18109 2.8371 4.57526 0 ]xsh
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
113.9 375.41 mo
(Arab)
[5.64024 2.99908 4.55827 0 ]xsh
%ADOBeginSubsetFont: KADAAA+Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGK+Roboto-Medium gcheck setglobal} if
1 678 42 <000100950000044d05b0000b00003311211521112115211121159503b1fd
4b0256fdaa02bc05b0cbfe6dc7fe3fca>GNBUGK+Roboto-Medium AddT42Char 
GNBUGK+Roboto-Medium /CharStrings get begin
/g42 42 def
end
GNBUGK+Roboto-Medium /Encoding get
dup 69 /g42 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGK+Roboto-Medium*1 
[32{/.notdef}rp /g5 11{/.notdef}rp /g17 20{/.notdef}rp /g38 /g39 /g40 
/g41 /g42 /g43 /g44 /g45 /g46 2{/.notdef}rp /g49 
3{/.notdef}rp /g53 /.notdef /g55 /g56 /.notdef /g58 /.notdef 
/g60 9{/.notdef}rp /g70 /g71 /g72 /g73 /g74 /g75 
/g76 /g77 /g78 /.notdef /g80 /g81 /g82 /g83 
/g84 /g85 /.notdef /g87 /g88 /g89 /g90 /.notdef 
/g92 /.notdef /g94 134{/.notdef}rp]
GNBUGK+Roboto-Medium nf
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
134.42 375.41 mo
(Emirates)
[4.67751 7.3187 2.03625 2.87979 4.439 2.76041 4.43895 0 ]xsh
GNBUGL+GillSansMT*1 [8.52 0 0 -8.52 0 0 ]msf
60.864 388.01 mo
(Tel)
[4.79679 3.72327 0 ]xsh
%ADOBeginSubsetFont: MADAAA+GillSansMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGL+GillSansMT gcheck setglobal} if
1 2066 28 <0002004afff003b005870011001e00744051120406140f0f370614121237
1d9106060c019600131791650c750c020c040a041a044a045a04561c7904
7211751c080412147d0f561a011a7d090030016f010201100f300f590f03
0f010f4f09690902092f5d32322f5d2f5d3310ed5d10ed32325d003f5ded
3fed12392fed2b2b32323130052736123706232226353436333212151400
13363534262322061514163332017f7b9be8275f80a0e5f4b0c6fcfec461
0c876a617f8a60701091620117933beea7aef2fee2e0fefdf902d0501879
9a83635b8400>GNBUGL+GillSansMT AddT42Char 
GNBUGL+GillSansMT /CharStrings get begin
/nine 28 def
end
GNBUGL+GillSansMT /Encoding get
dup 57 /nine put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGL+GillSansMT*1 
[43{/.notdef}rp /plus 2{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /.notdef /seven /eight /nine 26{/.notdef}rp 
/T 16{/.notdef}rp /e 6{/.notdef}rp /l 147{/.notdef}rp]
GNBUGL+GillSansMT nf
GNBUGL+GillSansMT*1 [8.52 0 0 -8.52 0 0 ]msf
72.864 388.01 mo
(+971)
[4.67968 3.964 3.964 0 ]xsh
GNBUGL+GillSansMT*1 [8.52 0 0 -8.52 0 0 ]msf
91.464 388.49 mo
(4)sh
GNBUGL+GillSansMT*1 [8.52 0 0 -8.52 0 0 ]msf
97.464 388.49 mo
(82)
[3.96 0 ]xsh
GNBUGL+GillSansMT*1 [8.52 0 0 -8.52 0 0 ]msf
107.3 388.49 mo
(38)
[3.96 0 ]xsh
%ADOBeginSubsetFont: MADAAA+GillSansMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGL+GillSansMT gcheck setglobal} if
1 1438 25 <0002005cfff003ba0587001300210084b51e1410103705b8ffecb3101037
05b8ffcb404b10103714051f910707011991790d010d137d020102960104
0505060915054505550555186a10760508591c010514167d101c7d0a0102
02500a650a700a900a047f0a010a0a2010301002102f5d332f715d332f33
10ed10ed32325d5d003fed5d3f5ded12392fed32323130002b012b2b0137
170e01073633321615140623220235341a01030615141633323635342623
220602751479a0d3396f6ea5e2f6b0c5f37deb9908896b607d856d385b05
790e9967f4a539eaaaaff40115e0a8014d0123fd222f3a76988263657d22
>GNBUGL+GillSansMT AddT42Char 
GNBUGL+GillSansMT /CharStrings get begin
/six 25 def
end
GNBUGL+GillSansMT /Encoding get
dup 54 /six put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGL+GillSansMT*1 
[43{/.notdef}rp /plus 2{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 26{/.notdef}rp 
/T 16{/.notdef}rp /e 6{/.notdef}rp /l 147{/.notdef}rp]
GNBUGL+GillSansMT nf
GNBUGL+GillSansMT*1 [8.52 0 0 -8.52 0 0 ]msf
117.14 388.49 mo
(666)
[3.96 3.96 0 ]xsh
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
60.864 402.41 mo
(Bangalore,)
[5.37609 4.58382 4.78824 4.79678 4.55827 2.18109 4.77972 2.99908 4.57526 0 ]xsh
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
104.3 402.41 mo
(India)
[2.28334 4.67747 4.67751 2.03625 0 ]xsh
GNBUGL+GillSansMT*1 [7.63861 0 0 -8.52 0 0 ]msf
60.864 415.61 mo
(Tel)
[4.67486 3.59782 0 ]xsh
GNBUGL+GillSansMT*1 [7.63861 0 0 -8.52 0 0 ]msf
72.864 415.61 mo
(+91)
[4.5526 3.81931 0 ]xsh
GNBUGL+GillSansMT*1 [7.63861 0 0 -8.52 0 0 ]msf
87.264 415.61 mo
(80)
[3.84001 0 ]xsh
GNBUGL+GillSansMT*1 [7.63861 0 0 -8.52 0 0 ]msf
96.984 415.61 mo
(6715)
[3.84001 3.84002 3.84001 0 ]xsh
GNBUGL+GillSansMT*1 [7.63861 0 0 -8.52 0 0 ]msf
114.5 415.61 mo
(8900)
[3.59965 3.59965 3.59965 0 ]xsh
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
60.864 429.17 mo
(Istanbul,)
[2.40262 4.43039 2.87118 4.55826 4.78825 4.79678 4.686 2.18109 0 ]xsh
%ADOBeginSubsetFont: KADAAA+Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGK+Roboto-Medium gcheck setglobal} if
1 1600 57 <0001002d000004b005b00007000013352115211123112d0483fe3bfc04e5
cbcbfb1b04e5>GNBUGK+Roboto-Medium AddT42Char 
GNBUGK+Roboto-Medium /CharStrings get begin
/g57 57 def
end
GNBUGK+Roboto-Medium /Encoding get
dup 84 /g57 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGK+Roboto-Medium*1 
[32{/.notdef}rp /g5 11{/.notdef}rp /g17 20{/.notdef}rp /g38 /g39 /g40 
/g41 /g42 /g43 /g44 /g45 /g46 2{/.notdef}rp /g49 
3{/.notdef}rp /g53 /.notdef /g55 /g56 /g57 /g58 /.notdef 
/g60 9{/.notdef}rp /g70 /g71 /g72 /g73 /g74 /g75 
/g76 /g77 /g78 /.notdef /g80 /g81 /g82 /g83 
/g84 /g85 /.notdef /g87 /g88 /g89 /g90 /.notdef 
/g92 /.notdef /g94 134{/.notdef}rp]
GNBUGK+Roboto-Medium nf
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
95.904 429.17 mo
(Turkey)
[5.04379 4.5582 2.87981 4.31966 4.43895 0 ]xsh
GNBUGL+GillSansMT*1 [8.52 0 0 -8.52 0 0 ]msf
60.864 442.75 mo
(Tel)
[4.91608 3.84255 0 ]xsh
GNBUGL+GillSansMT*1 [8.52 0 0 -8.52 0 0 ]msf
73.224 442.75 mo
(+90)
[4.79967 4.084 0 ]xsh
GNBUGL+GillSansMT*1 [8.52 0 0 -8.52 0 0 ]msf
88.104 442.75 mo
(541)
[4.08 4.08 0 ]xsh
GNBUGL+GillSansMT*1 [8.52 0 0 -8.52 0 0 ]msf
102.14 442.75 mo
(368)
[4.08 4.08 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
GNBUGL+GillSansMT*1 [8.52 0 0 -8.52 0 0 ]msf
116.18 442.75 mo
(0941)
[4.08 4.08 4.07999 0 ]xsh
0 .300328 1 0 cmyk
%ADOBeginSubsetFont: OADAAA+Roboto-Bold Initial
ct_T42Dict begin
-0.91 -0.27 2.059 1.055
 256 array 0 1 255 {1 index exch /.notdef put} for  /OADAAA+Roboto-Bold
Type42DictBegin
[<0001000000090009000900094f532f32a3fbb22a0000009c00000060676c
7966b788f24a00004a6400000bf0686561640299cb13000000fc00000036
68686561109d134e0000013400000024686d7478b3b60dde000001580000
2be06c6f6361412e447f00002d3800001a786d6178700d450058000047b0
000000206e616d65350a661d000047d00000029467646972000000000000
000000000000000404a902bc00050000059a05330000011f059a05330000
03d100660200000002000000000000000000e0000aff5000217f00000021
00000000474f4f4700200000ffff0862fdd500000862022b2000019f0000
0000043a05b000000020000300010000000223546433a19c5f0f3cf50019
080000000000c4eff50e00000000d54c676bf8b2fdd5107c087300010009
000200000000000000010000076cfe0c000010f2f8b2fb9a107c00010000
00000000000000000000000008b5038c0064000000000000000000000000
0000000001fe0000022d007c029100400000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000563000800000000053d00560534
008200000000046300820000000000000000025600950000000000000000
00000000070200820000000000000000052a008200000000051b008204eb
004600000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000044a00450000
0000042d0042048300420000000002de001d0000000000000000021f006d
000000000000000000000000000000000000000000000000000000000000
000002ec006f041e00380000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000023100860000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000053a001d
04de001500000000076e001d000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000449003b047700640000000004780064000000000000
000006080064000000000000000000000000020f00770000000000000000
03c400640000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000053a0084000000000000000000000000
0000000004750064048400400000000004adffff00000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000056b00580000
000005720084000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000056e00560000000008a8008200000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
023100860000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000004470045049800440000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000002a
002a002a002a002a002a0049006100610061006100610061006100610061
006100610061006100610061006100610061006100610061006100610061
0061006100610061006100610061007d007d00af00d300d300e800e800e8
00f600f600f600f6011801180118013f013f016a01a601a601a601a601a6
01a601a601a601a601a601a601a601a601a601e201e2020f023e023e025f
025f025f027d027d027d027d027d027d027d027d027d029b02d202d202d2
02d202d202d202d202d202d202d202d202d202d202d202d202d202d202d2
02d202d202d202d202d202d202d202d202d202d202d202d202d202d202d2
02d202d202d202d202d202d202d202d202d202d202d202d202d202d202d2
02d202d202d202d202d202d202e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002e002e002e002e002e002e002e002e002e002e002e002e002e0
02e002e002ec031703170357035703570357035703570357035703570357
035703570357035703570357035703570357035703570357035703570357
035703570357035703570357035703570357035703570357035703570357
03570357035703570357038f03b603b603db03db03db03fc03fc03fc03fc
040a040a040a041e041e041e041e041e041e041e041e041e041e041e041e
041e041e041e041e041e041e041e041e041e041e041e041e041e041e041e
041e041e041e041e041e041e041e041e041e041e041e041e041e041e041e
041e041e041e041e041e041e041e041e041e041e041e041e041e041e041e
041e041e041e041e041e041e041e041e041e041e041e041e041e041e0455
0455045504550455047804a504a504c004c004c004c004c004c004c004c0
04c004c004c004c004c004c004c004c004c004c004c004c004c004c004c0
04c004c004c004c004c004c004c004c004c004f304f3051a051a051a051a
051a051a051a051a051a051a051a051a051a051a051a055a055a05930593
059305930593059305930593059305930593059305930593059305930593
059305930593059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b059b059b059b059b059b059b059b059b059b059b
059b059b059b059b059b05c905f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f805f805f805f805f8
05f805f805f805f805f805f805f805f805f805f805f8000100000d3b002c
0005002a00020001000000000000000000000000000200010000000e00ae
0003000104090000005e00000003000104090001000c005e000300010409
0002000800ba0003000104090003002e009e0003000104090004001600ac
0003000104090005001a00cc0003000104090006001600e6000300010409
00070040005e0003000104090008000c001e0003000104090009002600fc
000300010409000b00140122000300010409000c00140122000300010409
000d005c0136000300010409000e005401920043006f0070007900720069
0067006800740020003200300031003100200047006f006f0067006c0065
00200049006e0063002e00200041006c006c002000520069006700680074
0073002000520065007300650072007600650064002e0052006f0062006f
0074006f00200069007300200061002000740072006100640065006d0061
0072006b0020006f006600200047006f006f0067006c0065002e0047006f
006f0067006c0065003a0052006f0062006f0074006f00200042006f006c
0064003a003200300031003700560065007200730069006f006e00200032
002e0031003300380052006f0062006f0074006f002d0042006f006c0064
00430068007200690073007400690061006e00200052006f006200650072
00740073006f006e0047006f006f0067006c0065002e0063006f006d004c
006900630065006e00730065006400200075006e00640065007200200074
0068006500200041007000610063006800650020004c006900630065006e
00730065002c002000560065007200730069006f006e00200032002e0030
0068007400740070003a002f002f007700770077002e0061007000610063
00680065002e006f00720067002f006c006900630065006e007300650073
002f004c004900430045004e00530045002d0032002e003000>
[3057 ] AllocGlyphStorage
]def 
92 28 
PrepFor2015
Type42DictEnd
1 194 38 <000200080000055d05b00007000a0000330121012103210313210308021e
01160221fec064fdf164b5016db605b0fa50012cfed4021f0223>OADAAA+Roboto-Bold AddT42Char 
1 560 53 <00020082000004de05b0000a001300000121112111212000151404011121
32363534262302bbfef4fed3023901020121fedffdf2010c817272810202
fdfe05b0fef0d1d3fa02bbfe377a5f5f9100>OADAAA+Roboto-Bold AddT42Char 
1 844 70 <00020045ffec0406044e001e002900002126270606232226353436333335
3426232215213436333216151114161715253236373523220615141602e2
120b2b85619bd4fcf7814d539bfedffad2bbf71615fded49671676736a4b
263b3045b78daabb3f4b59828dcbbebefe365c722911c94127bc61473646
>OADAAA+Roboto-Bold AddT42Char 
1 964 72 <00010042ffec03f7044e001b000025323637210604232202353534123332
16172126262322061515141602314f6601011002fefdbcfbf9f8fbc7f902
fef0015e587f4d4dd5574aacde013de61ce5013ee4c34f6fc1791c7dbd00
>OADAAA+Roboto-Bold AddT42Char 
1 1148 75 <0001001d000002df06150014000001231121112335333534363332170726
232215153302b7d7fedea1a1d6b7464e032633a3d70367fc990367d35eb9
c414e009925e>OADAAA+Roboto-Bold AddT42Char 
1 1214 78 <0002006d000001b105e8000b000f00001334363332161514062322260511
21116d584a4a58584a4a580134fede055241555541405555d8fbc6043a00
>OADAAA+Roboto-Bold AddT42Char 
1 1334 88 <00010038ffec03d2044e0024000001342627262635343633321615213426
23220615141617161615140623222635211616333202b95588a6dbe5cad3
f2fedf505548515971b0e8f6d1e3f0011304754da8012c2e3f1d23998c87
c9c6973e5243322f3c162390a18fbce984554a00>OADAAA+Roboto-Bold AddT42Char 
1 0 0 <000500640000032805b0000300060009000c000f00003311211109020301
110511010321016402c4fd9a01020101e50112fda8010ce40203feff05b0
fa50057afda2025efd5efd7c05080cfb100278fd5e025e00>OADAAA+Roboto-Bold AddT42Char 
OADAAA+Roboto-Bold /CharStrings get begin
/g38 38 def
/g53 53 def
/g70 70 def
/g72 72 def
/g75 75 def
/g78 78 def
/g88 88 def
end
OADAAA+Roboto-Bold /Encoding get
dup 65 /g38 put
dup 80 /g53 put
dup 97 /g70 put
dup 99 /g72 put
dup 102 /g75 put
dup 105 /g78 put
dup 115 /g88 put
pop
end
%ADOEndSubsetFont
/GNBUGN+Roboto-Bold /OADAAA+Roboto-Bold findfont ct_VMDictPut
/GNBUGN+Roboto-Bold*1 
[65{/.notdef}rp /g38 14{/.notdef}rp /g53 16{/.notdef}rp /g70 /.notdef /g72 
2{/.notdef}rp /g75 2{/.notdef}rp /g78 9{/.notdef}rp /g88 140{/.notdef}rp]
GNBUGN+Roboto-Bold nf
GNBUGN+Roboto-Bold*1 [10.56 0 0 -10.56 0 0 ]msf
60.624 471.19 mo
(Asia)
[7.10693 5.37503 2.75616 0 ]xsh
84.384 471.19 mo
(Pacific)
[6.71612 5.52283 5.39619 2.63999 3.71714 2.63999 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
60.624 484.75 mo
(Shanghai,)
[5.14611 4.69446 4.55827 4.78824 4.79678 4.67741 4.55827 2.18109 0 ]xsh
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
100.46 484.75 mo
(China)
[5.40168 4.55814 2.03625 4.67747 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
60.624 499.03 mo
(Tel)
[4.67743 4.4389 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
74.064 499.03 mo
(+86)
[4.20038 4.31966 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
88.944 499.03 mo
(21)
[4.2005 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
99.504 499.03 mo
(2412)
[4.20038 4.31966 4.20038 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
118.58 499.03 mo
(6943)
[4.20038 4.31966 4.20038 0 ]xsh
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
60.624 513.43 mo
(Singapore)
[5.04388 2.03625 4.67748 4.67749 4.43898 4.67751 4.67748 2.87981 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
60.624 527.71 mo
(Tel)
[4.67743 4.4389 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
73.944 527.71 mo
(+65)
[4.31966 4.20038 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
88.824 527.71 mo
(6768)
[4.20038 4.31966 4.20038 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
107.78 527.71 mo
(5800)
[4.31966 4.20038 4.31966 0 ]xsh
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
60.624 542.11 mo
(Shin)
[5.14611 4.69446 2.18109 0 ]xsh
%ADOBeginSubsetFont: KADAAA+Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGK+Roboto-Medium gcheck setglobal} if
1 236 18 <00010047020a025402cd00030000011521350254fdf302cdc3c3>GNBUGK+Roboto-Medium AddT42Char 
GNBUGK+Roboto-Medium /CharStrings get begin
/g18 18 def
end
GNBUGK+Roboto-Medium /Encoding get
dup 45 /g18 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGK+Roboto-Medium*1 
[32{/.notdef}rp /g5 11{/.notdef}rp /g17 /g18 19{/.notdef}rp /g38 /g39 
/g40 /g41 /g42 /g43 /g44 /g45 /g46 2{/.notdef}rp 
/g49 3{/.notdef}rp /g53 /.notdef /g55 /g56 /g57 /g58 
/.notdef /g60 9{/.notdef}rp /g70 /g71 /g72 /g73 /g74 
/g75 /g76 /g77 /g78 /.notdef /g80 /g81 /g82 
/g83 /g84 /g85 /.notdef /g87 /g88 /g89 /g90 
/.notdef /g92 /.notdef /g94 134{/.notdef}rp]
GNBUGK+Roboto-Medium nf
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
77.424 542.11 mo
(-)sh
%ADOBeginSubsetFont: KADAAA+Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGK+Roboto-Medium gcheck setglobal} if
1 1808 62 <00010008000004d605b00008000009022101112311010121014e014f0118
fe18fefe1805b0fd4f02b1fc68fde80218039800>GNBUGK+Roboto-Medium AddT42Char 
GNBUGK+Roboto-Medium /CharStrings get begin
/g62 62 def
end
GNBUGK+Roboto-Medium /Encoding get
dup 89 /g62 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGK+Roboto-Medium*1 
[32{/.notdef}rp /g5 11{/.notdef}rp /g17 /g18 19{/.notdef}rp /g38 /g39 
/g40 /g41 /g42 /g43 /g44 /g45 /g46 2{/.notdef}rp 
/g49 3{/.notdef}rp /g53 /.notdef /g55 /g56 /g57 /g58 
/.notdef /g60 /.notdef /g62 7{/.notdef}rp /g70 /g71 /g72 
/g73 /g74 /g75 /g76 /g77 /g78 /.notdef /g80 
/g81 /g82 /g83 /g84 /g85 /.notdef /g87 /g88 
/g89 /g90 /.notdef /g92 /.notdef /g94 134{/.notdef}rp]
GNBUGK+Roboto-Medium nf
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
80.184 542.11 mo
(Yokohama,)
[5.16306 4.79677 4.44746 4.79676 4.67742 4.55826 7.42094 4.5753 0 ]xsh
%ADOBeginSubsetFont: KADAAA+Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGK+Roboto-Medium gcheck setglobal} if
1 952 47 <0001002dffec03e505b0000f000001113311140423222435331416333236
02e9fcfef1cdcffef3fd7c63627e01b403fcfc04daeed5df7e6c8300>GNBUGK+Roboto-Medium AddT42Char 
GNBUGK+Roboto-Medium /CharStrings get begin
/g47 47 def
end
GNBUGK+Roboto-Medium /Encoding get
dup 74 /g47 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGK+Roboto-Medium*1 
[32{/.notdef}rp /g5 11{/.notdef}rp /g17 /g18 19{/.notdef}rp /g38 /g39 
/g40 /g41 /g42 /g43 /g44 /g45 /g46 /g47 
/.notdef /g49 3{/.notdef}rp /g53 /.notdef /g55 /g56 /g57 
/g58 /.notdef /g60 /.notdef /g62 7{/.notdef}rp /g70 /g71 
/g72 /g73 /g74 /g75 /g76 /g77 /g78 /.notdef 
/g80 /g81 /g82 /g83 /g84 /g85 /.notdef /g87 
/g88 /g89 /g90 /.notdef /g92 /.notdef /g94 134{/.notdef}rp]
GNBUGK+Roboto-Medium nf
GNBUGK+Roboto-Medium*1 [8.52 0 0 -8.52 0 0 ]msf
125.06 542.11 mo
(Japan)
[4.67741 4.43898 4.67752 4.43898 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
60.624 556.39 mo
(Tel)
[4.67743 4.4389 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
73.944 556.39 mo
(+81)
[4.31966 4.20038 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
88.824 556.39 mo
(45)
[4.2005 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
99.264 556.39 mo
(476)
[4.31966 4.20038 0 ]xsh
GNBUGM+TrebuchetMS*1 [8.52 0 0 -8.52 0 0 ]msf
114.14 556.39 mo
(0271)
[4.20038 4.31966 4.20038 0 ]xsh
%ADOBeginSubsetFont: ZAAAAA+TrebuchetMS AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGM+TrebuchetMS gcheck setglobal} if
1 9652 82 <00020041ffec040a0443000b00150134b0852b58402517401010024b1740
0b0c024bb7050101381701114e17063706470667060406041010024b06b8
ffdeb40f0f024b06b8fffcb40b0b024b06b8ffe4b40c0c024b06b8ffd4b4
0d0d024b06b8ffeab40e0e064b06b8ffe0b40c0c064b06b8ffe440510d0d
064b060c4e87009700a700b700c700e70006380048005800680004000010
1010024b000e0f0f024b00200b0b024b00200c0c024b00160d0d024b000c
0e0e064b00100c0c064b000c0d0d064b00160eb8fff0400b0f0f004b1310
0f0f004b09b8ffe8400c0f0f004b03180f0f004b030eb8ffe840120d0f00
4b0e52090b13180d0f004b13520307003fed2b3fed2b5f2b2b2b2b0110d6
2b2b2b2b2b2b2b2b5f5d5dfdd42b2b2b2b2b2b2b2b5ded5d5f5d31302b2b
1b400c090e526c090b0313526c030700183f2b3f2b303159133400333212
1110002322001310213236351021220641010bdae6fefefce0e5ff00c801
1d8597fee4829b021af80131fedbfefcfefdfed5012e0100fe6dd8bb018e
d400>GNBUGM+TrebuchetMS AddT42Char 
1 10510 85 <000100960000031c0443000e00cfb0852b58401e0a400b0d024b08101810
2810c81004c70ed70e020e06094d064d68070107b8ffecb41313024b07b8
ffeeb41010024b07b8fff240110f0f024b07040b0b024b07040c0c024b07
b8ffeeb40f0f064b07b8fffcb40c0c064b07b8fff2b41010064b07b8fffc
40250e0e064b070f170a270a370a470a570a670a0600050a400e0e064b0a
02520c0806070a0c07003f3f3f10edcd2b325f5d0110d62b2b2b2b2b2b2b
2b2b5deded10c65d5d3130002b1b400d0a0c070a08060c02526c0e0c0700
183f332b3f3f123930315901262322061511231133153633321702cd3e3f
6597bebe68cd336003782bba83fd9a042fabbf12>GNBUGM+TrebuchetMS AddT42Char 
1 11456 88 <0001007dffec03e3042f0012011eb0852b58402714400b0b024b7714010a
4d074d070801170847087708a708048708b708e70803080c1010064b08b8
fffab40e0e064b08b8ffecb41313024b08b8ffec400b1010024b08160b0b
024b08b8ffeeb40d0d024b08b8ffccb40e0e064b08b8fff0b40c0c064b08
b8fff440150d0d064b08004de812f81202071217122712030012b8fff8b4
1313024b12b8fffab41010024b12b8fff640230f0f024b120c0b0b024b12
0c0c0c024b12080d0d024b12040c0c064b12040d0d064b12b8fffa40110e
0e064b121303520e090a0e0b08061206003f3f3f3f10ed0110d62b2b2b2b
2b2b2b2b2b5f5d5dfdd42b2b2b2b2b2b2b2b2b5d7172eded5d3130012b1b
400f0b120e0a0a0e03526c0e0b0706120600183f3f3f2b3f111239303159
01111433323637113311233506062322263511013bd75e9c19bebe20c15c
b0bb042ffd55f86c4702f0fbd1943f69caba02bf>GNBUGM+TrebuchetMS AddT42Char 
GNBUGM+TrebuchetMS /CharStrings get begin
/o 82 def
/r 85 def
/u 88 def
end
GNBUGM+TrebuchetMS /Encoding get
dup 111 /o put
dup 114 /r put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGM+TrebuchetMS*1 
[43{/.notdef}rp /plus 4{/.notdef}rp /zero /one /two /three /four 
/five /six /seven /eight /nine 26{/.notdef}rp /T 16{/.notdef}rp 
/e 6{/.notdef}rp /l 2{/.notdef}rp /o 2{/.notdef}rp /r 2{/.notdef}rp 
/u 138{/.notdef}rp]
GNBUGM+TrebuchetMS nf
GNBUGM+TrebuchetMS*1 [11.52 0 0 -11.52 0 0 ]msf
60.624 594.55 mo
(our)
[6.00195 6.00198 0 ]xsh
%ADOBeginSubsetFont: ZAAAAA+TrebuchetMS AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGM+TrebuchetMS gcheck setglobal} if
1 8452 73 <00010041000002ff05e6001500c9b0852b58b90017ffc0b40f10024b17b8
ffc0402d0b0c024b751201031538094809580903090b0e0c070b054d074d
0b4d480c01000c021010024b0c120f0f024b0cb8ffeeb40b0b024b0cb8ff
e840110c0c024b0c200d0d024b0c160e0e064b0cb8fff1401a0c0c064b0c
140d0d064b0c0952080e520f0252130c0a0f061300003f3f3f10ed10ed3c
ed012f2b2b2b2b2b2b2b2b5f5dededed103c10c610c65dc63130005f5d01
2b2b1b40110c0a0a070f0e526c0f06151302526c130000183f2b333f2b33
323f3031590126232206151417331523112311233533343633321702ca3a
32577105dadabe9c9ccaa6535f053c1484651b1da0fc71038fa0cdea1e00
>GNBUGM+TrebuchetMS AddT42Char 
1 10044 83 <00020087fe5c042c0443000f001b0175b0852b5840161d400b0b024be71d
01164e470af70a02470a970a020ab8ffe4b40f0f024b0ab8ffeab40c0c02
4b0ab8ffd4b40d0d024b0ab8fff4b40e0e064b0ab8ffe6b40c0c064b0ab8
ffea401e0d0d064b0a111101044d014d1702010702170227028702e702f7
02060002b8fff4b41313024b02b8fff6400b1010024b02040d0d024b02b8
fffa40110f0f024b020a0b0b024b02080c0c024b02b8fff4b40e0e064b02
b8fffe40330f0f064b02020c0c064b02020d0d064b021c580d680d025707
670702024514014a190114100e0e064b14100f0f024b14520d19b8fff0b4
0e0e064b19b8fff0400c0f0f024b195207010e03060db8fff0b40e0e064b
0db8fff040140f0f024b0d0b07100e0e064b07100f0f024b0707003f2b2b
3f2b2b3f3f10ed2b2b10ed2b2b5d5d5f5d5d0110d62b2b2b2b2b2b2b2b2b
2b5f5d71eded103c10d42b2b2b2b2b2b5d71ed5d31302b1b4013020e0005
070d14526c0d0b03060719526c070700183f2b3f3f2b1239393f30315925
1123113315363332121114002322260311161633201134262322060145be
be6c99e4feff00f2449b161274370162a8b928743bfe2105d3586cfee4fe
eef4fecb30032cfd901b310190cbbc38>GNBUGM+TrebuchetMS AddT42Char 
1 11806 90 <0001000fffec05e50432000c01bcb0852b58b9000affe8b40b10014c07b8
ffe8400a0b10014c02180b10014cb102024354584019070a02030504010b
040b0b06080605060c0b0a0506070a0702b8fff8b70b0b024b02020e0d11
12392f2bcdcd10ddcd10ddcd003f3f3f3f3f1112173931301bb101024350
58b509080c0c4808b8fff8401f0c0c48070a02030504010b040b0b060806
05060c0b0a0506070a0702020e0d1112392fcdcd10ddcd10ddcd003f3f3f
3f3f111217393130012b2b1b409c0700010804010258030103470e01080e
580e780ea80ed80e0500064f050b4f2a00012e0501210c01030c7e00057e
04070703040a0a01750003750407001700020804180402007f09047f0802
020975170827084708c708f7080508b70201b80a01080a01b80701080701
7802010602160202170a270a370a570a770a051707270737075707770705
000271080a7101077104010b040b0c0608060506003f3f3f3f3f10ed10ed
10ed5f5d5d5d5d5d715d7171012f5ded39192f1810ed10ed5d5d10ed10ed
39192f1112392f1810ed10fd5f5d5d5ded10ed5f5d5d5f5d5f5d5d313059
59002b2b2b1b401002070a030405010b040b0b060806050600183f3f3f3f
3f1112173930315905230101230133130133011333046532fec6fec732fe
81cbe5011d320126f6bb1402d9fd270446fd4102bffd4102bf00>GNBUGM+TrebuchetMS AddT42Char 
GNBUGM+TrebuchetMS /CharStrings get begin
/f 73 def
/p 83 def
/w 90 def
end
GNBUGM+TrebuchetMS /Encoding get
dup 102 /f put
dup 112 /p put
dup 119 /w put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGM+TrebuchetMS*1 
[43{/.notdef}rp /plus 4{/.notdef}rp /zero /one /two /three /four 
/five /six /seven /eight /nine 26{/.notdef}rp /T 16{/.notdef}rp 
/e /f 5{/.notdef}rp /l 2{/.notdef}rp /o /p /.notdef 
/r 2{/.notdef}rp /u /.notdef /w 136{/.notdef}rp]
GNBUGM+TrebuchetMS nf
GNBUGM+TrebuchetMS*1 [11.52 0 0 -11.52 0 0 ]msf
79.704 594.55 mo
(powerful)
[6.24392 6.00195 8.39812 6.1171 4.20489 4.07803 6.11719 0 ]xsh
%ADOBeginSubsetFont: ZAAAAA+TrebuchetMS AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGM+TrebuchetMS gcheck setglobal} if
1 8722 76 <00020050000001c105c4000b001100f9b0852b58b613400f0f024b13b8ff
c0b60d0d024b097b03b8fff4b40e0e064b03b8fff8b40f0f024b03b8fffa
b40c0c024b03b8fff940200c0c064b03110e0c4d7711010011041313024b
11021010024b110e0f0f024b11b8ffeeb40b0b024b11b8ffecb40c0c024b
11b8ffe6400b0d0d024b110e0f0f064b11b8fff8400b0c0c064b11120d0d
064b11b8ffd640100e0e064b11081111064b11130d511000b8ffc040120f
0f024b007c06400f0f024b06100c0a1006003f3f10d62bed2b10ed0110d6
2b2b2b2b2b2b2b2b2b2b2b5f5dfdc610d42b2b2b2bed3130012b2b1b400e
0c0a06007c6c060f0f0e516c0f0600183f2b10c62b3f3031590132161514
06232226353436031123352111014b314545313045443793015105c44530
314545313144fa3c038fa0fbd100>GNBUGM+TrebuchetMS AddT42Char 
1 11146 87 <0001004fffec02fc0558001500f0b0852b58b90017ffc0403f0c0d024b08
13181302281701871001109708010809010006090309010c0c064b094d48
0058006800f8000400000c1313024b000a1010024b00120f0f024b00b8ff
f2b40b0b024b00b8fff0b40c0c024b00b8ffe8401d0d0d024b00160e0e06
4b00100f0f064b00260c0c064b00280d0d064b00b8fffc401b0e0e064b00
2c133c13020f0d0205070d52120152085207120b0706003f3f10eded10ed
10c63c10c65d012f2b2b2b2b2b2b2b2b2b2b2b5f5ded2b3c103c10cd10dd
5dc65d5d3130005d012b1b401110120d526c120b050509060201526c0206
00183f2b3332332f3f2b3330315913233533353711211521111416333237
170623222635cb7c7cbe0126feda5b65494e1c768d7faf039996e049fed7
96fdec877225a71ebd90>GNBUGM+TrebuchetMS AddT42Char 
GNBUGM+TrebuchetMS /CharStrings get begin
/i 76 def
/t 87 def
end
GNBUGM+TrebuchetMS /Encoding get
dup 105 /i put
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGM+TrebuchetMS*1 
[43{/.notdef}rp /plus 4{/.notdef}rp /zero /one /two /three /four 
/five /six /seven /eight /nine 26{/.notdef}rp /T 16{/.notdef}rp 
/e /f 2{/.notdef}rp /i 2{/.notdef}rp /l 2{/.notdef}rp /o 
/p /.notdef /r /.notdef /t /u /.notdef /w 
136{/.notdef}rp]
GNBUGM+TrebuchetMS nf
GNBUGM+TrebuchetMS*1 [11.52 0 0 -11.52 0 0 ]msf
126.86 594.55 mo
(portfolio)
[6.24391 6.00195 4.2049 4.31995 4.07803 6.11714 3.1219 2.99524 0 ]xsh
GNBUGM+TrebuchetMS*1 [11.52 0 0 -11.52 0 0 ]msf
172.97 594.55 mo
(of)
[6.00027 0 ]xsh
%ADOBeginSubsetFont: ZAAAAA+TrebuchetMS AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGM+TrebuchetMS gcheck setglobal} if
1 4416 29 <000200ccffec01f80443000b0017004db0852b58401e030f09270f370f47
0f570f040f834815581502001518068300070c83120b003fed3fed0110d6
5f5ded5d3c103c31301b400c120c836c0006836c0007121300183f3f2b2b
30315901321615140623222635343613321615140623222635343601623e
58583e3e58583e3e58583e3e58580443583e3e59593e3e58fcd6583e3e59
593e3e58>GNBUGM+TrebuchetMS AddT42Char 
1 5998 68 <00020050ffec03e40443001b002501d4b0852b58b627401010024b25b8ff
ecb40b0c024b25b8ffee40490d0d064b071317130201672077200202280f
480f0200b70fc70fd70fe70f04010025150f053718471857186718771887
1897180718254d0a4d881501150c1313024b150c1010024b15b8fff8b40f
0f024b15b8fff040110c0c024b151e0d0d024b150c0e0e064b15b8fff040
440f0f064b150c0d0d064b1527214e38050100050c0f0f024b05160b0b02
4b05100c0c024b05120d0d024b050c0e0e064b050c0c0c064b050c0d0d06
4b05263a0301032500b8ffc0b40d10024b00b8ffc040320d0f064b480058
006800780004000218191c520a080e52080f180f280f380f480f580f980f
a80fb80fc80fd80fe80f0c000fb8ffc0b41317024b0fb8ffc040310d0d02
4b0f124a1e5a1e02031e520008180f10004b08400e0e004b034708570802
0008080c2352020c5212190b020b1207003f3f3f10ed10ed11392f5f5d5f
2b2b5fed5f5d10dd2b2b5f5ded10d5ed10cd10dd5d2b2bcd5f5d0110d62b
2b2b2b2b2b2b5f5ded10d62b2b2b2b2b2b2b2b71ededc65d10c41112395f
5d5f5d5f5d3130005f5d2b2b012b1b401b0002081e526c08080212184019
0b0223526c020b0f120c526c120700183f2b333f2b3f1acd1112392f2b12
393031592506232226353424333217102322072736363332161511141715
22260326232206151433323702e472eb7eb9011ddd3c4ce8b2605036bf57
e9d35474732b5a2490b6c5906f7b8fb788a3e11a0104609f2c3fd4e7fe80
8d2f5f4201df149465a78900>GNBUGM+TrebuchetMS AddT42Char 
1 6580 69 <00020087ffec042a05e60010001d0134b0852b584017570b0102184e470b
d70b02470b970b020b0a1313024b0bb8ffe8b40f0f024b0bb8ffeab40c0c
024b0bb8ffd8b40d0d024b0bb8fff4b40e0e064b0bb8ffe8b40c0c064b0b
b8ffe840170d0d064b0b12044d124d0702170227028702f702050002b8ff
f4b41313024b02b8fff6400b1010024b02040d0d024b02b8fffa40110f0f
024b020a0b0b024b02080c0c024b02b8fff8b40e0e064b02b8fffe40200f
0f064b02020c0c064b02020d0d064b021e4515012a1b3a1b4a1b0315520e
1bb8ffe8b40b0b024b1bb8ffe8400f0c0c024b1b5208010b0e0b08070300
003f3f3f3f10ed2b2b10ed5d5d0110d62b2b2b2b2b2b2b2b2b2b5f5deded
10d42b2b2b2b2b2b2b5d71ed5f5d31301b401400050e08020b0e15526c0e
0b081b526c0807030000183f3f2b3f2b3f11123939303159250723113311
3636333200151000232226031114163332363534262322060129435fbe1b
9548dc0111feeeea4c930a8e25c2a8c4a6237d4d6105fafdfa253efed0e8
fef4fecd39032afd961049badbb6cc3c>GNBUGM+TrebuchetMS AddT42Char 
1 7386 71 <0002004bffed03ec05e6000e00190155b0852b5840161b400b0b024b004d
0d190c4d470d010d201313024b0db8ffeab41010024b0db8fff6400b0f0f
024b0d080b0b024b0db8fff6b40c0c024b0db8ffe4400b0d0d024b0d0c0f
0f064b0db8ffe2b40c0c064b0db8fff240660d0d064b0d140c0c0c064b14
4e87060138064806020006080f0f024b061a0b0b024b061a0c0c024b0612
0d0d024b060c0e0e064b06100c0c064b060c0d0d064b061a251635164516
032a113a114a110303580368030216180b0c024b16100f0f024b16520311
b8ffe8400e0b0c024b115209480901020e0a03b8fff0b60f0f024b030b09
b8ffeeb70d0d024b09070d00003f3f2b3f2b3f5f5d10ed2b10ed2b2b5d5f
5d5d0110d62b2b2b2b2b2b2b5f5d5dfd2bd42b2b2b2b2b2b2b2b2b5dfd3c
10ed3130012b1b400f010b0309000a0316526c030b0b400fb8fff040090f
0911526c09070c0000183f3f2b2f381acd3f2b3f11123939303159253506
2322023534003332171133110326232206151021323637032e63bdc9fa01
20c7a656bebe487d99bd01602d7e10014f630120f0f101554e01f1fa1b03
366ce4b0fe7d3920>GNBUGM+TrebuchetMS AddT42Char 
1 9296 81 <00010087000003d8044300110126b0852b58401813400b0b024b070f170f
0201771301004d11101010064b11b8ffd4b40e0e064b11b8fff8b4131302
4b11b8fff440111010024b110a0f0f024b11080c0c024b11b8fff440110d
0d024b111c0b0b024b110e0f0f064b11b8fff8b40c0c064b11b8fff8b40d
0d064b11b8fff440100b0b064b11084d070917092709030009b8fff4400b
1313024b09040d0d024b09b8fff6b41010024b09b8fff4400b0f0f024b09
0a0b0b024b09b8fff8b41010064b09b8fff4400b0e0e064b09080c0c024b
09b8fffa40110f0f064b091204520e110a090a0a060e07003f3f3f3f10ed
0110d62b2b2b2b2b2b2b2b2b5f5dfdd42b2b2b2b2b2b2b2b2b2b2b2bed5d
3130005f5d012b1b400f0c090e000a090a0a060e04526c0e0700183f2b3f
3f3f111239303159211134262322060711231133173633201111031a6779
418e26be823c5ed50160026fab894e39fce4042f8a9efe54fd69>GNBUGM+TrebuchetMS AddT42Char 
1 10770 86 <00010041ffec02fc044300210115b0852b58402b23400b0b024b081f181f
02070e170e0228234823882303003a0c01351d0103c8110111054e671d77
1d021db8ffeeb40e0e064b1db8ffe0405a0d0d024b1d1700174e480c0197
0ca70cb70ce70c04000c040e0e064b0c22e81901271b0101280701270f01
28200102651a751a020307191a0314034812581268127812c81205120f37
014701570167017701b701c70107000103b8ffe040141113064b03522014
181113064b14520f200b0f07003f3f10ed2b10ed2bc55f5d10c55d111217
395f5d5f5d5d5d5f5d5d0110d62b5f5d5dedc610d42b2b5dedc45d5f5d5d
5f5d3130005d5d012b1b4015090614201b180f002003526c200b110f1452
6c0f0700183f2b333f2b331139391112393930315937371633323534272e
033534363332170726232206151417171616151406232241439f61b0aa83
5b4321c09b75b2367172445d75887d72cab3a940b468946a4c3c3e4f5933
84944ab05a403167353e39926e90a300>GNBUGM+TrebuchetMS AddT42Char 
GNBUGM+TrebuchetMS /CharStrings get begin
/colon 29 def
/a 68 def
/b 69 def
/d 71 def
/n 81 def
/s 86 def
end
GNBUGM+TrebuchetMS /Encoding get
dup 58 /colon put
dup 97 /a put
dup 98 /b put
dup 100 /d put
dup 110 /n put
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGM+TrebuchetMS*1 
[43{/.notdef}rp /plus 4{/.notdef}rp /zero /one /two /three /four 
/five /six /seven /eight /nine /colon 25{/.notdef}rp /T 
12{/.notdef}rp /a /b /.notdef /d /e /f 2{/.notdef}rp 
/i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef 
/r /s /t /u /.notdef /w 136{/.notdef}rp]
GNBUGM+TrebuchetMS nf
GNBUGM+TrebuchetMS*1 [11.52 0 0 -11.52 0 0 ]msf
185.93 594.55 mo
(brands:)
[6.24393 4.20488 5.87514 6.00197 6.24393 4.43518 0 ]xsh
GNBUGK+Roboto-Medium*1 [17.04 0 0 -17.04 0 0 ]msf
60.624 615.79 mo
(CADDY)
[11.0419 11.2805 11.0419 10.9226 0 ]xsh
%ADOBeginSubsetFont: KADAAA+Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGK+Roboto-Medium gcheck setglobal} if
1 1216 52 <00020066ffec051f05c4000d001b00000115100021200011351000212000
0335340223220215151412333212051ffeb5fef0fef6feac0152010a0110
014dfdbaa6a2bdbfa2a8b602fc49feb4fe85017b014c49014c017cfe84fe
6b4bf50100ff00f54bf5fefe0102>GNBUGK+Roboto-Medium AddT42Char 
GNBUGK+Roboto-Medium /CharStrings get begin
/g52 52 def
end
GNBUGK+Roboto-Medium /Encoding get
dup 79 /g52 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGK+Roboto-Medium*1 
[32{/.notdef}rp /g5 11{/.notdef}rp /g17 /g18 19{/.notdef}rp /g38 /g39 
/g40 /g41 /g42 /g43 /g44 /g45 /g46 /g47 
/.notdef /g49 2{/.notdef}rp /g52 /g53 /.notdef /g55 /g56 
/g57 /g58 /.notdef /g60 /.notdef /g62 7{/.notdef}rp /g70 
/g71 /g72 /g73 /g74 /g75 /g76 /g77 /g78 
/.notdef /g80 /g81 /g82 /g83 /g84 /g85 /.notdef 
/g87 /g88 /g89 /g90 /.notdef /g92 /.notdef /g94 
134{/.notdef}rp]
GNBUGK+Roboto-Medium nf
GNBUGK+Roboto-Medium*1 [17.04 0 0 -17.04 0 0 ]msf
135.62 615.79 mo
(ERICO)
[9.355 10.4455 4.56668 10.9226 0 ]xsh
%ADOBeginSubsetFont: KADAAA+Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGK+Roboto-Medium gcheck setglobal} if
1 1102 50 <000100950000066b05b0000e000001012111231113012301131123112103
8001a30148fc18fe53b5fe5319fc01470154045cfa5001e00280fba00461
fd7ffe2005b0>GNBUGK+Roboto-Medium AddT42Char 
1 1168 51 <000100950000051805b000090000011123011123113301110518fdfd76fc
fc028c05b0fa500409fbf705b0fbf4040c00>GNBUGK+Roboto-Medium AddT42Char 
GNBUGK+Roboto-Medium /CharStrings get begin
/g50 50 def
/g51 51 def
end
GNBUGK+Roboto-Medium /Encoding get
dup 77 /g50 put
dup 78 /g51 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGK+Roboto-Medium*1 
[32{/.notdef}rp /g5 11{/.notdef}rp /g17 /g18 19{/.notdef}rp /g38 /g39 
/g40 /g41 /g42 /g43 /g44 /g45 /g46 /g47 
/.notdef /g49 /g50 /g51 /g52 /g53 /.notdef /g55 
/g56 /g57 /g58 /.notdef /g60 /.notdef /g62 7{/.notdef}rp 
/g70 /g71 /g72 /g73 /g74 /g75 /g76 /g77 
/g78 /.notdef /g80 /g81 /g82 /g83 /g84 /g85 
/.notdef /g87 /g88 /g89 /g90 /.notdef /g92 /.notdef 
/g94 134{/.notdef}rp]
GNBUGK+Roboto-Medium nf
GNBUGK+Roboto-Medium*1 [17.04 0 0 -17.04 0 0 ]msf
204.17 615.79 mo
(HOFFMAN)
[11.9961 11.6384 9.23573 9.23573 14.7566 11.2805 0 ]xsh
GNBUGK+Roboto-Medium*1 [17.04 0 0 -17.04 0 0 ]msf
306.31 615.79 mo
(RAYCHEM)
[10.5648 11.2805 10.2068 11.0419 11.9961 9.47427 0 ]xsh
GNBUGK+Roboto-Medium*1 [17.04 0 0 -17.04 0 0 ]msf
406.3 615.79 mo
(SCHROFF)
[10.207 11.0419 11.9962 10.5648 11.6384 9.23575 0 ]xsh
gsave
0 842.04 mo
595.56 842.04 li
595.56 0 li
0 0 li
0 842.04 li
eclp
GNBUGK+Roboto-Medium*1 [17.04 0 0 -17.04 0 0 ]msf
501.94 615.79 mo
(TRACER)
[10.2068 10.5648 11.2805 11.0419 9.4743 0 ]xsh
grestore
0 .300328 1 0 cmyk
%ADOBeginSubsetFont: KADAAA+Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal GNBUGK+Roboto-Medium gcheck setglobal} if
1 262 19 <00010088fff401a30101000b0000373436333216151406232226884a4343
4b4b43434a7a394e4e39394d4d00>GNBUGK+Roboto-Medium AddT42Char 
1 306 20 <00010002ff8302ff05b0000300000101230102fffdc3c0023e05b0f9d306
2d00>GNBUGK+Roboto-Medium AddT42Char 
1 1698 59 <000100120000051d05b00006000001012301210101051dfdf4f5fdf60115
016f017105b0fa5005b0fb8e0472>GNBUGK+Roboto-Medium AddT42Char 
GNBUGK+Roboto-Medium /CharStrings get begin
/g19 19 def
/g20 20 def
/g59 59 def
end
GNBUGK+Roboto-Medium /Encoding get
dup 46 /g19 put
dup 47 /g20 put
dup 86 /g59 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/GNBUGK+Roboto-Medium*1 
[32{/.notdef}rp /g5 11{/.notdef}rp /g17 /g18 /g19 /g20 17{/.notdef}rp 
/g38 /g39 /g40 /g41 /g42 /g43 /g44 /g45 
/g46 /g47 /.notdef /g49 /g50 /g51 /g52 /g53 
/.notdef /g55 /g56 /g57 /g58 /g59 /g60 /.notdef 
/g62 7{/.notdef}rp /g70 /g71 /g72 /g73 /g74 /g75 
/g76 /g77 /g78 /.notdef /g80 /g81 /g82 /g83 
/g84 /g85 /.notdef /g87 /g88 /g89 /g90 /.notdef 
/g92 /.notdef /g94 134{/.notdef}rp]
GNBUGK+Roboto-Medium nf
GNBUGK+Roboto-Medium*1 [11.52 0 0 -11.52 0 0 ]msf
457.42 777.936 mo
(nVent.com/SCHROFF)
[6.24384 7.31525 6.11716 6.24384 3.72086 3.12201 5.87521 6.48578 9.96484 4.43512 6.84296 7.44189 
8.04095 7.08478 7.79907 6.2439 0 ]xsh
.451331 .358984 .337926 .0108644 cmyk
%ADOBeginSubsetFont: QADAAA+Roboto-Light Initial
ct_T42Dict begin
-0.844 -0.27 2.043 1.055
 256 array 0 1 255 {1 index exch /.notdef put} for  /QADAAA+Roboto-Light
Type42DictBegin
[<0001000000090009000900094f532f32a26bb2130000009c00000060676c
79665642238700004f2c00002516686561640302caf5000000fc00000036
686865611106164f0000013400000024686d74782bb73bf3000001580000
307a6c6f63614cf555b2000031d400001a786d6178700d46008200004c4c
000000206e616d653a006e7e00004c6c000002be67646972000000000000
00000000000000040472012c00050000059a05330000011f059a05330000
03d100660200000002000000000000000000e0000aff5000217f00000021
00000000474f4f4700400000ffff0862fdd500000862022b2000019f0000
0000043a05b0000000200003000100000002235410ca115e5f0f3cf50019
080000000000c4eff50e00000000d54c674df93cfdd5105c087300000009
000200000000000000010000076cfe0c0000110ff93cfc31105b00010000
0000000000000000000000000b02038c0064000000000000000000000000
0000000001f3000001ce009a024d008f0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
01e900920000000004700078047000b30470006900000000000000000000
000000000000000000000470006900000000000000000000000000000000
000000000000000000000000000000000500001f04e700b905320084053e
00b900000000048000b90579009105a900b9022200d400000000050c00b9
043800b906ec00b900000000056b007e04ed00b900000000051500b604bd
005804c700340000000004f00020072c003d0000000004cb001800000000
000000000000000000000000000000000000000000000000044a0065046f
009b0420005f0472006d0423005a02a6003f0471006d0465009c01cc0095
0000000003ec009d01cc00ab071800960466009c047c005b046f009b0000
000002b2009c040e0066029300180465009803d900260609003f00000000
03ce00210000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000666006b
0000000000000000000000000000000000000000000000000000000002e4
004c00000000000000000000000000000000000000000000000002e4007f
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000001c800a80000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000004c3003f
044d0031045b003f06a0003f06a0003f00000000067c0066000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000002e4004c02e4007f02e40057
000000000401005d00000000000000000000000000000000000000000401
005b040100a00401006a0000000004240016000000000627003304440019
048800890421002b0419004b04630098000000000441009a04aa006904e1
009a05f5009a03a2009a0458009a0000000001da00b104dd009a04b20079
03dc009a0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000002e4005000000000000000000000
000003e8009a0437003b00000000054400ba051c00bd03ee009f052900bd
03d6009f0480009a0479006d043c009a0454001800000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000002e4005700000000
00000000000000000000000002e400500000000000000000055d008005a2
0080057900bd05b500800000000003d500a0048200830000000000000000
00000000000000000000000000000000000000000000000005a900b905a9
00b9054c00710566007e08ae00b900000000000000000000000000000000
000000000470007200000000047000380000000000000000047000670470
011000000000000000000000000000000000000000000000000000000000
01c800a80000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000004f9007d000000000000000000000000000000000000000000000000
00000000046e009b042c006004790060047700600483005a0476009b0000
0000000000000423005a0471006d00000000000000000000000000000000
000000000000000000000000000000000382007000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
04700069000000000000000000000000000000000498007d000000000498
008c00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000002a002a002a002a002a002a0043005d005d005d005d
005d005d005d005d005d005d005d005d006d006d009c00af00d900d900d9
00d900d900d9012101210121012101210121012101210121013d017501a4
01cc01cc01e10217022f023d023d025a026a028a028a02bf02e302e3030e
034a035c035c037503a003a003b803b803b803b803b803b803b803b803f8
042d0459048d04bf04e205240546055d055d057a058805bf05e106110645
06450664069b06bf06e006f6072007200745074507450745074507450745
0745074507450745074507450745079e079e079e079e079e079e079e079e
07c607c607c607c607c607c607c607d807d807d807d807d807d807d807d8
07d807d807d807d807d807d807d807d807d807d807d807e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607e607e607e607e607e607e607e607e6
07e607e607e607e607e607e607e607f2081b0842088108be08be09270927
092709270927092709270927092709270927092709270927092709270927
09270927092709270927094f09610986098609cd09cd09cd09cd09cd09cd
09f60a090a350a350a4e0a4e0a780a910ab00ac20afa0b250b250b490b78
0b900bb00bc00bdd0bdd0beb0c030c350c4a0c4a0c4a0c4a0c4a0c4a0c4a
0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a
0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a
0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a
0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c4a0c8d0c8d0c8d
0c8d0ca40d080d080d400d5c0d780d930daf0dd20dfd0e310e4c0e4c0e4c
0e4c0e4c0e4c0e4c0e4c0e4c0e4c0e4c0e4c0e4c0e4c0e4c0e4c0e4c0e4c
0e4c0e4c0e4c0e4c0e4c0e4c0e550e550e550e550e550e5e0e5e0e5e0e92
0ecb0ef50f2f0f2f0f420f6b0f6b0f6b0f6b0f6b0f6b0f6b0f6b0f6b0f8f
0fb10ff5102e106710671067106710671067106f106f107710771077107f
10871087108710871087108710871087108f108f108f108f108f108f108f
108f108f108f108f108f108f108f108f108f108f108f108f108f108f108f
108f108f108f108f108f108f108f108f108f108f108f108f108f108f108f
108f108f108f108f108f108f108f108f108f108f108f108f108f108f108f
108f108f108f108f108f108f108f108f108f108f108f108f108f108f108f
108f108f108f108f108f108f108f108f108f108f108f108f108f108f108f
108f108f108f108f108f108f108f108f108f108f108f108f108f108f108f
108f108f108f108f108f108f108f108f108f108f108f108f108f108f108f
108f108f108f108f108f108f108f108f108f108f108f108f108f108f108f
108f108f108f108f108f108f108f108f108f108f108f108f108f108f108f
108f108f108f108f108f108f108f108f108f108f108f108f108f108f108f
108f108f108f108f108f108f108f108f108f108f108f108f108f108f108f
108f10bf10bf10bf10bf10bf10bf10bf10bf10f411201154119511c511f9
11f911f9122a126b126b126b126b126b126b126b126b126b127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
127312731273127312731273127312731273127312731273127312731273
12731273127312731273127312731273127b127b127b127b127b12831283
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b128b128b128b128b128b128b128b128b128b128b128b128b128b128b
128b000100000d3b00500005003000030001000000000000000000000000
000200010000001000c60003000104090000005e00000003000104090001
0018006c0003000104090002000e008e00030001040900030030005e0003
0001040900040018006c0003000104090005001a009c0003000104090006
001800b60003000104090007004000ce0003000104090008000c001e0003
0001040900090026010e000300010409000b00140134000300010409000c
00140134000300010409000d005c0148000300010409000e005401a40003
000104090010000c00ce0003000104090011000a007a0043006f00700079
007200690067006800740020003200300031003100200047006f006f0067
006c006500200049006e0063002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e0047006f
006f0067006c0065003a0052006f0062006f0074006f0020004c00690067
00680074003a00320030003100370052006500670075006c006100720056
0065007200730069006f006e00200032002e0031003300380052006f0062
006f0074006f002d004c00690067006800740052006f0062006f0074006f
00200069007300200061002000740072006100640065006d00610072006b
0020006f006600200047006f006f0067006c0065002e0043006800720069
0073007400690061006e00200052006f00620065007200740073006f006e
0047006f006f0067006c0065002e0063006f006d004c006900630065006e
00730065006400200075006e006400650072002000740068006500200041
007000610063006800650020004c006900630065006e00730065002c0020
00560065007200730069006f006e00200032002e00300068007400740070
003a002f002f007700770077002e006100700061006300680065002e006f
00720067002f006c006900630065006e007300650073002f004c00490043
0045004e00530045002d0032002e0030000000>
[9495 ] AllocGlyphStorage
]def 
92 28 
PrepFor2015
Type42DictEnd

1 0 5 <> QADAAA+Roboto-Light AddT42Char 
1 186 19 <00010092fff7013c009c0007000037343332151423229254565654495353
5200>QADAAA+Roboto-Light AddT42Char 
1 218 21 <00020078ffec03f705c5000d001900000115100223220211351012333212
03111021201111141233321203f7ebd3d1f0eed1d3ed77feb7feb9a6a3a5
a20355f5febffecd01330141f501400130fed0fdbd011201fbfe05feeef5
fef5010b>QADAAA+Roboto-Light AddT42Char 
1 312 22 <000100b3000002b605b6000600000111231105352502b678fe7501ef05b6
fa4a05209370b900>QADAAA+Roboto-Light AddT42Char 
1 350 23 <000100690000041a05c40018000025152135013636353426232206152334
123332161514020701041afc6f01dd866d9c9498b078eed2c5e3af6ffe69
66665d021c98c75b84a7bf93b50103cfb784fef47efe3600>QADAAA+Roboto-Light AddT42Char 
1 434 29 <0003006affec040905c400170023002f0000011404232224353436372626
353436333216151406071616033426232206151416333236133426232206
1514163332360409fef4c3c4fef4957c6b80f2b6b6f5836b7c989db18385
acad8584af25c59496c0c09896c10182c7cfcfc780bf2b2bb073beccccbe
74af2b2bbf023880a49c88829a9afdca8caaaa8c929e9e00>QADAAA+Roboto-Light AddT42Char 
1 578 38 <0002001f000004e105b00007000a000033013301230321031321011f0226
7502278096fd6a96bd0248fedc05b0fa500198fe680201031a00>QADAAA+Roboto-Light AddT42Char 
1 962 44 <00010091ffec04d305c4001f000001110606232000113510002132041723
2626232202151514123332363711213504d326efe5fefffeb9012f0106f3
0101187b16b6c5d5e4fdd0a6ba1ffe7902b4fdfa378b01680131b1012c01
62f6b882c3fed3f6b3fefecd592601786900>QADAAA+Roboto-Light AddT42Char 
1 1070 45 <000100b9000004ef05b0000b00002111211123113311211133110474fcc0
7b7b03407b02bafd4605b0fd73028dfa5000>QADAAA+Roboto-Light AddT42Char 
1 1564 56 <00010058ffec046d05c40027000001342627262435342433320415233426
23220615141617161615140423222626353314161633323603f1abe3dcff
000112d7e6010d7bc6b2b5b8a9dde8fcfee5da82faa47c7fc164accd0166
798e403db6aca8d0fdb68fbb9f6d69923b3fc1b1b2ca5ac09a7b91409700
>QADAAA+Roboto-Light AddT42Char 
1 1720 59 <00010020000004d105b00008000001012301330117370104d1fde276fde3
8601c9090801cb05b0fa5005b0fb051f1f04fb00>QADAAA+Roboto-Light AddT42Char 
1 1904 70 <00020065ffec03c8044e0020002b00002126262706062322263534243333
353426232206152734363332161511141617152532363735232206151416
03480a0c0236b8809fbe0108e5dd90877ea478e6b9addd1110fe0782b727
cdb8ce821c52294566af849fb87a7486805b017ac4b0b0fdf53879250d56
7c59ef8071587b00>QADAAA+Roboto-Light AddT42Char 
1 2032 71 <0002009bffec040406000011001f00000114022322262707231133113636
3332121501220607111616333212353534020404d9c476ab3506707836a7
75c6d9fe4a879321259c7ca497950212f2fecc5b4e950600fd9e535dfed5
fc01bf8756fe1756760101bd15bd0102>QADAAA+Roboto-Light AddT42Char 
1 2138 72 <0001005fffec03cc044e001b000025323637330606232202353534123332
161723262623220215151412022d71b3097208f2a5e4eaeae2aeeb087208
ac7bb99c9c52817c9bc80138e42ae40138d0b08397fef6ac2aadfef7>QADAAA+Roboto-Light AddT42Char 
1 2226 73 <0002006dffec03d406000011001f00002127060623220235353412333216
17113311011412333236371126262322021503640635a875bfe0e0c173a5
3678fd119ba37a9728239282a59b914d580134f215fc012b5a51025dfa00
0212bdfeff6f5401ff527efefebd>QADAAA+Roboto-Light AddT42Char 
1 2330 74 <0002005affec03d6044e0015001d00002506062322003535340033321215
1521151416333237012206072135262603bf35ba91d3feee0117b9cedefc
fccda5bf70feb789b71302870399ac4f71012ae92bfa012afee9d84917b3
fb940303c8a40d88d700>QADAAA+Roboto-Light AddT42Char 
1 2430 75 <0001003f000002b206150015000001211123112335333534363332170726
232206151521026dfefd77b4b4ab94443c09313d6170010303d8fc2803d8
6287a4b011640c7a7187>QADAAA+Roboto-Light AddT42Char 
1 2500 76 <0002006dfe5003d4044e001c002a00002514062322262737163332363535
060623220235353412333216173733011412333236371126262322021503
d4edc565d341437db299a836a773c1dedec374a7360570fd119ba37b9727
229184a59b13d3f05d5c499cb6a37e4b560134f215fc012b5d529bfdd8bd
feff725601f45383fefebd00>QADAAA+Roboto-Light AddT42Char 
1 2632 77 <0001009c000003cd06000013000001220607112311331136363332161511
2311342602567ea123787838b474a1b8788903e79d62fd180600fd855b6e
b7d6fd3f02c1a87e>QADAAA+Roboto-Light AddT42Char 
1 2700 78 <000200950000013a05c40007000b00001334333215142322171123119552
5353528d77057351514feafbc6043a00>QADAAA+Roboto-Light AddT42Char 
1 2746 80 <0001009d000003e30600000c0000210107112311331137013301010353fe
4a89777771019f97fe3501f3022184fe630600fc2a7a0196fe38fd8e>QADAAA+Roboto-Light AddT42Char 
1 2804 81 <000100ab00000122060000030000011123110122770600fa00060000>QADAAA+Roboto-Light AddT42Char 
1 2832 82 <0001009600000684044e0022000001220607112311331736363332161736
36333216151123113426070606071123113426024988961d78740336b178
77a92434bc82a9b9779375979d09789203e79e61fd18043ab0596b636f5c
76bad3fd3f02c2ac7a0101bb5ffd3402cca17a00>QADAAA+Roboto-Light AddT42Char 
1 2942 83 <0001009c000003cd044e0013000001220607112311331736363332161511
2311342602567ea12378730438b574a1b8788903e79d62fd18043ab75c6f
b7d6fd3f02c1a87e>QADAAA+Roboto-Light AddT42Char 
1 3010 84 <0002005bffec0421044e000d001b00001335340033320015151400232200
13151412333212353534022322025b0108dadd0107fef9dbdcfef878bbb1
afbbbcb0afbb020d20ec0135fecbec20edfecc0134010d20b3fef80108b3
20af010cfef4>QADAAA+Roboto-Light AddT42Char 
1 3106 85 <0002009bfe600403044e0011001f00000522262711231133173636333212
151514020322060711161633321235353402026673a93778700637a973c6
d9d9e1819223279879a39d9d145449fdd705da99525bfed5fc15f2fecc03
fa7d51fdf6516b0103bd15bd0102>QADAAA+Roboto-Light AddT42Char 
1 3210 87 <0001009c00000294044e0010000001220607112311331736363332170726
26024079951e7875032c976d302004142603dc876bfd16043aa957660c6d
0304>QADAAA+Roboto-Light AddT42Char 
1 3272 88 <00010066ffec039d044e0025000001342627262635343633321615233426
2322061514161716161514062322263533161633323603256db5b5c4cdb0
bcd47990878c7a6bb6c4b7d9b6ceda7708c267888f0114437b2626848679
adb88b548978444862292d918186a8c57f805e76>QADAAA+Roboto-Light AddT42Char 
1 3382 89 <00010018ffec024a05500016000005062322263511233533113311331523
11141633323637024a2e526884c6c679dfdf55371c3115041079a302d062
0116feea62fd307241070400>QADAAA+Roboto-Light AddT42Char 
1 3454 90 <00010098ffec03ca043a0013000021270606232226351133111416333236
3711331103570332aa7c9fc57893678f9b1e78894954bcde02b4fd4aad83
795c0311fbc6>QADAAA+Roboto-Light AddT42Char 
1 3520 91 <00010026000003b2043a000600000101230133010103b2fe6b61fe6a7c01
4c0148043afbc6043afc6a039600>QADAAA+Roboto-Light AddT42Char 
1 3564 92 <0001003f000005c2043a0012000001012301270701230133131737013301
17371305c2fec566fee90c0efeef66fec67be6121701046701001d16df04
3afbc6035b3b3cfca6043afcbf5b60033cfccb7168033e00>QADAAA+Roboto-Light AddT42Char 
1 3648 94 <00010021fe4b03b0043a00130000050e0223222735161633323637370133
01013301e61242786335270b2a0862682235fe68820151013b81ae317b5b
0d6403046361900431fc72038e00>QADAAA+Roboto-Light AddT42Char 
1 3722 108 <0003006bffeb05f705c4000f001f00390000133412243332041215140204
232224023714120433322412353402242322040201331406232226353534
363332161523342322061515141633326bc00143c3c40142c0c0febec4c3
febdc056a9011cabab011ca9a9fee4ababfee4a9033e63ab9097b6b69790
ac63d971787871d802d9d30153c5c5feadd3d3feacc7c70154d3bafed3b0
b0012dbaba012bb0b0fed5fecc9d9dd7ac61acd79c9ddfaa7e6280a8>QADAAA+Roboto-Light AddT42Char 
1 0 0 <000500640000032805b0000300060009000c000f00003311211109020301
110511010321016402c4fd9a01020101e50112fda8010ce40203feff05b0
fa50057afda2025efd5efd7c05080cfb100278fd5e025e00>QADAAA+Roboto-Light AddT42Char 
QADAAA+Roboto-Light /CharStrings get begin
/g5 5 def
/g19 19 def
/g21 21 def
/g22 22 def
/g23 23 def
/g29 29 def
/g38 38 def
/g44 44 def
/g45 45 def
/g56 56 def
/g59 59 def
/g70 70 def
/g71 71 def
/g72 72 def
/g73 73 def
/g74 74 def
/g75 75 def
/g76 76 def
/g77 77 def
/g78 78 def
/g80 80 def
/g81 81 def
/g82 82 def
/g83 83 def
/g84 84 def
/g85 85 def
/g87 87 def
/g88 88 def
/g89 89 def
/g90 90 def
/g91 91 def
/g92 92 def
/g94 94 def
/g108 108 def
end
QADAAA+Roboto-Light /Encoding get
dup 32 /g5 put
dup 46 /g19 put
dup 48 /g21 put
dup 49 /g22 put
dup 50 /g23 put
dup 56 /g29 put
dup 65 /g38 put
dup 71 /g44 put
dup 72 /g45 put
dup 83 /g56 put
dup 86 /g59 put
dup 97 /g70 put
dup 98 /g71 put
dup 99 /g72 put
dup 100 /g73 put
dup 101 /g74 put
dup 102 /g75 put
dup 103 /g76 put
dup 104 /g77 put
dup 105 /g78 put
dup 107 /g80 put
dup 108 /g81 put
dup 109 /g82 put
dup 110 /g83 put
dup 111 /g84 put
dup 112 /g85 put
dup 114 /g87 put
dup 115 /g88 put
dup 116 /g89 put
dup 117 /g90 put
dup 118 /g91 put
dup 119 /g92 put
dup 121 /g94 put
dup 169 /g108 put
pop
end
%ADOEndSubsetFont
/GNBUGO+Roboto-Light /QADAAA+Roboto-Light findfont ct_VMDictPut
/GNBUGO+Roboto-Light*1 
[32{/.notdef}rp /g5 13{/.notdef}rp /g19 /.notdef /g21 /g22 /g23 
5{/.notdef}rp /g29 8{/.notdef}rp /g38 5{/.notdef}rp /g44 /g45 10{/.notdef}rp 
/g56 2{/.notdef}rp /g59 10{/.notdef}rp /g70 /g71 /g72 /g73 
/g74 /g75 /g76 /g77 /g78 /.notdef /g80 /g81 
/g82 /g83 /g84 /g85 /.notdef /g87 /g88 /g89 
/g90 /g91 /g92 /.notdef /g94 47{/.notdef}rp /g108 86{/.notdef}rp]
GNBUGO+Roboto-Light nf
GNBUGO+Roboto-Light*1 [5.04 0 0 -5.04 0 0 ]msf
35.64 812.04 mo
(\2512018)
[4.07738 2.76188 2.76189 2.76188 0 ]xsh
51.96 812.04 mo
(nVent.)
[2.77201 3.1097 2.63087 2.64098 1.67331 0 ]xsh
67.224 812.04 mo
(All)
[3.11976 1.07859 0 ]xsh
73.704 812.04 mo
(nVent)
[2.77202 2.98874 2.63591 2.77202 0 ]xsh
87.624 812.04 mo
(marks)
[4.44021 2.75686 1.56242 2.51499 0 ]xsh
102.5 812.04 mo
(and logos)
[2.75686 2.77201 2.7468 1.19953 1.0786 2.87282 2.76189 2.87282 0 ]xsh
125.18 812.04 mo
(are owned or)
[2.75686 1.67834 2.63591 1.07858 2.87282 3.71951 2.77202 2.62079 2.76192 1.19954 2.87282 0 
]xsh
154.94 812.04 mo
(licensed by)
[1.0786 1.07858 2.63596 2.63591 2.77202 2.50993 2.63591 2.76192 1.19954 2.76192 0 ]xsh
180.53 812.04 mo
(nVent)
[2.77202 3.1097 2.63087 2.64098 0 ]xsh
194.45 812.04 mo
(Services)
[2.99373 2.63593 1.67834 2.39905 1.0786 2.52003 2.63591 0 ]xsh
214.13 812.04 mo
(GmbH)
[3.4726 4.4402 2.64096 0 ]xsh
229.37 812.04 mo
(or)
[2.88007 0 ]xsh
235.13 812.04 mo
(its)
[1.0786 1.67331 0 ]xsh
241.49 812.04 mo
(affiliates.)
[2.75685 1.66821 1.68837 1.07858 1.0786 1.07858 2.75687 1.56242 2.63591 2.52002 0 ]xsh
262.73 812.04 mo
(All)
[3.11975 1.07861 0 ]xsh
269.21 812.04 mo
(other)
[2.76193 1.67331 2.76694 2.51495 0 ]xsh
281.83 812.04 mo
(trademarks)
[1.67331 1.67834 2.75687 2.64096 2.63589 4.44022 2.75687 1.56241 2.51498 0 ]xsh
308.11 812.04 mo
(are the property)
[2.75687 1.67834 2.63589 1.07858 1.67331 2.76694 2.62585 1.19952 2.76193 1.56241 2.87283 2.76193 
2.63589 1.67834 1.56244 0 ]xsh
343.87 812.04 mo
(of)
[2.88007 0 ]xsh
349.51 812.04 mo
(their)
[1.67331 2.76694 2.62582 1.07861 0 ]xsh
360.55 812.04 mo
(respective owners.)
[1.67834 2.63593 2.52002 2.64096 2.63589 2.52005 1.67331 1.07858 2.39905 2.63593 1.19952 2.76196 
3.83542 2.772 2.62079 1.67838 2.52002 0 ]xsh
35.64 818.88 mo
(nVent reserves the right to change specifications without notice.)
[2.77201 3.1097 2.63087 2.64098 1.67331 1.19954 1.67835 2.63591 2.52002 2.63591 1.67834 2.39906 
2.63591 2.52002 1.07858 1.67331 2.76694 2.62582 1.19954 1.67835 1.07859 2.76189 2.76694 1.66827 
1.07858 1.67332 2.87282 1.07858 2.63595 2.64094 2.75686 2.77202 2.74676 2.63591 1.19954 2.52002 
2.76192 2.51999 2.63595 1.0786 1.66821 1.09371 2.63596 2.64095 1.67331 1.07858 2.87283 2.77202 
2.50993 1.07858 3.83542 1.07858 1.67332 2.76694 2.75188 2.64093 1.67331 1.19954 2.77202 2.74681 
1.67331 1.0786 2.63596 2.63591 0 ]xsh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/GNBUGK+Roboto-Medium*1 uf
/GNBUGK+Roboto-Medium uf
/KADAAA+Roboto-Medium uf
/GNBUGO+Roboto-Light*1 uf
/GNBUGO+Roboto-Light uf
/QADAAA+Roboto-Light uf
/GNBUGN+Roboto-Bold*1 uf
/GNBUGN+Roboto-Bold uf
/OADAAA+Roboto-Bold uf
/GNBUGL+GillSansMT*1 uf
/GNBUGL+GillSansMT uf
/MADAAA+GillSansMT uf
/GNBUGJ+RobotoCondensed-Bold*1 uf
/GNBUGJ+RobotoCondensed-Bold uf
/DBAAAA+RobotoCondensed-Bold uf
/GNBUGM+TrebuchetMS*1 uf
/GNBUGM+TrebuchetMS uf
/ZAAAAA+TrebuchetMS uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
